import{_ as n,c as a,a as l,o as e}from"./app-5eYbtFQ0.js";const p={};function o(i,s){return e(),a("div",null,s[0]||(s[0]=[l(`<h1 id="python编程-从入门到实践" tabindex="-1"><a class="header-anchor" href="#python编程-从入门到实践"><span>Python编程：从入门到实践</span></a></h1><p>格式缩进建议为4个空格</p><h2 id="一、基础知识" tabindex="-1"><a class="header-anchor" href="#一、基础知识"><span>一、基础知识</span></a></h2><p>在 Python 中，注释用井号（#）标识。</p><p>也可用三引号做多行注释</p><h3 id="_1、字符串" tabindex="-1"><a class="header-anchor" href="#_1、字符串"><span>1、字符串</span></a></h3><h4 id="三引号" tabindex="-1"><a class="header-anchor" href="#三引号"><span>三引号</span></a></h4><p>三个引号（三个单引号或三个双引号）可以创建跨行字符串</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;&quot;&quot;Hello Python world!</span></span></span>
<span class="line"><span class="line"><span style="color:#CE9178;">Hello iTuring!&quot;&quot;&quot;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">Hello Python world!</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">Hello iTuring!</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="大小写修改" tabindex="-1"><a class="header-anchor" href="#大小写修改"><span>大小写修改</span></a></h4><ul><li>upper()：将字符串全部改为大写</li><li>lower()：将字符串全部改为小写</li><li>title()：每个单词的首字母大写</li></ul><p>ps：原始字符串不会被修改</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#4EC9B0;">str</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&#39;hello world&#39;</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(</span><span style="color:#4EC9B0;">str</span><span style="color:#D4D4D4;">.title())</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(</span><span style="color:#4EC9B0;">str</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; Hello World</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; hello world</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="在字符串中使用变量" tabindex="-1"><a class="header-anchor" href="#在字符串中使用变量"><span>在字符串中使用变量</span></a></h4><p>可以在 f 字符串中，使用花括号来引用代码中定义的变量。f 是 format 的简写</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#D4D4D4;">name = </span><span style="color:#CE9178;">&#39;Eric&#39;</span></span></span>
<span class="line"><span class="line"><span style="color:#4EC9B0;">str</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">f</span><span style="color:#CE9178;">&#39;Hello </span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;">name</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">, would you like to learn some Python today?&#39;</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(</span><span style="color:#4EC9B0;">str</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; Hello Eric, would you like to learn some Python today</span><span style="color:#F44747;">?</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用format格式化字符串</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#D4D4D4;">name=</span><span style="color:#CE9178;">&#39;张三&#39;</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">year=</span><span style="color:#CE9178;">&#39;龙&#39;</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">message_content1 = </span><span style="color:#CE9178;">&#39;祝</span><span style="color:#569CD6;">{0}</span><span style="color:#CE9178;">，新春快乐，</span><span style="color:#569CD6;">{1}</span><span style="color:#CE9178;">年大吉&#39;</span><span style="color:#D4D4D4;">.format(name, year)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">message_content2 = </span><span style="color:#CE9178;">&#39;祝</span><span style="color:#569CD6;">{current_name}</span><span style="color:#CE9178;">，新春快乐，</span><span style="color:#569CD6;">{current_year}</span><span style="color:#CE9178;">年大吉&#39;</span><span style="color:#D4D4D4;">.format(</span><span style="color:#9CDCFE;">current_name</span><span style="color:#D4D4D4;"> = name, </span><span style="color:#9CDCFE;">current_year</span><span style="color:#D4D4D4;"> = year)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">message_content3 = </span><span style="color:#CE9178;">&#39;祝</span><span style="color:#569CD6;">{name}</span><span style="color:#CE9178;">，新春快乐，</span><span style="color:#569CD6;">{year}</span><span style="color:#CE9178;">年大吉&#39;</span><span style="color:#D4D4D4;">.format(</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;"> = name, </span><span style="color:#9CDCFE;">year</span><span style="color:#D4D4D4;"> = year)</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(message_content1)</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(message_content2)</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(message_content3)</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>数字格式化字符串，使用 .数字f 保留小数位</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#D4D4D4;">num = </span><span style="color:#B5CEA8;">98.7675</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">f</span><span style="color:#CE9178;">&#39;你的分数是</span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;">num</span><span style="color:#569CD6;">: .2f}</span><span style="color:#CE9178;">&#39;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; </span><span style="color:#B5CEA8;">98.77</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="删除空白" tabindex="-1"><a class="header-anchor" href="#删除空白"><span>删除空白</span></a></h4><ul><li>lstrip()：移除左端的空白</li><li>rstrip()：移除右端的空白</li><li>strip() ：移除两端的空白</li></ul><p>ps：原始字符串不会被修改</p><h4 id="删除前缀" tabindex="-1"><a class="header-anchor" href="#删除前缀"><span>删除前缀</span></a></h4><p>removeprefix()：移除字符串中指定的前缀</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#D4D4D4;">url = </span><span style="color:#CE9178;">&#39;https://www.ituring.com.cn&#39;</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">url = url.removeprefix(</span><span style="color:#CE9178;">&#39;https://&#39;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(url)</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; www.ituring.com.cn</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="删除后缀" tabindex="-1"><a class="header-anchor" href="#删除后缀"><span>删除后缀</span></a></h4><p>removesuffix()：移除字符串中指定的前缀</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#D4D4D4;">file_name = </span><span style="color:#CE9178;">&#39;python_notes.txt&#39;</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(file_name.removesuffix(</span><span style="color:#CE9178;">&#39;.txt&#39;</span><span style="color:#D4D4D4;">))</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt;python_notes</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2、数" tabindex="-1"><a class="header-anchor" href="#_2、数"><span>2、数</span></a></h3><p>高级计算：math库</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">0.1</span><span style="color:#D4D4D4;">+</span><span style="color:#B5CEA8;">0.2</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt;</span><span style="color:#B5CEA8;">0.30000000000000004</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>将任意两个数相除，结果总是浮点数，即便这两个数都是整数且能整除</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">4</span><span style="color:#D4D4D4;">/</span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; </span><span style="color:#B5CEA8;">2</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>双斜杠（//）：表示整数除法</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">4</span><span style="color:#D4D4D4;"> // </span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; </span><span style="color:#B5CEA8;">1</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>双乘号（ **）：表示乘方运算</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">4.0</span><span style="color:#D4D4D4;">**</span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; </span><span style="color:#B5CEA8;">16.0</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>求模（%）：两个数相除并返回余数</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">9</span><span style="color:#D4D4D4;"> % </span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; </span><span style="color:#B5CEA8;">1</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>在 Python 中，无论是哪种运算，只要有操作数是浮点数，默认得到的就总是浮点数，即便结果原本为整数。</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">1.5</span><span style="color:#D4D4D4;">+</span><span style="color:#B5CEA8;">1.5</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; </span><span style="color:#B5CEA8;">3.0</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">1.5</span><span style="color:#D4D4D4;"> // </span><span style="color:#B5CEA8;">1.5</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; </span><span style="color:#B5CEA8;">1.0</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">1.5</span><span style="color:#D4D4D4;"> - </span><span style="color:#B5CEA8;">1.5</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; </span><span style="color:#B5CEA8;">0.0</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在书写很大的数时，可使用下划线将其中的位分组，使其更清晰易读</p><p>当你打印这种使用下划线定义的数字时，Python不会打印其中的下划线</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#D4D4D4;">universe_age = </span><span style="color:#B5CEA8;">14_000_000_000</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(universe_age)</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; </span><span style="color:#B5CEA8;">14000000000</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>同时给多个变量赋值</p><p>需要用逗号将变量名分开； 对于要赋给变量的值，也需要做同样的处理</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#D4D4D4;">x, y, z = </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Python 没有内置的常量支持，我们给出的是一个约定俗成的惯例。</p><p>使用全大写字母（单词由下划线分割）来将某个变量视为常量</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#D4D4D4;">MAX_CONNECTIONS = </span><span style="color:#B5CEA8;">5000</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_3、数据类型" tabindex="-1"><a class="header-anchor" href="#_3、数据类型"><span>3、数据类型</span></a></h3><p>type函数：返回数据类型</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#4EC9B0;">type</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;hello&#39;</span><span style="color:#D4D4D4;">)  =&gt;  &lt;</span><span style="color:#569CD6;">class</span><span style="color:#CE9178;"> &#39;str&#39;</span><span style="color:#D4D4D4;">&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#4EC9B0;">type</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">6</span><span style="color:#D4D4D4;">)        =&gt;  &lt;</span><span style="color:#569CD6;">class</span><span style="color:#CE9178;"> &#39;int&#39;</span><span style="color:#D4D4D4;">&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#4EC9B0;">type</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">6.0</span><span style="color:#D4D4D4;">)      =&gt;  &lt;</span><span style="color:#569CD6;">class</span><span style="color:#CE9178;"> &#39;float&#39;</span><span style="color:#D4D4D4;">&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#4EC9B0;">type</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">True</span><span style="color:#D4D4D4;">)     =&gt;  &lt;</span><span style="color:#569CD6;">class</span><span style="color:#CE9178;"> &#39;bool&#39;</span><span style="color:#D4D4D4;">&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#4EC9B0;">type</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">None</span><span style="color:#D4D4D4;">)     =&gt;  &lt;</span><span style="color:#569CD6;">class</span><span style="color:#CE9178;"> &#39;NoneType&#39;</span><span style="color:#D4D4D4;">&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#4EC9B0;">type</span><span style="color:#D4D4D4;">([</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">,</span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">])    =&gt;  &lt;</span><span style="color:#569CD6;">class</span><span style="color:#CE9178;"> &#39;list&#39;</span><span style="color:#D4D4D4;">&gt;</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>字符串 str</p><p>获取长度：len()</p><p>注意：完整的转义符占一个长度</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">len</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;</span><span style="color:#D7BA7D;">\\n</span><span style="color:#CE9178;">&#39;</span><span style="color:#D4D4D4;">))</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; </span><span style="color:#B5CEA8;">1</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">len</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;hello</span><span style="color:#D7BA7D;">\\n</span><span style="color:#CE9178;">&#39;</span><span style="color:#D4D4D4;">))</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; </span><span style="color:#B5CEA8;">6</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;hello&#39;</span><span style="color:#D4D4D4;">[</span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">])</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; l</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>整数 int</p></li><li><p>浮点数 float</p></li><li><p>布尔类型 bool：True、False（注意大写开头）</p></li><li><p>空值类型 NoneType：None（它表示完全没有值）</p><p>None ≠ 0</p><p>None ≠ &quot;&quot;</p><p>None ≠ false</p></li><li><p>列表 list</p></li><li><p>字典</p></li><li><p>...</p></li></ul><h3 id="_4、列表" tabindex="-1"><a class="header-anchor" href="#_4、列表"><span>4、列表</span></a></h3><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#D4D4D4;">names = [</span><span style="color:#CE9178;">&#39;aaa&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;bbb&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;ccc&#39;</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(names)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; [</span><span style="color:#CE9178;">&#39;aaa&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;bbb&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;ccc&#39;</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># 每当需要访问最后一个列表元素时，都可以使用索引 -1</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(names[-</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">])</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; ccc</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># 仅当列表为空时，这种访问最后一个元素的方式才会导致错误</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">names = []</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(names[-</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">])</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; 报错</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="添加元素" tabindex="-1"><a class="header-anchor" href="#添加元素"><span>添加元素</span></a></h4><p>1、使用append() 方法在列表末尾添加元素</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#D4D4D4;">names = [</span><span style="color:#CE9178;">&#39;aaa&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;bbb&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;ccc&#39;</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(names)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; [</span><span style="color:#CE9178;">&#39;aaa&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;bbb&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;ccc&#39;</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">names.append(</span><span style="color:#CE9178;">&#39;ddd&#39;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(names)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; [</span><span style="color:#CE9178;">&#39;aaa&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;bbb&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;ccc&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;ddd&#39;</span><span style="color:#D4D4D4;">]</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2、使用 insert() 方法在列表的任意位置添加新元素</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#D4D4D4;">names = [</span><span style="color:#CE9178;">&#39;aaa&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;bbb&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;ccc&#39;</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">names.insert(</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">111</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(names)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; [</span><span style="color:#B5CEA8;">111</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;aaa&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;bbb&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;ccc&#39;</span><span style="color:#D4D4D4;">]</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="删除元素" tabindex="-1"><a class="header-anchor" href="#删除元素"><span>删除元素</span></a></h4><p>1、使用 del 语句删除元素</p><p>如果知道要删除的元素在列表中的位置，可使用 del 语句</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#D4D4D4;">names = [</span><span style="color:#CE9178;">&#39;aaa&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;bbb&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;ccc&#39;</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">del</span><span style="color:#D4D4D4;"> names[</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(names)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; [</span><span style="color:#CE9178;">&#39;aaa&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;ccc&#39;</span><span style="color:#D4D4D4;">]</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2、使用 pop() 方法删除元素</p><p>pop() 方法删除列表末尾的元素，并让你能够接着使用它</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#D4D4D4;">names = [</span><span style="color:#CE9178;">&#39;aaa&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;bbb&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;ccc&#39;</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"><span style="color:#4EC9B0;">str</span><span style="color:#D4D4D4;"> = names.pop()</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(</span><span style="color:#4EC9B0;">str</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; ccc</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(names)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; [</span><span style="color:#CE9178;">&#39;aaa&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;bbb&#39;</span><span style="color:#D4D4D4;">]</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>也可以使用 pop() 删除列表中任意位置的元素，只需要在括号中指定要删除的元素的索引即可</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#D4D4D4;">names = [</span><span style="color:#CE9178;">&#39;aaa&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;bbb&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;ccc&#39;</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">names.pop(</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(names)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; [</span><span style="color:#CE9178;">&#39;aaa&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;ccc&#39;</span><span style="color:#D4D4D4;">]</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果不确定该使用 del 语句还是 pop() 方法，下面是一个简单的判断标准：</p><p>如果要从列表中删除一个元素，且不再以任何方式使用它，就使用 del 语句；</p><p>如果要在删除元素后继续使用它，就使用pop() 方法。</p><p>3、根据值删除元素</p><p>如果只知道要删除的元素的值，可使用remove() 方法。</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#D4D4D4;">names = [</span><span style="color:#CE9178;">&#39;aaa&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;bbb&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;ccc&#39;</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"><span style="color:#4EC9B0;">str</span><span style="color:#D4D4D4;"> = names.remove(</span><span style="color:#CE9178;">&#39;aaa&#39;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(</span><span style="color:#4EC9B0;">str</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; </span><span style="color:#569CD6;">None</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(names)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; [</span><span style="color:#CE9178;">&#39;bbb&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;ccc&#39;</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">names.remove(</span><span style="color:#CE9178;">&#39;ddd&#39;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(names)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; 删除不存在的值会报错</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>remove() 方法只删除第一个指定的值。</p><p>如果要删除的值可能在列表中出现多次，就需要使用循环，确保将每个值都删除</p><h4 id="列表排序" tabindex="-1"><a class="header-anchor" href="#列表排序"><span>列表排序</span></a></h4><p>1、使用 sort() 方法对列表进行永久排序</p><p>根据字母顺序排序</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#D4D4D4;">cars = [</span><span style="color:#CE9178;">&#39;bmw&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;audi&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;toyota&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;subaru&#39;</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">cars.sort()</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(cars)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; [</span><span style="color:#CE9178;">&#39;audi&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;bmw&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;subaru&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;toyota&#39;</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">cars = [</span><span style="color:#CE9178;">&#39;bmw&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;audi&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;Toyota&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;subaru&#39;</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">cars.sort()</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(cars)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; [</span><span style="color:#CE9178;">&#39;Toyota&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;audi&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;bmw&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;subaru&#39;</span><span style="color:#D4D4D4;">]</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>还可以按与字母顺序相反的顺序排列列表元素，只需向 sort() 方法传递参数 reverse=True 即可</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#D4D4D4;">cars = [</span><span style="color:#CE9178;">&#39;bmw&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;audi&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;toyota&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;subaru&#39;</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">cars.sort(</span><span style="color:#9CDCFE;">reverse</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">True</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(cars)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; [</span><span style="color:#CE9178;">&#39;toyota&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;subaru&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;bmw&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;audi&#39;</span><span style="color:#D4D4D4;">]</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2、使用 sorted() 函数对列表进行临时排序</p><p>要保留列表元素原来的排列顺序，并以特定的顺序呈现它们，可使用 sorted() 函数</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#D4D4D4;">cars = [</span><span style="color:#CE9178;">&#39;bmw&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;audi&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;toyota&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;subaru&#39;</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">new_cars = </span><span style="color:#DCDCAA;">sorted</span><span style="color:#D4D4D4;">(cars)</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(new_cars)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; [</span><span style="color:#CE9178;">&#39;audi&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;bmw&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;subaru&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;toyota&#39;</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(cars)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; [</span><span style="color:#CE9178;">&#39;bmw&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;audi&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;toyota&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;subaru&#39;</span><span style="color:#D4D4D4;">]</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果要按与字母顺序相反的顺序显示列表，也可向 sorted() 函数传递参数 reverse=True</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#D4D4D4;">cars = [</span><span style="color:#CE9178;">&#39;bmw&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;audi&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;toyota&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;subaru&#39;</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">new_cars = </span><span style="color:#DCDCAA;">sorted</span><span style="color:#D4D4D4;">(cars, </span><span style="color:#9CDCFE;">reverse</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">True</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(new_cars)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; [</span><span style="color:#CE9178;">&#39;toyota&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;subaru&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;bmw&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;audi&#39;</span><span style="color:#D4D4D4;">]</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>3、使用reverse()方法反转列表</p><p>reverse() 方法会永久地修改列表元素的排列顺序</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#D4D4D4;">cars = [</span><span style="color:#CE9178;">&#39;bmw&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;audi&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;toyota&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;subaru&#39;</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">cars.reverse()</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(cars)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; [</span><span style="color:#CE9178;">&#39;subaru&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;toyota&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;audi&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;bmw&#39;</span><span style="color:#D4D4D4;">]</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>4、使用len()函数获取列表长度</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#D4D4D4;">cars = [</span><span style="color:#CE9178;">&#39;bmw&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;audi&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;toyota&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;subaru&#39;</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">len</span><span style="color:#D4D4D4;">(cars))</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; </span><span style="color:#B5CEA8;">4</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="遍历列表" tabindex="-1"><a class="header-anchor" href="#遍历列表"><span>遍历列表</span></a></h4><p>使用for循环遍历列表（注意别忘了冒号和缩进！）</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#6A9955;"># 格式</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">for</span><span style="color:#D4D4D4;"> 变量名 </span><span style="color:#C586C0;">in</span><span style="color:#D4D4D4;"> 可迭代对象:</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">  # 对每个变量做一些事情...</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>每行缩进的代码都是循环的一部分，将针对列表中的每个值执行一次</p><p>为避免意外的缩进错误，请只缩进需要缩进的代码</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#D4D4D4;">names = [</span><span style="color:#CE9178;">&#39;aaa&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;bbb&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;ccc&#39;</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">for</span><span style="color:#D4D4D4;"> name </span><span style="color:#C586C0;">in</span><span style="color:#D4D4D4;"> names:</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">  print</span><span style="color:#D4D4D4;">(name)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  </span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; </span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">aaa</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">bbb</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">ccc</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="使用range-函数创建数值列表" tabindex="-1"><a class="header-anchor" href="#使用range-函数创建数值列表"><span>使用range()函数创建数值列表</span></a></h4><p>1、使用range()函数快速生成一系列数</p><p>range() 函数让 Python 从指定的第一个值开始数，并在到达指定的第二个值时停止，因此输出不包含第二个值</p><p>当只有一个值时，起始值默认为0，结束值为该值</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#6A9955;"># 打印1-4，不会打印5</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">for</span><span style="color:#D4D4D4;"> num </span><span style="color:#C586C0;">in</span><span style="color:#DCDCAA;"> range</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">5</span><span style="color:#D4D4D4;">):</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">  print</span><span style="color:#D4D4D4;">(num)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  </span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#B5CEA8;">1</span></span></span>
<span class="line"><span class="line"><span style="color:#B5CEA8;">2</span></span></span>
<span class="line"><span class="line"><span style="color:#B5CEA8;">3</span></span></span>
<span class="line"><span class="line"><span style="color:#B5CEA8;">4</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">for</span><span style="color:#D4D4D4;"> num </span><span style="color:#C586C0;">in</span><span style="color:#DCDCAA;"> range</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">5</span><span style="color:#D4D4D4;">):</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">  print</span><span style="color:#D4D4D4;">(num)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#B5CEA8;">0</span></span></span>
<span class="line"><span class="line"><span style="color:#B5CEA8;">1</span></span></span>
<span class="line"><span class="line"><span style="color:#B5CEA8;">2</span></span></span>
<span class="line"><span class="line"><span style="color:#B5CEA8;">3</span></span></span>
<span class="line"><span class="line"><span style="color:#B5CEA8;">4</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2、使用range()函数创建数值列表</p><p>可使用 list() 函数将 range() 的结果直接转换为列表。</p><p>如果将 range() 作为list() 的参数，输出将是一个数值列表。</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#D4D4D4;">nums = </span><span style="color:#4EC9B0;">list</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">range</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">5</span><span style="color:#D4D4D4;">))</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(nums)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; [</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">4</span><span style="color:#D4D4D4;">]</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以给range() 函数指定第三个参数（步长），Python 将根据这个步长来生成数。</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#6A9955;"># 打印1-10以内的奇数</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># 从1开始，不断加2</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">nums = </span><span style="color:#4EC9B0;">list</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">range</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">10</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">))</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(nums)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; [</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">5</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">7</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">9</span><span style="color:#D4D4D4;">]</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>应用：前10 个整数的平方加入一个列表</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#D4D4D4;">nums = []</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">for</span><span style="color:#D4D4D4;"> num </span><span style="color:#C586C0;">in</span><span style="color:#DCDCAA;"> range</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">11</span><span style="color:#D4D4D4;">):</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  nums.append(num ** </span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(nums)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; [</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">4</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">9</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">16</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">25</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">36</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">49</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">64</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">81</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">100</span><span style="color:#D4D4D4;">]</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>3、数值列表统计</p><p>数值列表中的最大值（max）、最小值（min）和总和（sum）</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#D4D4D4;">digits = [</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">4</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">5</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">6</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">7</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">8</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">9</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">min</span><span style="color:#D4D4D4;">(digits))</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">max</span><span style="color:#D4D4D4;">(digits))</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">sum</span><span style="color:#D4D4D4;">(digits))</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#B5CEA8;">0</span></span></span>
<span class="line"><span class="line"><span style="color:#B5CEA8;">9</span></span></span>
<span class="line"><span class="line"><span style="color:#B5CEA8;">45</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>4、列表推导式</p><p>列表推导式（list comprehension）将 for 循环和创建新元素的代码合并成一行，并自动追加新元素。</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#D4D4D4;">nums = [value ** </span><span style="color:#B5CEA8;">2</span><span style="color:#C586C0;"> for</span><span style="color:#D4D4D4;"> value </span><span style="color:#C586C0;">in</span><span style="color:#DCDCAA;"> range</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">10</span><span style="color:#D4D4D4;">)]</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(nums)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; [</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">4</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">9</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">16</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">25</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">36</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">49</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">64</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">81</span><span style="color:#D4D4D4;">]</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="使用列表的一部分-切片-slice" tabindex="-1"><a class="header-anchor" href="#使用列表的一部分-切片-slice"><span>使用列表的一部分（切片 slice）</span></a></h4><p>处理列表的部分元素，在 Python 中称为切片（slice）</p><p>1、通过[nⓂ️step]格式创建切片</p><p>要创建切片，可指定要使用的第一个元素和最后一个元素的索引。与 range() 函数一样，Python 在到达指定的第二个索引之前的元素时停止。</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#D4D4D4;">players = [</span><span style="color:#CE9178;">&#39;charles&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;martina&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;michael&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;florence&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;eli&#39;</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># 打印第二、三名队员</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(players[</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">:</span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">])</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; [</span><span style="color:#CE9178;">&#39;martina&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;michael&#39;</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># 如果没有指定第一个索引，Python 将自动从列表开头开始</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># 打印前三名队员</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(players[:</span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">])</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; [</span><span style="color:#CE9178;">&#39;charles&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;martina&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;michael&#39;</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># 要让切片终止于列表末尾，也可使用类似的语法</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># 打印第二名开始到最后的队员</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(players[</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">:])</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; [</span><span style="color:#CE9178;">&#39;martina&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;michael&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;florence&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;eli&#39;</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># 负数索引返回与列表末尾有相应距离的元素，因此可以输出列表末尾的任意切片</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># 打印最后三名队员</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(players[-</span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">:])</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; [</span><span style="color:#CE9178;">&#39;michael&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;florence&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;eli&#39;</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># 可在表示切片的方括号内指定第三个值。这个值告诉 Python 在指定范围内每隔多少元素提取一个。</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># 打印前四名中奇数名次的队员</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(players[:</span><span style="color:#B5CEA8;">4</span><span style="color:#D4D4D4;">:</span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">])</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; [</span><span style="color:#CE9178;">&#39;charles&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;michael&#39;</span><span style="color:#D4D4D4;">]</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2、遍历切片</p><p>可在 for 循环中使用切片</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#D4D4D4;">players = [</span><span style="color:#CE9178;">&#39;charles&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;martina&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;michael&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;florence&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;eli&#39;</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">for</span><span style="color:#D4D4D4;"> player </span><span style="color:#C586C0;">in</span><span style="color:#D4D4D4;"> players[:</span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">]:</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">  print</span><span style="color:#D4D4D4;">(player)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  </span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; </span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">charles</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">martina</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">michael</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>3、复制列表</p><p>要复制列表，可以创建一个包含整个列表的切片，方法是同时省略起始索引和终止索引（[:]）。</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#D4D4D4;">foods = [</span><span style="color:#CE9178;">&#39;pizza&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;falafel&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;carrot cake&#39;</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># 复制列表</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">new_foods = foods[:]</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(new_foods)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; [</span><span style="color:#CE9178;">&#39;pizza&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;falafel&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;carrot cake&#39;</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">new_foods[</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">] = </span><span style="color:#CE9178;">&#39;candy&#39;</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(new_foods)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; [</span><span style="color:#CE9178;">&#39;candy&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;falafel&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;carrot cake&#39;</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(foods)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; [</span><span style="color:#CE9178;">&#39;pizza&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;falafel&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;carrot cake&#39;</span><span style="color:#D4D4D4;">]</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="元组-tuple" tabindex="-1"><a class="header-anchor" href="#元组-tuple"><span>元组（tuple）</span></a></h4><p>不可变的列表称为元组（tuple）。</p><p>元组使用圆括号来标识。定义元组后，就可使用索引来访问其元素，就像访问列表元素一样。</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#D4D4D4;">dimensions = (</span><span style="color:#B5CEA8;">200</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">50</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(dimensions[</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">])</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; </span><span style="color:#B5CEA8;">200</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">dimensions[</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">] = </span><span style="color:#B5CEA8;">100</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; 报错，元组元素不可修改</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">dimensions = (</span><span style="color:#B5CEA8;">200</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">100</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; 不报错，可以给表示元组的变量赋值</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># 如果你要定义只包含一个元素的元组，必须在这个元素后面加上逗号</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">my_t = (</span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">,)</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># 遍历元组元素</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">for</span><span style="color:#D4D4D4;"> dimension </span><span style="color:#C586C0;">in</span><span style="color:#D4D4D4;"> dimensions:</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">  print</span><span style="color:#D4D4D4;">(dimension)</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5、if语句" tabindex="-1"><a class="header-anchor" href="#_5、if语句"><span>5、if语句</span></a></h3><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#6A9955;"># 格式（同样别忘了冒号和缩进！）</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> 条件:</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  执行语句</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">else</span><span style="color:#D4D4D4;">:</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  执行语句</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="条件判断" tabindex="-1"><a class="header-anchor" href="#条件判断"><span>条件判断</span></a></h4><p>为了改善可读性，可将每个条件测试都分别放在一对括号内，但并非必须这样做</p><p>优先级：not &gt; and &gt; or</p><ul><li><p>使用 <strong>and</strong> 检查多个条件</p><p>每个条件测试都通过了，整个表达式就为 True；如果至少一个条件测试没有通过，整个表达式就为 False</p></li><li><p>使用 or 检查多个条件</p><p>只要满足其中一个条件，就能通过整个条件测试。仅当所有条件测试都没有通过时，使用 or 的表达式才为 False。</p></li><li><p>使用<strong>not</strong>进行单个条件判断</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#D4D4D4;">x = </span><span style="color:#B5CEA8;">10</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(</span><span style="color:#C586C0;">not</span><span style="color:#D4D4D4;"> x &gt; </span><span style="color:#B5CEA8;">5</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; </span><span style="color:#569CD6;">False</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>使用关键字 <strong>in</strong>判断特定的值是否在列表中</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#D4D4D4;">requested_toppings = [</span><span style="color:#CE9178;">&#39;mushrooms&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;onions&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;pineapple&#39;</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;mushrooms&#39;</span><span style="color:#C586C0;"> in</span><span style="color:#D4D4D4;"> requested_toppings)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; </span><span style="color:#569CD6;">True</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;pepperoni&#39;</span><span style="color:#C586C0;"> in</span><span style="color:#D4D4D4;"> requested_toppings)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; </span><span style="color:#569CD6;">False</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>使用关键字 <strong>not in</strong>判断特定的值不在列表中</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#D4D4D4;">requested_toppings = [</span><span style="color:#CE9178;">&#39;mushrooms&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;onions&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;pineapple&#39;</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;mushrooms&#39;</span><span style="color:#C586C0;"> not</span><span style="color:#C586C0;"> in</span><span style="color:#D4D4D4;"> requested_toppings)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; </span><span style="color:#569CD6;">False</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;pepperoni&#39;</span><span style="color:#C586C0;"> not</span><span style="color:#C586C0;"> in</span><span style="color:#D4D4D4;"> requested_toppings)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; </span><span style="color:#569CD6;">True</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h4 id="嵌套条件" tabindex="-1"><a class="header-anchor" href="#嵌套条件"><span>嵌套条件</span></a></h4><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#6A9955;"># 格式</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> 条件一:</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  if</span><span style="color:#D4D4D4;"> 条件二:</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    语句A</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  else</span><span style="color:#D4D4D4;">:</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    语句B</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">else</span><span style="color:#D4D4D4;">:</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  语句C</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="多条件判断" tabindex="-1"><a class="header-anchor" href="#多条件判断"><span>多条件判断</span></a></h4><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#6A9955;"># 格式</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> 条件一:</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  语句A</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">elif</span><span style="color:#D4D4D4;"> 条件二:</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  语句B</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">elif</span><span style="color:#D4D4D4;"> 条件三:</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  语句C</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">else</span><span style="color:#D4D4D4;">:</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  语句D</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#D4D4D4;">alien_color = [</span><span style="color:#CE9178;">&#39;red&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;yellow&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;blue&#39;</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">for</span><span style="color:#D4D4D4;"> item </span><span style="color:#C586C0;">in</span><span style="color:#D4D4D4;"> alien_color:</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  if</span><span style="color:#D4D4D4;"> item == </span><span style="color:#CE9178;">&#39;yellow&#39;</span><span style="color:#D4D4D4;">:</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">    print</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;is yellow&#39;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  elif</span><span style="color:#D4D4D4;"> item == </span><span style="color:#CE9178;">&#39;red&#39;</span><span style="color:#D4D4D4;">:</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">    print</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;is red&#39;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  else</span><span style="color:#D4D4D4;">:</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">    print</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;is blue&#39;</span><span style="color:#D4D4D4;">)</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="判断列表是否为空" tabindex="-1"><a class="header-anchor" href="#判断列表是否为空"><span>判断列表是否为空</span></a></h4><p>对于数值 0、空值 None、单引号空字符串 &#39;&#39;、双引号空字符串 &quot;&quot;、空列表 []、空元组 ()、空字典 {}，Python 都会返回 False</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#D4D4D4;">arr = []</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> arr:</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">  print</span><span style="color:#D4D4D4;">(arr)</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">else</span><span style="color:#D4D4D4;">:</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">  print</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;arr is None&#39;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; arr </span><span style="color:#569CD6;">is</span><span style="color:#569CD6;"> None</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6、字典-dictionary" tabindex="-1"><a class="header-anchor" href="#_6、字典-dictionary"><span>6、字典（dictionary）</span></a></h3><ul><li>字典（dictionary）是一系列键值对</li><li>与键相关联的值可以是数、字符串、列表乃至字典。事实上，可将任意 Python 对象用作字典中的值。</li><li>字典用放在花括号（{}）中的一系列键值对表示</li><li>要获取与键关联的值，可指定字典名并把键放在后面的方括号内</li><li>键必须是不可变值，例：列表不能作为键，元组可以作为键</li></ul><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#D4D4D4;">alien_0 = {</span><span style="color:#CE9178;">&#39;color&#39;</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&#39;green&#39;</span><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(alien_0[</span><span style="color:#CE9178;">&#39;color&#39;</span><span style="color:#D4D4D4;">])</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; green</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># 字典中键值对数量</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">len</span><span style="color:#D4D4D4;">(alien_0))</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; </span><span style="color:#B5CEA8;">1</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># 添加键值对</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">alien_0[</span><span style="color:#CE9178;">&#39;point&#39;</span><span style="color:#D4D4D4;">] = </span><span style="color:#B5CEA8;">10</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(alien_0)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; {</span><span style="color:#CE9178;">&#39;color&#39;</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&#39;green&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;point&#39;</span><span style="color:#D4D4D4;">: </span><span style="color:#B5CEA8;">10</span><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># 修改字典中的值</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">alien_0[</span><span style="color:#CE9178;">&#39;point&#39;</span><span style="color:#D4D4D4;">] = </span><span style="color:#B5CEA8;">5</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># 删除键值对</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">del</span><span style="color:#D4D4D4;"> alien_0[</span><span style="color:#CE9178;">&#39;point&#39;</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># 判断键是否存在于字典</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">alien_0 = {</span><span style="color:#CE9178;">&#39;color&#39;</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&#39;green&#39;</span><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;points&#39;</span><span style="color:#C586C0;"> in</span><span style="color:#D4D4D4;"> alien_0)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; </span><span style="color:#569CD6;">False</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># 元组作为键</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">contacts = {</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  (</span><span style="color:#CE9178;">&#39;张伟&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">): </span><span style="color:#CE9178;">&#39;13711111111&#39;</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  (</span><span style="color:#CE9178;">&#39;张伟&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">): </span><span style="color:#CE9178;">&#39;13722222222&#39;</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  (</span><span style="color:#CE9178;">&#39;张伟&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">): </span><span style="color:#CE9178;">&#39;13733333333&#39;</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># 找到张伟2的联系方式</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">phone = contacts[(</span><span style="color:#CE9178;">&#39;张伟&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">)]</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(phone)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; </span><span style="color:#B5CEA8;">13722222222</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="使用get-来访问值" tabindex="-1"><a class="header-anchor" href="#使用get-来访问值"><span>使用get()来访问值</span></a></h4><p>使用 get() 方法在指定的键不存在时返回一个默认值。</p><p>get() 方法的第一个参数用于指定键，是必不可少的；第二个参数为当指定的键不存在时要返回的值，是可选的</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#D4D4D4;">alien_0 = {</span><span style="color:#CE9178;">&#39;color&#39;</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&#39;green&#39;</span><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">point_value = alien_0.get(</span><span style="color:#CE9178;">&#39;points&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;No point value assigned.&#39;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(point_value)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; No point value assigned.</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; 若第二个入参为空，返回None</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="遍历字典" tabindex="-1"><a class="header-anchor" href="#遍历字典"><span>遍历字典</span></a></h4><p>1、使用items()方法遍历所有键值对</p><p>items()方法返回一个键和值组成的元组列表</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#C586C0;">for</span><span style="color:#D4D4D4;"> key,value </span><span style="color:#C586C0;">in</span><span style="color:#D4D4D4;"> 字典.items():</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  操作语句</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#D4D4D4;">favorite_languages = {</span></span></span>
<span class="line"><span class="line"><span style="color:#CE9178;">  &#39;jen&#39;</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&#39;python&#39;</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#CE9178;">  &#39;sarah&#39;</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&#39;c&#39;</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#CE9178;">  &#39;edward&#39;</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&#39;rust&#39;</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#CE9178;">  &#39;phil&#39;</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&#39;python&#39;</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(favorite_languages.items())</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; dict_items([(</span><span style="color:#CE9178;">&#39;jen&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;python&#39;</span><span style="color:#D4D4D4;">), (</span><span style="color:#CE9178;">&#39;sarah&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;c&#39;</span><span style="color:#D4D4D4;">), (</span><span style="color:#CE9178;">&#39;edward&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;rust&#39;</span><span style="color:#D4D4D4;">), (</span><span style="color:#CE9178;">&#39;phil&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;python&#39;</span><span style="color:#D4D4D4;">)])</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">for</span><span style="color:#D4D4D4;"> name, language </span><span style="color:#C586C0;">in</span><span style="color:#D4D4D4;"> favorite_languages.items():</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">  print</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">f</span><span style="color:#CE9178;">&quot;</span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;">name.title()</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">&#39;s favorite language is </span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;">language.title()</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">.&quot;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">Jen</span><span style="color:#CE9178;">&#39;s favorite language is Python.</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">Sarah</span><span style="color:#CE9178;">&#39;s favorite language is C.</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">Edward</span><span style="color:#CE9178;">&#39;s favorite language is Rust.</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">Phil</span><span style="color:#CE9178;">&#39;s favorite language is Python.</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2、使用keys() 方法遍历所有键</p><p>使用keys() 方法会返回一个包含所有键的列表</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#D4D4D4;">favorite_languages = {</span></span></span>
<span class="line"><span class="line"><span style="color:#CE9178;">  &#39;jen&#39;</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&#39;python&#39;</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#CE9178;">  &#39;sarah&#39;</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&#39;c&#39;</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#CE9178;">  &#39;edward&#39;</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&#39;rust&#39;</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#CE9178;">  &#39;phil&#39;</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&#39;python&#39;</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(favorite_languages.keys())</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; dict_keys([</span><span style="color:#CE9178;">&#39;jen&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;sarah&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;edward&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;phil&#39;</span><span style="color:#D4D4D4;">])</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">for</span><span style="color:#D4D4D4;"> key </span><span style="color:#C586C0;">in</span><span style="color:#D4D4D4;"> favorite_languages.keys():</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">  print</span><span style="color:#D4D4D4;">(key)</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; </span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">jen</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">sarah</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">edward</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">phil</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># 在遍历字典时，会默认遍历所有的键</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">for</span><span style="color:#D4D4D4;"> key </span><span style="color:#C586C0;">in</span><span style="color:#D4D4D4;"> favorite_languages: </span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">等价于</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">for</span><span style="color:#D4D4D4;"> key </span><span style="color:#C586C0;">in</span><span style="color:#D4D4D4;"> favorite_languages.keys():</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>3、使用values()方法遍历字典中的所有值</p><p>values()方法会返回一个值列表</p><p>这种做法提取字典中所有的值，而没有考虑值是否有重复。</p><p>为剔除重复项，可使用集合（set）。</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#D4D4D4;">favorite_languages = {</span></span></span>
<span class="line"><span class="line"><span style="color:#CE9178;">  &#39;jen&#39;</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&#39;python&#39;</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#CE9178;">  &#39;sarah&#39;</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&#39;c&#39;</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#CE9178;">  &#39;edward&#39;</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&#39;rust&#39;</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#CE9178;">  &#39;phil&#39;</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&#39;python&#39;</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(favorite_languages.values())</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; dict_values([</span><span style="color:#CE9178;">&#39;python&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;c&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;rust&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;python&#39;</span><span style="color:#D4D4D4;">])</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">for</span><span style="color:#D4D4D4;"> value </span><span style="color:#C586C0;">in</span><span style="color:#D4D4D4;"> favorite_languages.values():</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">  print</span><span style="color:#D4D4D4;">(value)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">python</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">c</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">rust</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">python</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># 使用set剔除重复项</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">for</span><span style="color:#D4D4D4;"> value </span><span style="color:#C586C0;">in</span><span style="color:#4EC9B0;"> set</span><span style="color:#D4D4D4;">(favorite_languages.values()):</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">  print</span><span style="color:#D4D4D4;">(value)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">c</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">python</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">rust</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7、使用input-函数进行用户输入" tabindex="-1"><a class="header-anchor" href="#_7、使用input-函数进行用户输入"><span>7、使用input()函数进行用户输入</span></a></h3><p>input() 函数让程序暂停运行，等待用户输入一些文本。获取用户输入后，Python 将其赋给一个变量，以便使用。</p><p>input() 函数接受一个参数，即要向用户显示的提示（prompt）</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#D4D4D4;">name = </span><span style="color:#DCDCAA;">input</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;Please enter your name: &quot;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">f</span><span style="color:#CE9178;">&quot;</span><span style="color:#D7BA7D;">\\n</span><span style="color:#CE9178;">Hello, </span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;">name</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">!&quot;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt;Please enter your name: </span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; 输入 csm</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">Please enter your name: csm</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">Hello, csm!</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="使用int来获取数值输入" tabindex="-1"><a class="header-anchor" href="#使用int来获取数值输入"><span>使用int来获取数值输入</span></a></h4><p>在使用 input() 函数时，Python 会将用户输入解读为字符串</p><p><strong>当输入数值时，可使用int()函数将输入字符串转换成数值</strong></p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#D4D4D4;">age = </span><span style="color:#DCDCAA;">input</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;How old are you? &quot;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">age = </span><span style="color:#4EC9B0;">int</span><span style="color:#D4D4D4;">(age)</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> age &gt;= </span><span style="color:#B5CEA8;">18</span><span style="color:#D4D4D4;">:</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">  print</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;你成年了&quot;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">else</span><span style="color:#D4D4D4;">:</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">  print</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;你还未成年&quot;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  </span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; How old are you</span><span style="color:#F44747;">?</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; 输入20</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">How old are you</span><span style="color:#F44747;">?</span><span style="color:#B5CEA8;"> 20</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">你成年了</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>float函数可以将其他类型转换成浮点数</p><p>str函数可以把其他类型转换成字符串</p><h3 id="_8、while循环" tabindex="-1"><a class="header-anchor" href="#_8、while循环"><span>8、while循环</span></a></h3><ul><li>for 循环用于针对集合中的每个元素执行一个代码块，而 while 循环则不断地运行，直到指定的条件不再满足为止。</li><li>在条件何时结束未知的情况下，更适合使用while循环</li><li>如果程序陷入无限循环，既可按 Ctrl + C，也可关闭显示程序输出的终端窗口。</li></ul><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#6A9955;"># 格式</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">while</span><span style="color:#D4D4D4;"> 条件:</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  行动</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>例：打印输入内容，当输入quit时退出程序</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#D4D4D4;">message = </span><span style="color:#CE9178;">&#39;&#39;</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">while</span><span style="color:#D4D4D4;"> message != </span><span style="color:#CE9178;">&#39;quit&#39;</span><span style="color:#D4D4D4;"> :</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  message = </span><span style="color:#DCDCAA;">input</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;请输入信息，输入quit时退出程序：&#39;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  if</span><span style="color:#D4D4D4;"> message != </span><span style="color:#CE9178;">&#39;quit&#39;</span><span style="color:#D4D4D4;">:</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">    print</span><span style="color:#D4D4D4;">(message)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    </span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">请输入信息，输入quit时退出程序：</span><span style="color:#B5CEA8;">1</span></span></span>
<span class="line"><span class="line"><span style="color:#B5CEA8;">1</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">请输入信息，输入quit时退出程序：</span><span style="color:#B5CEA8;">2</span></span></span>
<span class="line"><span class="line"><span style="color:#B5CEA8;">2</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">请输入信息，输入quit时退出程序：</span><span style="color:#DCDCAA;">quit</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="使用break退出循环" tabindex="-1"><a class="header-anchor" href="#使用break退出循环"><span>使用break退出循环</span></a></h4><p>如果不管条件测试的结果如何，想立即退出 while 循环，不再运行循环中余下的代码，可使用break 语句。</p><p>注意：在所有 Python 循环中都可使用 break 语句。例如，可使用 break 语句来退出遍历列表或字典的 for 循环。</p><p>同上例的不同实现方式：</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#D4D4D4;">active = </span><span style="color:#569CD6;">True</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">message = </span><span style="color:#CE9178;">&#39;&#39;</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">while</span><span style="color:#D4D4D4;"> active:</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  message = </span><span style="color:#DCDCAA;">input</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;请输入信息，输入quit时退出程序：&#39;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  if</span><span style="color:#D4D4D4;"> message == </span><span style="color:#CE9178;">&#39;quit&#39;</span><span style="color:#D4D4D4;">:</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">    break</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  else</span><span style="color:#D4D4D4;">:</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">    print</span><span style="color:#D4D4D4;">(message)</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="在循环中使用continue" tabindex="-1"><a class="header-anchor" href="#在循环中使用continue"><span>在循环中使用continue</span></a></h4><p>要返回循环开头，并根据条件测试的结果决定是否继续执行循环，可使用 continue 语句，它不像break 语句那样不再执行余下的代码并退出整个循环</p><p>例：从 1 数到 10，只打印其中奇数的循环</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#D4D4D4;">num = </span><span style="color:#B5CEA8;">0</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">while</span><span style="color:#D4D4D4;"> num &lt; </span><span style="color:#B5CEA8;">10</span><span style="color:#D4D4D4;">:</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  num = num + </span><span style="color:#B5CEA8;">1</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  if</span><span style="color:#D4D4D4;"> (num % </span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;"> == </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">):</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">    continue</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">  print</span><span style="color:#D4D4D4;">(num)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  </span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#B5CEA8;">1</span></span></span>
<span class="line"><span class="line"><span style="color:#B5CEA8;">3</span></span></span>
<span class="line"><span class="line"><span style="color:#B5CEA8;">5</span></span></span>
<span class="line"><span class="line"><span style="color:#B5CEA8;">7</span></span></span>
<span class="line"><span class="line"><span style="color:#B5CEA8;">9</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果结果为 0（意味着 current_number 可被 2 整除），就执行 continue 语句，让 Python 忽略余下的代码，并返回循环的开头。</p><p>如果当前的数不能被 2 整除，就执行循环中余下的代码，将这个数打印出来。</p><h4 id="使用while循环处理列表和字典" tabindex="-1"><a class="header-anchor" href="#使用while循环处理列表和字典"><span>使用while循环处理列表和字典</span></a></h4><p>for 循环是一种遍历列表的有效方式，但不应该在 for 循环中修改列表，否则将导致 Python 难以跟踪其中的元素。要在遍历列表的同时修改它，可使用 while 循环。</p><p>例1：删除所有值为cat的元素</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#D4D4D4;">pets = [</span><span style="color:#CE9178;">&#39;dog&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;cat&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;dog&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;goldfish&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;cat&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;rabbit&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;cat&#39;</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(pets)</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">while</span><span style="color:#CE9178;"> &#39;cat&#39;</span><span style="color:#569CD6;"> in</span><span style="color:#D4D4D4;"> pets:</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    pets.remove(</span><span style="color:#CE9178;">&#39;cat&#39;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(pets)</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>例2：创建一个调查程序，其中的循环在每次执行时都提示输入被调查者的名字和回答。</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#D4D4D4;">responses = {}</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># 设置一个标志，指出调查是否继续</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">polling_active = </span><span style="color:#569CD6;">True</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">while</span><span style="color:#D4D4D4;"> polling_active:</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">    # 提示输入被调查者的名字和回答</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  name = </span><span style="color:#DCDCAA;">input</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;</span><span style="color:#D7BA7D;">\\n</span><span style="color:#CE9178;">What is your name? &quot;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  response = </span><span style="color:#DCDCAA;">input</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;Which mountain would you like to climb someday? &quot;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">    # 将回答存储在字典中</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  responses[name] = response</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">    # 看看是否还有人要参与调查</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  repeat = </span><span style="color:#DCDCAA;">input</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;Would you like to let another person respond? (yes/no) &quot;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  if</span><span style="color:#D4D4D4;"> repeat == </span><span style="color:#CE9178;">&#39;no&#39;</span><span style="color:#D4D4D4;">:</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">      polling_active = </span><span style="color:#569CD6;">False</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># 调查结束，显示结果</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;</span><span style="color:#D7BA7D;">\\n</span><span style="color:#CE9178;">--- Poll Results ---&quot;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">for</span><span style="color:#D4D4D4;"> name, response </span><span style="color:#C586C0;">in</span><span style="color:#D4D4D4;"> responses.items():</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">    print</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">f</span><span style="color:#CE9178;">&quot;</span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;">name</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;"> would like to climb </span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;">response</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">.&quot;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    </span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">What </span><span style="color:#569CD6;">is</span><span style="color:#D4D4D4;"> your name</span><span style="color:#F44747;">?</span><span style="color:#D4D4D4;"> Eric</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">Which mountain would you like to climb someday</span><span style="color:#F44747;">?</span><span style="color:#D4D4D4;"> Denali</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">Would you like to let another person respond</span><span style="color:#F44747;">?</span><span style="color:#D4D4D4;"> (yes/no) yes</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">What </span><span style="color:#569CD6;">is</span><span style="color:#D4D4D4;"> your name</span><span style="color:#F44747;">?</span><span style="color:#D4D4D4;"> Lynn</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">Which mountain would you like to climb someday</span><span style="color:#F44747;">?</span><span style="color:#D4D4D4;"> Devil</span><span style="color:#CE9178;">&#39;s Thumb</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">Would you like to let another person respond</span><span style="color:#F44747;">?</span><span style="color:#D4D4D4;"> (yes/no) no</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#F44747;">--</span><span style="color:#D4D4D4;">- Poll Results </span><span style="color:#F44747;">--</span><span style="color:#D4D4D4;">-</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">Eric would like to climb Denali.</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">Lynn would like to climb Devil</span><span style="color:#CE9178;">&#39;s Thumb.</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_9、函数" tabindex="-1"><a class="header-anchor" href="#_9、函数"><span>9、函数</span></a></h3><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#6A9955;"># 语法</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">def</span><span style="color:#DCDCAA;"> 函数名</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">入参</span><span style="color:#D4D4D4;">):</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  操作</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># 调用函数</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">函数名(入参)</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#569CD6;">def</span><span style="color:#DCDCAA;"> favorite_book</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;">):</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">  print</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">f</span><span style="color:#CE9178;">&quot;my favorite book is </span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;">name</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">&quot;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">favorite_book(</span><span style="color:#CE9178;">&#39;Harry Potter&#39;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; my favorite book </span><span style="color:#569CD6;">is</span><span style="color:#D4D4D4;"> Harry Potter</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">#关键词实参</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">favorite_book(</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&#39;alive&#39;</span><span style="color:#D4D4D4;">)</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="传递任意数量的实参" tabindex="-1"><a class="header-anchor" href="#传递任意数量的实参"><span>传递任意数量的实参</span></a></h4><p>形参名 *toppings 中的星号让 Python 创建一个名为 toppings 的元组，该元组包含函数收到的所有值。</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#569CD6;">def</span><span style="color:#DCDCAA;"> make_pizza</span><span style="color:#D4D4D4;">(*</span><span style="color:#9CDCFE;">toppings</span><span style="color:#D4D4D4;">):</span></span></span>
<span class="line"><span class="line"><span style="color:#CE9178;">    &quot;&quot;&quot;概述要制作的比萨&quot;&quot;&quot;</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">    print</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;</span><span style="color:#D7BA7D;">\\n</span><span style="color:#CE9178;">Making a pizza with the following toppings:&quot;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">    for</span><span style="color:#D4D4D4;"> topping </span><span style="color:#C586C0;">in</span><span style="color:#D4D4D4;"> toppings:</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">        print</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">f</span><span style="color:#CE9178;">&quot;- </span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;">topping</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">&quot;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">make_pizza(</span><span style="color:#CE9178;">&#39;pepperoni&#39;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">Making a pizza </span><span style="color:#C586C0;">with</span><span style="color:#D4D4D4;"> the following toppings:</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">- pepperoni</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">make_pizza(</span><span style="color:#CE9178;">&#39;mushrooms&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;green peppers&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;extra cheese&#39;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">Making a pizza </span><span style="color:#C586C0;">with</span><span style="color:#D4D4D4;"> the following toppings:</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">- mushrooms</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">- green peppers</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">- extra cheese</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="使用任意数量的关键字实参" tabindex="-1"><a class="header-anchor" href="#使用任意数量的关键字实参"><span>使用任意数量的关键字实参</span></a></h4><p>形参**user_info 中的两个星号让 Python 创建一个名为 user_info 的字典，该字典包含函数收到的其他所有名值对</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#569CD6;">def</span><span style="color:#DCDCAA;"> build_profile</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">first</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">last</span><span style="color:#D4D4D4;">, **</span><span style="color:#9CDCFE;">user_info</span><span style="color:#D4D4D4;">):</span></span></span>
<span class="line"><span class="line"><span style="color:#CE9178;">  &quot;&quot;&quot;创建一个字典，其中包含我们知道的有关用户的一切&quot;&quot;&quot;</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  user_info[</span><span style="color:#CE9178;">&#39;first_name&#39;</span><span style="color:#D4D4D4;">] = first</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  user_info[</span><span style="color:#CE9178;">&#39;last_name&#39;</span><span style="color:#D4D4D4;">] = last</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#D4D4D4;"> user_info</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">user_profile = build_profile(</span><span style="color:#CE9178;">&#39;albert&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;einstein&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">location</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&#39;princeton&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">field</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&#39;physics&#39;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(user_profile)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">{</span><span style="color:#CE9178;">&#39;location&#39;</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&#39;princeton&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;field&#39;</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&#39;physics&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;first_name&#39;</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&#39;albert&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;last_name&#39;</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&#39;einstein&#39;</span><span style="color:#D4D4D4;">}</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="导入函数" tabindex="-1"><a class="header-anchor" href="#导入函数"><span>导入函数</span></a></h4><p><strong>最佳的做法是，要么只导入需要使用的函数，要么导入整个模块并使用点号</strong></p><p>pizza.py</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#569CD6;">def</span><span style="color:#DCDCAA;"> make_pizza</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">size</span><span style="color:#D4D4D4;">, *</span><span style="color:#9CDCFE;">toppings</span><span style="color:#D4D4D4;">):</span></span></span>
<span class="line"><span class="line"><span style="color:#CE9178;">    &quot;&quot;&quot;概述要制作的比萨&quot;&quot;&quot;</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">    print</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">f</span><span style="color:#CE9178;">&quot;</span><span style="color:#D7BA7D;">\\n</span><span style="color:#CE9178;">Making a </span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;">size</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">-inch pizza with the following toppings:&quot;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">    for</span><span style="color:#D4D4D4;"> topping </span><span style="color:#C586C0;">in</span><span style="color:#D4D4D4;"> toppings:</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">        print</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">f</span><span style="color:#CE9178;">&quot;- </span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;">topping</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">&quot;</span><span style="color:#D4D4D4;">)</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>1.导入整个模块</strong></p><p>语法</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> module_name</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">module_name.function_name()</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用：</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> pizza</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">pizza.make_pizza(</span><span style="color:#B5CEA8;">16</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;pepperoni&#39;</span><span style="color:#D4D4D4;">)</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>2.导入特定的函数</strong></p><p>语法</p><p>如果使用这种语法，在调用函数时则无须使用句点。</p><p>由于在 import 语句中显式地导入了make_pizza() 函数，因此在调用时只需指定其名称即可。</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#6A9955;"># 只导入模块中的特定函数</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> module_name </span><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> function_name</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># 用逗号分隔函数名，可根据需要从模块中导入任意数量的函数</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> module_name </span><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> function_name1, function_name2, function_name3</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> pizza </span><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> make_pizza </span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">make_pizza(</span><span style="color:#B5CEA8;">16</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;pepperoni&#39;</span><span style="color:#D4D4D4;">)</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>3.使用 as 给函数指定别名</strong></p><p>语法</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> module_name </span><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> function_name </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> fn</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>使用</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> pizza </span><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> make_pizza </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> mp</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">mp(</span><span style="color:#B5CEA8;">16</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;pepperoni&#39;</span><span style="color:#D4D4D4;">)</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>4.使用 as 给模块指定别名</strong></p><p>语法</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> pizza </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> p</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">p.make_pizza(</span><span style="color:#B5CEA8;">16</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;pepperoni&#39;</span><span style="color:#D4D4D4;">)</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> module_name </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> mn</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>5.导入模块中的所有函数</strong></p><p>语法</p><p>使用星号（ *）运算符可让 Python 导入模块中的所有函数</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> module_name </span><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> *</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>使用</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> pizza </span><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> *</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">make_pizza(</span><span style="color:#B5CEA8;">16</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;pepperoni&#39;</span><span style="color:#D4D4D4;">)</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="匿名函数" tabindex="-1"><a class="header-anchor" href="#匿名函数"><span>匿名函数</span></a></h4><p>语法：</p><blockquote><p>📌lambda 函数参数: 函数返回的表达式（只能有一个语句/表达式）</p></blockquote><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#569CD6;">lambda</span><span style="color:#9CDCFE;"> num1</span><span style="color:#D4D4D4;">,</span><span style="color:#9CDCFE;">num2</span><span style="color:#D4D4D4;">: num1 +num2</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>使用场景</p><p>1、高阶函数的参数</p><p>高阶函数：把函数作为参数的函数</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#569CD6;">def</span><span style="color:#DCDCAA;"> calculate_and_print</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">num</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">calculator</span><span style="color:#D4D4D4;">):</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  result = calculator(num)</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">  print</span><span style="color:#D4D4D4;">(result)</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">calculate_and_print(</span><span style="color:#B5CEA8;">5</span><span style="color:#D4D4D4;">, </span><span style="color:#569CD6;">lambda</span><span style="color:#9CDCFE;"> num</span><span style="color:#D4D4D4;">: num * </span><span style="color:#B5CEA8;">5</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; </span><span style="color:#B5CEA8;">25</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2、直接调用</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#D4D4D4;">result = (</span><span style="color:#569CD6;">lambda</span><span style="color:#9CDCFE;"> num1</span><span style="color:#D4D4D4;">,</span><span style="color:#9CDCFE;">num2</span><span style="color:#D4D4D4;">: num1 +num2)(</span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(result)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; </span><span style="color:#B5CEA8;">5</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_10、类" tabindex="-1"><a class="header-anchor" href="#_10、类"><span>10、类</span></a></h3><h4 id="创建和使用类" tabindex="-1"><a class="header-anchor" href="#创建和使用类"><span>创建和使用类</span></a></h4><ul><li>类是创建对象的模板，对象是类的实例</li><li>通常可以认为首字母大写的名称（如 Dog）指的是类，而全小写的名称（如 my_dog）指的是根据类创建的实例。</li><li>类名应采用驼峰命名法，即将类名中的每个单词的首字母都大写，并且不使用下划线。实例名和模块名都采用全小写格式，并在单词之间加上下划线。</li><li>对于每个类，都应在类定义后面紧跟一个文档字符串。这种文档字符串简要地描述类的功能，你应该遵循编写函数的文档字符串时采用的格式约定。每个模块也都应包含一个文档字符串，对其中的类可用来做什么进行描述。</li></ul><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#6A9955;"># 定义类</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">class</span><span style="color:#4EC9B0;"> Dog</span><span style="color:#D4D4D4;">:</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  def</span><span style="color:#DCDCAA;"> __init__</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">self</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">age</span><span style="color:#D4D4D4;">):</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">    self</span><span style="color:#D4D4D4;">.name = name</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">    self</span><span style="color:#D4D4D4;">.age = age</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  def</span><span style="color:#DCDCAA;"> sit</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">self</span><span style="color:#D4D4D4;">):</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">    print</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">f</span><span style="color:#CE9178;">&quot;</span><span style="color:#569CD6;">{self</span><span style="color:#D4D4D4;">.name</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;"> is sitting now.&quot;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># 创建对象</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">dog1 = Dog(</span><span style="color:#CE9178;">&#39;wangwang&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">dog2 = Dog(</span><span style="color:#CE9178;">&#39;xiaobai&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># 访问属性</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(dog1.name)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; wangwang</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># 调用方法</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">dog1.sit()</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">dog2.sit()</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">wangwang </span><span style="color:#569CD6;">is</span><span style="color:#D4D4D4;"> sitting now.</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">xiaobai </span><span style="color:#569CD6;">is</span><span style="color:#D4D4D4;"> sitting now.</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>类中的函数称为方法，第一个参数被占用，为self，用于表示对象自身</p><p>构造函数__init__是一个特殊方法，用于定义实例对象的属性。</p><p>每当你根据 Dog 类创建新实例时，Python 都会自动运行它。</p><p><strong>注意：开头和末尾各有两个下划线。</strong></p><h4 id="继承" tabindex="-1"><a class="header-anchor" href="#继承"><span>继承</span></a></h4><p>当一个类继承另一个类时，将自动获得后者的所有属性和方法。原有的类称为父类（parent class），而新类称为子类（child class）。子类不仅继承了父类的所有属性和方法，还可定义自己的属性和方法。</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#569CD6;">class</span><span style="color:#4EC9B0;"> Animal</span><span style="color:#D4D4D4;">:</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  def</span><span style="color:#DCDCAA;"> __init__</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">self</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">age</span><span style="color:#D4D4D4;">):</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">    self</span><span style="color:#D4D4D4;">.name = name</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">    self</span><span style="color:#D4D4D4;">.age = age</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  def</span><span style="color:#DCDCAA;"> greeting</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">self</span><span style="color:#D4D4D4;">):</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">    print</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">f</span><span style="color:#CE9178;">&quot;hello, I am </span><span style="color:#569CD6;">{self</span><span style="color:#D4D4D4;">.name</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">.&quot;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">class</span><span style="color:#4EC9B0;"> Tail</span><span style="color:#D4D4D4;">:</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  def</span><span style="color:#DCDCAA;"> __init__</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">self</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">size</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">length</span><span style="color:#D4D4D4;">):</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">    self</span><span style="color:#D4D4D4;">.size = size</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">    self</span><span style="color:#D4D4D4;">.length = length</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># 继承父类</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">class</span><span style="color:#4EC9B0;"> Dog</span><span style="color:#D4D4D4;">(</span><span style="color:#4EC9B0;">Animal</span><span style="color:#D4D4D4;">):</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  def</span><span style="color:#DCDCAA;"> __init__</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">self</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">age</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">sex</span><span style="color:#D4D4D4;">):</span></span></span>
<span class="line"><span class="line"><span style="color:#CE9178;">    &quot;&quot;&quot;</span></span></span>
<span class="line"><span class="line"><span style="color:#CE9178;">    先初始化父类的属性，再初始化电动汽车特有的属性</span></span></span>
<span class="line"><span class="line"><span style="color:#CE9178;">    &quot;&quot;&quot;</span></span></span>
<span class="line"><span class="line"><span style="color:#4EC9B0;">    super</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">__init__</span><span style="color:#D4D4D4;">(name, age)</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">    self</span><span style="color:#D4D4D4;">.sex = sex</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">    # 将实例用作属性</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">    self</span><span style="color:#D4D4D4;">.tail = Tail(</span><span style="color:#CE9178;">&#39;big&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">10</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">  # 定义子类方法</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  def</span><span style="color:#DCDCAA;"> eating</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">self</span><span style="color:#D4D4D4;">):</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">     print</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">f</span><span style="color:#CE9178;">&quot;</span><span style="color:#569CD6;">{self</span><span style="color:#D4D4D4;">.name</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;"> is eating&quot;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># 重写父类方法</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  def</span><span style="color:#DCDCAA;"> greeting</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">self</span><span style="color:#D4D4D4;">):</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">     print</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;wang wang!&quot;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">dog1 = Dog(</span><span style="color:#CE9178;">&#39;wangcai&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;male&#39;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">dog1.eating()</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">dog1.greeting()</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(dog1.tail.size)</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>在创建子类时，父类必须包含在当前文件中，且位于子类前面。</li><li>在定义子类时，必须在括号内指定父类的名称。</li><li>super() 会返回当前类的父类。使用super().__init__()调用父类的构造函数，从而让子类包含父类的所有属性。</li><li>如果父类中的一些方法不能满足子类的需求，就可以在子类中定义一个与要重写的父类方法同名的方法。这样，Python 将忽略这个父类方法，只关注你在子类中定义的相应方法。</li><li>在Dog类中 , 将Tail实例赋给self.tail属性（ **self.tail = Tail(&#39;big&#39;, 10) **），现在每个Dog实例都包含一个自动创建的 Tail实例。</li></ul><h4 id="导入类" tabindex="-1"><a class="header-anchor" href="#导入类"><span>导入类</span></a></h4><p>类似上方导入函数</p><h4 id="python-标准库" tabindex="-1"><a class="header-anchor" href="#python-标准库"><span>Python 标准库</span></a></h4><p>Python 标准库是一组模块，在安装 Python 时已经包含在内。</p><p>你可以使用标准库中的任何函数和类，只需在程序开头添加一条简单的 import 语句即可。</p><p>模块random 中 的<strong>randint()</strong> 将两个整数作为参数，并随机返回一个位于这两个整数之间（含）的整数</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> random </span><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> randint</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(randint(</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">6</span><span style="color:#D4D4D4;">))</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; </span><span style="color:#B5CEA8;">3</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>模块 random 中 的 <strong>choice()</strong>，它将一个列表或元组作为参数，并随机返回其中的一个元素</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> random </span><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> choice</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">players = [</span><span style="color:#CE9178;">&#39;charles&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;martina&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;michael&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;florence&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;eli&#39;</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(choice(players))</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; martina</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>引用第三方库</strong></p><p>搜索第三方库：<a href="https://pypi.org/" title="https://pypi.org/" target="_blank" rel="noopener noreferrer">https://pypi.org/</a></p><p>先安装，再引入</p><div class="language-bash line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-bash;"><code><span class="line"><span class="line"><span style="color:#DCDCAA;">pip</span><span style="color:#CE9178;"> install</span><span style="color:#CE9178;"> xxx</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_11、文件" tabindex="-1"><a class="header-anchor" href="#_11、文件"><span>11、文件</span></a></h3><h4 id="读取文件" tabindex="-1"><a class="header-anchor" href="#读取文件"><span>读取文件</span></a></h4><p>1、从 pathlib 模块导入 Path 类。Path 对象指向一个文件。<code>read_text</code>方法读取文件。</p><div class="language-text line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-text;"><code><span class="line"><span class="line"><span>3.1415926535</span></span></span>
<span class="line"><span class="line"><span>  8979323846</span></span></span>
<span class="line"><span class="line"><span>  2643383279</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> pathlib </span><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> Path</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">path = Path(</span><span style="color:#CE9178;">&#39;pi_digits.txt&#39;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">contents = path.read_text()</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(contents)</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2、使用Python内置函数<code>open()</code>打开并读取文件。</p><ul><li>open函数的参数分别为文件路径，读取模式，编码格式。</li><li>只读文件需要使用<code>r</code>模式；只写文件，可以使用<code>w</code>模式；只追加内容，可以使用<code>a</code>模式；读写模式可使用r+</li><li>read方法读取全部文件的内容，可以传一个参数，表示读多少字节</li><li>大文件不建议使用<code>read</code>方法，因为读出来的内容会占用很大的内存</li><li><code>readline</code>方法按行读取文件</li><li><code>readlines</code>方法会读全部文件的内容，并把每行作为列表元素返回</li><li>读完文件后要调用<code>close</code>方法关闭文件</li><li>也可使用<code>with</code>关键字，在with代码块执行结束后，会自动关闭文件</li></ul><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#D4D4D4;">f = </span><span style="color:#DCDCAA;">open</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;pi_digits.txt&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;r&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">encoding</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;utf-8&quot;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(f.read()) </span><span style="color:#6A9955;"># 会读全部的文件内容，并打印</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(f.read()) </span><span style="color:#6A9955;"># 会读空字符串，并打印</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">f.close() </span><span style="color:#6A9955;"># 关闭文件，释放资源</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#B5CEA8;">3.1415926535</span></span></span>
<span class="line"><span class="line"><span style="color:#B5CEA8;">  8979323846</span></span></span>
<span class="line"><span class="line"><span style="color:#B5CEA8;">  2643383279</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">f = </span><span style="color:#DCDCAA;">open</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;pi_digits.txt&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;r&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">encoding</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;utf-8&quot;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(f.read(</span><span style="color:#B5CEA8;">5</span><span style="color:#D4D4D4;">)) </span><span style="color:#6A9955;"># 读取第1-5个字节</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(f.read(</span><span style="color:#B5CEA8;">5</span><span style="color:#D4D4D4;">)) </span><span style="color:#6A9955;"># 读取第6-10个字节</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">f.close()</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#B5CEA8;">3.141</span></span></span>
<span class="line"><span class="line"><span style="color:#B5CEA8;">59265</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#D4D4D4;">f = </span><span style="color:#DCDCAA;">open</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;pi_digits.txt&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;r&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">encoding</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;utf-8&quot;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">line = f.readline()</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">while</span><span style="color:#D4D4D4;">(line != </span><span style="color:#CE9178;">&#39;&#39;</span><span style="color:#D4D4D4;">):</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">  print</span><span style="color:#D4D4D4;">(line.strip())</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  line = f.readline()</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">f.close()</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#D4D4D4;">f = </span><span style="color:#DCDCAA;">open</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;pi_digits.txt&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;r&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">encoding</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;utf-8&quot;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">lines = f.readlines()</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">for</span><span style="color:#D4D4D4;"> line </span><span style="color:#C586C0;">in</span><span style="color:#D4D4D4;"> lines:</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">  print</span><span style="color:#D4D4D4;">(line.strip())</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">f.close()</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#C586C0;">with</span><span style="color:#DCDCAA;"> open</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;pi_digits.txt&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;r&#39;</span><span style="color:#D4D4D4;">) </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> f:</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">  print</span><span style="color:#D4D4D4;">(f.read())</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>按行读取</strong></p><p>可以使用 <code>splitlines() </code>方法把字符串根据换行符拆分成列表，再使用 for 循环以每次一行的方式检查文件中的各行</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> pathlib </span><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> Path</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">path = Path(</span><span style="color:#CE9178;">&#39;pi_digits.txt&#39;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">contents = path.read_text()</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># 如果系统的默认编码与要读取的文件的编码不一致，参数 encoding 必不可少。</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">contents1 = path.read_text(</span><span style="color:#9CDCFE;">encoding</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&#39;utf-8&#39;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">pi_str = </span><span style="color:#CE9178;">&#39;&#39;</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">for</span><span style="color:#D4D4D4;"> line </span><span style="color:#C586C0;">in</span><span style="color:#D4D4D4;"> contents.splitlines():</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  pi_str += line.strip()</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">  print</span><span style="color:#D4D4D4;">(line)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#B5CEA8;">3.1415926535</span></span></span>
<span class="line"><span class="line"><span style="color:#B5CEA8;">  8979323846</span></span></span>
<span class="line"><span class="line"><span style="color:#B5CEA8;">  2643383279</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(pi_str)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; </span><span style="color:#B5CEA8;">3.141592653589793238462643383279</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意：在读取文本文件时，Python 将其中的所有文本都解释为字符串。如果读取的是数，并且要将其作为数值使用，就必须使用<code>int()</code> 函数将其转换为整数，或者使用 float()函数将其转换为浮点数。</p><h4 id="写入文件" tabindex="-1"><a class="header-anchor" href="#写入文件"><span>写入文件</span></a></h4><p>1、可使用 <code>write_text()</code> 将数据写入文件</p><p>没有该文件时会新建文件，有该文件时替换文件中的内容为写入数据</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> pathlib </span><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> Path</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">path = Path(</span><span style="color:#CE9178;">&#39;programming.txt&#39;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">path.write_text(</span><span style="color:#CE9178;">&quot;I love programming.&quot;</span><span style="color:#D4D4D4;">)</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意：Python 只能将字符串写入文本文件。如果要将数值数据存储到文本文件中，必须先使用函数 str() 将其转换为字符串格式</p><p>2、同上使用Python内置函数<code>open()</code>打开并写入文件</p><p>r+模式表示可读写</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#C586C0;">with</span><span style="color:#DCDCAA;"> open</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;data.txt&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;w&#39;</span><span style="color:#D4D4D4;">) </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> f:</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  f.write(</span><span style="color:#CE9178;">&#39;qwer</span><span style="color:#D7BA7D;">\\n</span><span style="color:#CE9178;">&#39;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  f.write(</span><span style="color:#CE9178;">&#39;asdf&#39;</span><span style="color:#D4D4D4;">)</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="存储数据" tabindex="-1"><a class="header-anchor" href="#存储数据"><span>存储数据</span></a></h4><p><code>json.dumps()</code>函数将Python 对象转换成字符串</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> pathlib </span><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> Path</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> json</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">numbers = [</span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">5</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">7</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">11</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">13</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">path = Path(</span><span style="color:#CE9178;">&#39;numbers.json&#39;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">contents = json.dumps(numbers)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">path.write_text(contents)</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>json.loads()</code> 函数将字符串转换成Python 对象</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> pathlib </span><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> Path</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> json</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">path = Path(</span><span style="color:#CE9178;">&#39;numbers.json&#39;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">contents = path.read_text()</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">numbers = json.loads(contents)</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(numbers)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; [</span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">5</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">7</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">11</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">13</span><span style="color:#D4D4D4;">]</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>exists()</code> 方法判断文件是否存在</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#D4D4D4;">path = Path(</span><span style="color:#CE9178;">&#39;username.json&#39;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> path.exists():</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  contents = path.read_text()</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  username = json.loads(contents)</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">  print</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">f</span><span style="color:#CE9178;">&quot;Welcome back, </span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;">username</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">!&quot;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">else</span><span style="color:#D4D4D4;">:</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  username = </span><span style="color:#DCDCAA;">input</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;What is your name? &quot;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  contents = json.dumps(username)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  path.write_text(contents)</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">  print</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">f</span><span style="color:#CE9178;">&quot;We&#39;ll remember you when you come back, </span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;">username</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">!&quot;</span><span style="color:#D4D4D4;">)</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_12、异常处理" tabindex="-1"><a class="header-anchor" href="#_12、异常处理"><span>12、异常处理</span></a></h3><p>可通过 try-except 代码块来处理可能引发的异常</p><p>只有 try 代码块成功执行才需要继续执行的代码，都应放到 else 代码块中，finall代码块中的语句无论是否错误都会执行</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#D4D4D4;">number1 = </span><span style="color:#4EC9B0;">int</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">input</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;请输入被除数：&#39;</span><span style="color:#D4D4D4;">))</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">number2 = </span><span style="color:#4EC9B0;">int</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">input</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;请输入除数：&#39;</span><span style="color:#D4D4D4;">))</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">try</span><span style="color:#D4D4D4;">:</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  answer = number1 / number2</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">except</span><span style="color:#4EC9B0;"> ZeroDivisionError</span><span style="color:#D4D4D4;">:</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">  print</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;除数不能为0&quot;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">else</span><span style="color:#D4D4D4;">:</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">  print</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">f</span><span style="color:#CE9178;">&quot;</span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;">number1</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">/</span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;">number2</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">=</span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;">answer</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">&quot;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">finally</span><span style="color:#D4D4D4;">:</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">  print</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;计算结结束&quot;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  </span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">请输入被除数：</span><span style="color:#B5CEA8;">2</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">请输入除数：</span><span style="color:#B5CEA8;">1</span></span></span>
<span class="line"><span class="line"><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">/</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">=</span><span style="color:#B5CEA8;">2.0</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">计算结束</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">请输入被除数：</span><span style="color:#B5CEA8;">1</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">请输入除数：</span><span style="color:#B5CEA8;">0</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">除数不能为0</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">计算结束</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>静默失败</strong></p><p>有时候希望程序在发生异常时保持静默，就像什么都没有发生一样继续运行</p><p>可以在except 代码块中使用pass语句</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#569CD6;">def</span><span style="color:#DCDCAA;"> count_words</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">path</span><span style="color:#D4D4D4;">):</span></span></span>
<span class="line"><span class="line"><span style="color:#CE9178;">    &quot;&quot;&quot;计算一个文件大致包含多少个单词&quot;&quot;&quot;</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">    try</span><span style="color:#D4D4D4;">:</span></span></span>
<span class="line"><span class="line"><span style="color:#F44747;">        --</span><span style="color:#D4D4D4;">snip</span><span style="color:#F44747;">--</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">    except</span><span style="color:#4EC9B0;"> FileNotFoundError</span><span style="color:#D4D4D4;">:</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">        pass</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">    else</span><span style="color:#D4D4D4;">:</span></span></span>
<span class="line"><span class="line"><span style="color:#F44747;">        --</span><span style="color:#D4D4D4;">snip</span><span style="color:#F44747;">--</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_13、测试代码" tabindex="-1"><a class="header-anchor" href="#_13、测试代码"><span>13、测试代码</span></a></h3><ul><li>assert 断言就是声称满足特定的条件，测试就是判断断言是否正确</li><li>测试文件的名称很重要，必须以 test_打头。当你让pytest 运行测试时，它将查找以 test_打头的文件，并运行其中的所有测试</li><li>运行测试：可打开测试文件所在的文件夹，并使用该编辑器内嵌的终端。在终端窗口中执行命令 pytest 测试文件名</li></ul><p><strong>测试中常用的断言语句</strong></p><table><thead><tr><th>断言</th><th>用途</th></tr></thead><tbody><tr><td>assert a == b</td><td>断言两个值相等</td></tr><tr><td>assert a != b</td><td>断言两个值不相等</td></tr><tr><td>assert a</td><td>断言a的布尔求值为True</td></tr><tr><td>assert not a</td><td>断言a的布尔求值为False</td></tr><tr><td>assert element in list</td><td>断言元素在列表中</td></tr><tr><td>assert element not in list</td><td>断言元素不在列表中</td></tr></tbody></table><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> name_function </span><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> get_formatted_name</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">def</span><span style="color:#DCDCAA;"> test_first_last_name</span><span style="color:#D4D4D4;">():</span></span></span>
<span class="line"><span class="line"><span style="color:#CE9178;">  &quot;&quot;&quot;能够正确地处理像 Janis Joplin 这样的姓名吗？&quot;&quot;&quot;</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  formatted_name = get_formatted_name(</span><span style="color:#CE9178;">&#39;janis&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;joplin&#39;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  assert</span><span style="color:#D4D4D4;"> formatted_name == </span><span style="color:#CE9178;">&#39;Janis Joplin&#39;</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在pytest 中，要创建夹具（fixture），可编写一个使用装饰器 @pytest.fixture 装饰的函数。</p><p>装饰器（decorator）是放在函数定义前面的指令。在运行函数前，Python 将该指令应用于函数，以修改函数代码的行为。</p><p>当测试函数的一个形参与应用了装饰器 @pytest.fixture 的函数（夹具）同名时，将自动运行夹具，并将夹具返回的值传递给测试函数。</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> pytest</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> survey </span><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> AnonymousSurvey</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">@pytest.fixture</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">def</span><span style="color:#DCDCAA;"> language_survey</span><span style="color:#D4D4D4;">():</span></span></span>
<span class="line"><span class="line"><span style="color:#CE9178;">  &quot;&quot;&quot;一个可供所有测试函数使用的 AnonymousSurvey 实例&quot;&quot;&quot;</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  question = </span><span style="color:#CE9178;">&quot;What language did you first learn to speak?&quot;</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  language_survey = AnonymousSurvey(question)</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#D4D4D4;"> language_survey</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">def</span><span style="color:#DCDCAA;"> test_store_single_response</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">language_survey</span><span style="color:#D4D4D4;">):</span></span></span>
<span class="line"><span class="line"><span style="color:#CE9178;">  &quot;&quot;&quot;测试单个答案会被妥善地存储&quot;&quot;&quot;</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  language_survey.store_response(</span><span style="color:#CE9178;">&#39;English&#39;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  assert</span><span style="color:#CE9178;"> &#39;English&#39;</span><span style="color:#569CD6;"> in</span><span style="color:#D4D4D4;"> language_survey.responses</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">def</span><span style="color:#DCDCAA;"> test_store_three_responses</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">language_survey</span><span style="color:#D4D4D4;">):</span></span></span>
<span class="line"><span class="line"><span style="color:#CE9178;">  &quot;&quot;&quot;测试三个答案会被妥善地存储&quot;&quot;&quot;</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  responses = [</span><span style="color:#CE9178;">&#39;English&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;Spanish&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;Mandarin&#39;</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  for</span><span style="color:#D4D4D4;"> response </span><span style="color:#C586C0;">in</span><span style="color:#D4D4D4;"> responses:</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    language_survey.store_response(response)</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  for</span><span style="color:#D4D4D4;"> response </span><span style="color:#C586C0;">in</span><span style="color:#D4D4D4;"> responses:</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">    assert</span><span style="color:#D4D4D4;"> response </span><span style="color:#569CD6;">in</span><span style="color:#D4D4D4;"> language_survey.responses</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="二、项目实践" tabindex="-1"><a class="header-anchor" href="#二、项目实践"><span>二、项目实践</span></a></h2><h3 id="_1、项目一-外星人入侵" tabindex="-1"><a class="header-anchor" href="#_1、项目一-外星人入侵"><span>1、项目一：外星人入侵</span></a></h3><h4 id="检测编组碰撞并删除" tabindex="-1"><a class="header-anchor" href="#检测编组碰撞并删除"><span>检测编组碰撞并删除</span></a></h4><p>sprite.groupcollide() 函数将一个编组中每个元素的 rect 与另一个编组中每个元素的 rect进行比较。</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#D4D4D4;">pygame.sprite.groupcollide(</span><span style="color:#569CD6;">self</span><span style="color:#D4D4D4;">.bullets, </span><span style="color:#569CD6;">self</span><span style="color:#D4D4D4;">.aliens, </span><span style="color:#569CD6;">True</span><span style="color:#D4D4D4;">, </span><span style="color:#569CD6;">True</span><span style="color:#D4D4D4;">)</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>每当有子弹和外星人的 rect 重叠时，groupcollide() 就在返回的字典中添加一个键值对。两个值为 True 的实参告诉 Pygame 在发生碰撞时删除对应的子弹和外星人。</p><p>要模拟能够飞到屏幕上边缘的高能子弹（它会消灭击中的每个外星人，但自己不受影响），可将第一个布尔实参设置为 False，并保留第二个布尔实参为 True。这样被击中的外星人将消失，但所有的子弹始终有效，直到抵达屏幕的上边缘后消失。</p><h4 id="检测精灵和编组碰撞" tabindex="-1"><a class="header-anchor" href="#检测精灵和编组碰撞"><span>检测精灵和编组碰撞</span></a></h4><p>spritecollideany() 函数接受两个实参：一个精灵和一个编组。</p><p>它检查编组是否有成员与精灵发生了碰撞，并在找到与精灵发生碰撞的成员后停止遍历编组。</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#D4D4D4;">pygame.sprite.spritecollideany(</span><span style="color:#569CD6;">self</span><span style="color:#D4D4D4;">.ship, </span><span style="color:#569CD6;">self</span><span style="color:#D4D4D4;">.aliens)</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这里，它遍历 aliens 编组，并返回找到的第一个与飞船发生碰撞的外星人。</p><h4 id="处理文本" tabindex="-1"><a class="header-anchor" href="#处理文本"><span>处理文本</span></a></h4><p>导入 pygame.font 模块，它让 Pygame 能够将文本渲染到屏幕上</p><p>Pygame 处理文本的方式是，将要显示的字符串渲染为图像。</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#569CD6;">self</span><span style="color:#D4D4D4;">.msg_image = </span><span style="color:#569CD6;">self</span><span style="color:#D4D4D4;">.font.render(msg, </span><span style="color:#569CD6;">True</span><span style="color:#D4D4D4;">, </span><span style="color:#569CD6;">self</span><span style="color:#D4D4D4;">.text_color, </span><span style="color:#569CD6;">self</span><span style="color:#D4D4D4;">.button_color)</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>调用font.render() 将存储在 msg 中的文本转换为图像</p><p>font.render() 方法还接受一个布尔实参，该实参指定是否开启反锯齿功能（反锯齿让文本的边缘更平滑）。余下的两个实参分别是文本颜色和背景色。</p><h4 id="鼠标点击位置判断" tabindex="-1"><a class="header-anchor" href="#鼠标点击位置判断"><span>鼠标点击位置判断</span></a></h4><p>collidepoint</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#569CD6;">self</span><span style="color:#D4D4D4;">.play_button.rect.collidepoint(mouse_pos)</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这里使用 rect 的 collidepoint() 方法检查鼠标的单击位置是否在 Play 按钮的 rect 内。如果是，就将 game_active 设置为 True，让游戏开始。</p><h4 id="大数千分位处理" tabindex="-1"><a class="header-anchor" href="#大数千分位处理"><span>大数千分位处理</span></a></h4><p>round() 函数通常让浮点数（第一个实参）精确到小数点后某一位，其中的小数位数由第二个实参指定。如果将第二个实参指定为负数，round() 会将第一个实参舍入到最近的 10 的整数倍，如10、100、1000 等。</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#D4D4D4;"> rounded_score = </span><span style="color:#DCDCAA;">round</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">self</span><span style="color:#D4D4D4;">.stats.score, -</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">)</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这里的代码让 Python 将 stats.score 的值舍入到最近的 10 的整数倍</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#D4D4D4;">score_str = </span><span style="color:#569CD6;">f</span><span style="color:#CE9178;">&quot;</span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;">rounded_score</span><span style="color:#569CD6;">:,}</span><span style="color:#CE9178;">&quot;</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这里使用的字符序列为冒号和逗号（:,），它让 Python 在数值的合适位置插入逗号，生成的字符串类似于 1,000,000（而不是 1000000）。</p><h3 id="_2、数据可视化" tabindex="-1"><a class="header-anchor" href="#_2、数据可视化"><span>2、数据可视化</span></a></h3><h4 id="绘制折线图" tabindex="-1"><a class="header-anchor" href="#绘制折线图"><span>绘制折线图</span></a></h4><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> matplotlib.pyplot </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> plt</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">input_values = [</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">4</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">5</span><span style="color:#D4D4D4;">] </span><span style="color:#6A9955;"># 输入值</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">squares = [</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">4</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">9</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">16</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">25</span><span style="color:#D4D4D4;">] </span><span style="color:#6A9955;"># 输出值</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">plt.style.use(</span><span style="color:#CE9178;">&#39;seaborn-v0_8&#39;</span><span style="color:#D4D4D4;">) </span><span style="color:#6A9955;"># 使用内置样式</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># 变量 fig 表示由生成的一系列绘图构成的整个图形。</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># 变量 ax 表示图形中的绘图</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">fig, ax = plt.subplots()</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># 根据给定的数据绘制绘图，设置线条粗细</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">ax.plot(input_values, squares, </span><span style="color:#9CDCFE;">linewidth</span><span style="color:#D4D4D4;">=</span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">) </span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># 设置图题并给坐标轴加上标签</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">ax.set_title(</span><span style="color:#CE9178;">&quot;Square Numbers&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">fontsize</span><span style="color:#D4D4D4;">=</span><span style="color:#B5CEA8;">24</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">ax.set_xlabel(</span><span style="color:#CE9178;">&quot;Value&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">fontsize</span><span style="color:#D4D4D4;">=</span><span style="color:#B5CEA8;">14</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">ax.set_ylabel(</span><span style="color:#CE9178;">&quot;Square of Value&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">fontsize</span><span style="color:#D4D4D4;">=</span><span style="color:#B5CEA8;">14</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># 设置刻度标记的样式</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">ax.tick_params(</span><span style="color:#9CDCFE;">labelsize</span><span style="color:#D4D4D4;">=</span><span style="color:#B5CEA8;">14</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># 打开 Matplotlib 查看器并显示绘图</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">plt.show()</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> matplotlib.pyplot </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> plt</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># x_values = [1, 2, 3, 4, 5]</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># y_values = [1, 4, 9, 16, 25]</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">x_values = </span><span style="color:#DCDCAA;">range</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">1001</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">y_values = [x**</span><span style="color:#B5CEA8;">2</span><span style="color:#C586C0;"> for</span><span style="color:#D4D4D4;"> x </span><span style="color:#C586C0;">in</span><span style="color:#D4D4D4;"> x_values] </span><span style="color:#6A9955;"># 列表推导式</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">plt.style.use(</span><span style="color:#CE9178;">&#39;seaborn-v0_8&#39;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">fig, ax = plt.subplots()</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># ax.scatter(2, 4, s=200) # 绘制单点</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># ax.scatter(x_values, y_values, color = (0, 0.8, 0), s=10) # 绘制一系列点</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># 使用颜色映射：根据每个点的 y 坐标值来设置其颜色</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">ax.scatter(x_values, y_values, </span><span style="color:#9CDCFE;">c</span><span style="color:#D4D4D4;"> = y_values, </span><span style="color:#9CDCFE;">cmap</span><span style="color:#D4D4D4;"> = plt.cm.Blues, </span><span style="color:#9CDCFE;">s</span><span style="color:#D4D4D4;">=</span><span style="color:#B5CEA8;">10</span><span style="color:#D4D4D4;">) </span><span style="color:#6A9955;"># 绘制一系列点</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># 设置图题并给坐标轴加上标签</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">ax.set_title(</span><span style="color:#CE9178;">&quot;Square Numbers&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">fontsize</span><span style="color:#D4D4D4;">=</span><span style="color:#B5CEA8;">24</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">ax.set_xlabel(</span><span style="color:#CE9178;">&quot;Value&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">fontsize</span><span style="color:#D4D4D4;">=</span><span style="color:#B5CEA8;">14</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">ax.set_ylabel(</span><span style="color:#CE9178;">&quot;Square of Value&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">fontsize</span><span style="color:#D4D4D4;">=</span><span style="color:#B5CEA8;">14</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># 设置刻度标记的样式</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">ax.tick_params(</span><span style="color:#9CDCFE;">labelsize</span><span style="color:#D4D4D4;">=</span><span style="color:#B5CEA8;">14</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># 设置每个坐标轴的取值范围</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">ax.axis([</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">,</span><span style="color:#B5CEA8;">1100</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">1_100_000</span><span style="color:#D4D4D4;">])</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">ax.ticklabel_format(</span><span style="color:#9CDCFE;">style</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&#39;plain&#39;</span><span style="color:#D4D4D4;">) </span><span style="color:#6A9955;"># 修改刻度标记样式</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># 打开 Matplotlib 查看器并显示绘图</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">plt.show()  </span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># 保存绘图</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># plt.savefig(&#39;squares_plot.png&#39;, bbox_inches=&#39;tight&#39;)</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="随机游走" tabindex="-1"><a class="header-anchor" href="#随机游走"><span>随机游走</span></a></h4><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> random </span><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> choice </span><span style="color:#6A9955;"># choice选择一个值</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">class</span><span style="color:#4EC9B0;"> RandomWalk</span><span style="color:#D4D4D4;">:</span></span></span>
<span class="line"><span class="line"><span style="color:#CE9178;">    &quot;&quot;&quot;一个生成随机游走数据的类&quot;&quot;&quot;</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">    def</span><span style="color:#DCDCAA;"> __init__</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">self</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">num_points</span><span style="color:#D4D4D4;">=</span><span style="color:#B5CEA8;">5000</span><span style="color:#D4D4D4;">): </span><span style="color:#6A9955;"># 设置随机游走包含的默认点数</span></span></span>
<span class="line"><span class="line"><span style="color:#CE9178;">        &quot;&quot;&quot;初始化随机游走的属性&quot;&quot;&quot;</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">        self</span><span style="color:#D4D4D4;">.num_points = num_points</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">        # 所有随机游走都始于(0, 0)</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">        self</span><span style="color:#D4D4D4;">.x_values = [</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">        self</span><span style="color:#D4D4D4;">.y_values = [</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">    def</span><span style="color:#DCDCAA;"> fill_walk</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">self</span><span style="color:#D4D4D4;">):</span></span></span>
<span class="line"><span class="line"><span style="color:#CE9178;">        &quot;&quot;&quot;计算随机游走包含的所有点&quot;&quot;&quot;</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">        # 不断游走，直到列表达到指定的长度</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">        while</span><span style="color:#DCDCAA;"> len</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">self</span><span style="color:#D4D4D4;">.x_values) &lt; </span><span style="color:#569CD6;">self</span><span style="color:#D4D4D4;">.num_points:</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">            # 决定前进的方向以及沿这个方向前进的距离</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">            x_step = </span><span style="color:#569CD6;">self</span><span style="color:#D4D4D4;">.get_step()</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">            y_step = </span><span style="color:#569CD6;">self</span><span style="color:#D4D4D4;">.get_step()</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">            # 拒绝原地踏步</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">            if</span><span style="color:#D4D4D4;"> x_step == </span><span style="color:#B5CEA8;">0</span><span style="color:#569CD6;"> and</span><span style="color:#D4D4D4;"> y_step == </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">:</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">                continue</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">            # 计算下一个点的 x 坐标值和 y 坐标值</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">            x = </span><span style="color:#569CD6;">self</span><span style="color:#D4D4D4;">.x_values[-</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">] + x_step</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">            y = </span><span style="color:#569CD6;">self</span><span style="color:#D4D4D4;">.y_values[-</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">] + y_step</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">            self</span><span style="color:#D4D4D4;">.x_values.append(x)</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">            self</span><span style="color:#D4D4D4;">.y_values.append(y)</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">    def</span><span style="color:#DCDCAA;"> get_step</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">self</span><span style="color:#D4D4D4;">):</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">        direction = choice([</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, -</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">])</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">        distance = choice([</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">4</span><span style="color:#D4D4D4;">])</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">        step = direction * distance</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">        return</span><span style="color:#D4D4D4;"> step</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> matplotlib.pyplot </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> plt</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> random_walk </span><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> RandomWalk</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># 只要程序处于活动状态，就不断地模拟随机游走</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">while</span><span style="color:#569CD6;"> True</span><span style="color:#D4D4D4;">:</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">    # 创建一个 RandomWalk 实例</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    rw = RandomWalk(</span><span style="color:#B5CEA8;">50000</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    rw.fill_walk()</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">    # 将所有的点都绘制出来</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    plt.style.use(</span><span style="color:#CE9178;">&#39;classic&#39;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    fig, ax = plt.subplots()</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">    # fig, ax = plt.subplots(figsize=(15, 9)) # 使用参数figsize指定生成的图形尺寸</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">    # 使用颜色映射来指出游走中各个点的先后顺序，并删除每个点的黑色轮廓，让其颜色更加明显</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    point_numbers = </span><span style="color:#DCDCAA;">range</span><span style="color:#D4D4D4;">(rw.num_points)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    ax.scatter(rw.x_values, rw.y_values, </span><span style="color:#9CDCFE;">c</span><span style="color:#D4D4D4;">=point_numbers, </span><span style="color:#9CDCFE;">cmap</span><span style="color:#D4D4D4;">=plt.cm.Blues, </span><span style="color:#9CDCFE;">edgecolors</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&#39;none&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">s</span><span style="color:#D4D4D4;">=</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">    # ax.scatter(rw.x_values, rw.y_values, s=15)</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">    # ax.plot(rw.x_values, rw.y_values)</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    ax.set_aspect(</span><span style="color:#CE9178;">&#39;equal&#39;</span><span style="color:#D4D4D4;">) </span><span style="color:#6A9955;"># 设置两条轴上刻度的间距相等</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">    # 突出起点和终点</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    ax.scatter(</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">c</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&#39;green&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">edgecolors</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&#39;none&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">s</span><span style="color:#D4D4D4;">=</span><span style="color:#B5CEA8;">100</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    ax.scatter(rw.x_values[-</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">], rw.y_values[-</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">], </span><span style="color:#9CDCFE;">c</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&#39;red&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">edgecolors</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&#39;none&#39;</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">        s</span><span style="color:#D4D4D4;">=</span><span style="color:#B5CEA8;">100</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">    # 隐藏坐标轴</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    ax.get_xaxis().set_visible(</span><span style="color:#569CD6;">False</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    ax.get_yaxis().set_visible(</span><span style="color:#569CD6;">False</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    plt.show()</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    keep_running = </span><span style="color:#DCDCAA;">input</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;Make another walk? (y/n): &quot;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">    if</span><span style="color:#D4D4D4;"> keep_running == </span><span style="color:#CE9178;">&#39;n&#39;</span><span style="color:#D4D4D4;">:</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">        break</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="使用plotly模拟投掷筛子" tabindex="-1"><a class="header-anchor" href="#使用plotly模拟投掷筛子"><span>使用Plotly模拟投掷筛子</span></a></h4><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> random </span><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> randint</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">class</span><span style="color:#4EC9B0;"> Die</span><span style="color:#D4D4D4;">:</span></span></span>
<span class="line"><span class="line"><span style="color:#CE9178;">    &quot;&quot;&quot;表示一个骰子的类&quot;&quot;&quot;</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">    def</span><span style="color:#DCDCAA;"> __init__</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">self</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">num_sides</span><span style="color:#D4D4D4;">=</span><span style="color:#B5CEA8;">6</span><span style="color:#D4D4D4;">):</span></span></span>
<span class="line"><span class="line"><span style="color:#CE9178;">        &quot;&quot;&quot;骰子默认为 6 面的&quot;&quot;&quot;</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">        self</span><span style="color:#D4D4D4;">.num_sides = num_sides</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">    def</span><span style="color:#DCDCAA;"> roll</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">self</span><span style="color:#D4D4D4;">):</span></span></span>
<span class="line"><span class="line"><span style="color:#CE9178;">        &quot;&quot;&quot;&quot;返回一个介于 1 和骰子面数之间的随机值&quot;&quot;&quot;</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">        return</span><span style="color:#D4D4D4;"> randint(</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#569CD6;">self</span><span style="color:#D4D4D4;">.num_sides)</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> plotly.express </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> px</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> die </span><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> Die</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># 创建量个 D6</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">die_1 = Die()</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">die_2 = Die()</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># die_2 = Die(8)</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># 掷几次骰子并将结果存储在一个列表中</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">results = []</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">for</span><span style="color:#D4D4D4;"> roll_num </span><span style="color:#C586C0;">in</span><span style="color:#DCDCAA;"> range</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">1000</span><span style="color:#D4D4D4;">):</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    result = die_1.roll() + die_2.roll()</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    results.append(result)</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">frequencies = []</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">max_result = die_1.num_sides + die_2.num_sides</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">poss_results = </span><span style="color:#DCDCAA;">range</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">, max_result+</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">for</span><span style="color:#D4D4D4;"> value </span><span style="color:#C586C0;">in</span><span style="color:#D4D4D4;"> poss_results:</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    frequency = results.count(value) </span><span style="color:#6A9955;"># 计算每个点数在 results 中出现了多少次</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    frequencies.append(frequency)</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">title = </span><span style="color:#CE9178;">&quot;投掷1000次两个六面骰子的结果&quot;</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">labels = {</span><span style="color:#CE9178;">&#39;x&#39;</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&#39;Result&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;y&#39;</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&#39;Frequency of Result&#39;</span><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">fig = px.bar(</span><span style="color:#9CDCFE;">x</span><span style="color:#D4D4D4;">=poss_results, </span><span style="color:#9CDCFE;">y</span><span style="color:#D4D4D4;">=frequencies, </span><span style="color:#9CDCFE;">title</span><span style="color:#D4D4D4;">=title, </span><span style="color:#9CDCFE;">labels</span><span style="color:#D4D4D4;">=labels) </span><span style="color:#6A9955;"># 绘制直方图</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">fig.update_layout(</span><span style="color:#9CDCFE;">xaxis_dtick</span><span style="color:#D4D4D4;">=</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">) </span><span style="color:#6A9955;"># xaxis_dtick表示x轴上刻度标记的间距，设置为1，给每个条形都加上了标签</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">fig.show()</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># fig.write_html(&#39;dice_visual_d6d6.html&#39;) # 保存图形</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="处理csv格式文件" tabindex="-1"><a class="header-anchor" href="#处理csv格式文件"><span><strong>处理CSV格式文件</strong></span></a></h4><p>要在文本文件中存储数据，最简单的方式是将数据组织为一系列以逗号分隔的值（comma-separated values，CSV）并写入文件。这样的文件称为 CSV 文件</p><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#CE9178;">&quot;USW00025333&quot;</span><span style="color:#D4D4D4;">,</span><span style="color:#CE9178;">&quot;SITKA AIRPORT, AK US&quot;</span><span style="color:#D4D4D4;">,</span><span style="color:#CE9178;">&quot;2021-01-01&quot;</span><span style="color:#D4D4D4;">,,</span><span style="color:#CE9178;">&quot;44&quot;</span><span style="color:#D4D4D4;">,</span><span style="color:#CE9178;">&quot;40&quot;</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> pathlib </span><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> Path</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> csv</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">path = Path(</span><span style="color:#CE9178;">&#39;weather_data/sitka_weather_07-2021_simple.csv&#39;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">lines = path.read_text().splitlines()</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">reader = csv.reader(lines)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">header_row = </span><span style="color:#DCDCAA;">next</span><span style="color:#D4D4D4;">(reader)</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># 对列表调用 enumerate() 来获取每个元素的索引及其值</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">for</span><span style="color:#D4D4D4;"> index, column_header </span><span style="color:#C586C0;">in</span><span style="color:#DCDCAA;"> enumerate</span><span style="color:#D4D4D4;">(header_row):</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">    print</span><span style="color:#D4D4D4;">(index, column_header)</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用strptime()方法设置日期和时间</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> datetime </span><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> datetime</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">first_date = datetime.strptime(</span><span style="color:#CE9178;">&#39;2021-07-01&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;%Y-%m-</span><span style="color:#569CD6;">%d</span><span style="color:#CE9178;">&#39;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(first_date)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">=&gt; </span><span style="color:#B5CEA8;">2021</span><span style="color:#D4D4D4;">-</span><span style="color:#B5CEA8;">0</span><span style="color:#F44747;">7</span><span style="color:#D4D4D4;">-</span><span style="color:#B5CEA8;">0</span><span style="color:#F44747;">1</span><span style="color:#B5CEA8;"> 00</span><span style="color:#D4D4D4;">:</span><span style="color:#B5CEA8;">00</span><span style="color:#D4D4D4;">:</span><span style="color:#B5CEA8;">00</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>首先导入 datetime 模块中的 datetime 类，再调用 strptime() 方法，并将包含日期的字符串作为第一个实参。</p><p>第二个实参告诉 Python 如何设置日期的格式。</p><p>&#39;%Y-&#39; 让 Python 将字符串中第一个连字符前面的部分视为四位数的年份</p><p>&#39;%m-&#39; 让 Python 将第二个连字符前面的部分视为表示月份的两位数</p><p>&#39;%d&#39; 让 Python 将字符串的最后一部分视为月份中的一天（1～31）</p><p>datetime 模块中设置日期和时间格式的参数</p><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td>%A</td><td>星期几，如 Monday</td></tr><tr><td>%B</td><td>月份名，如 January</td></tr><tr><td>%m</td><td>用数表示的月份（01～12）</td></tr><tr><td>%d</td><td>用数 表 示的月份中的一天（01～31）</td></tr><tr><td>%Y</td><td>四位数的年份，如 2019</td></tr><tr><td>%y</td><td>两位数的年份，如 19</td></tr><tr><td>%H</td><td>24 小时制的小时数（00～23）</td></tr><tr><td>%I</td><td>12 小时制的小时数（01～12）</td></tr><tr><td>%p</td><td>am 或 pm</td></tr><tr><td>%M</td><td>分钟数（00～59）</td></tr><tr><td>%S</td><td>秒数（00～61）</td></tr></tbody></table><p>使用 fill_between() 方法，它接受一组 x 坐标值和两组 y 坐标值，填充两组 y 坐标值之间的空间</p><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#D4D4D4;">ax.fill_between(dates, highs, lows, </span><span style="color:#9CDCFE;">facecolor</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&#39;blue&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">alpha</span><span style="color:#D4D4D4;">=</span><span style="color:#B5CEA8;">0.1</span><span style="color:#D4D4D4;">)</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> pathlib </span><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> Path</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> csv</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> datetime </span><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> datetime</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> matplotlib.pyplot </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> plt</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">path = Path(</span><span style="color:#CE9178;">&#39;weather_data/death_valley_2021_simple.csv&#39;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># path = Path(&#39;weather_data/sitka_weather_2021_simple.csv&#39;)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">lines = path.read_text().splitlines()</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">reader = csv.reader(lines)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">header_row = </span><span style="color:#DCDCAA;">next</span><span style="color:#D4D4D4;">(reader)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">date_index = header_row.index(</span><span style="color:#CE9178;">&#39;DATE&#39;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">high_index = header_row.index(</span><span style="color:#CE9178;">&#39;TMAX&#39;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">low_index = header_row.index(</span><span style="color:#CE9178;">&#39;TMIN&#39;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">name_index = header_row.index(</span><span style="color:#CE9178;">&#39;NAME&#39;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># 提取日期、最高温度和最低温度</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">dates, highs, lows = [], [], []</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">place_name = </span><span style="color:#CE9178;">&quot;&quot;</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">for</span><span style="color:#D4D4D4;"> row </span><span style="color:#C586C0;">in</span><span style="color:#D4D4D4;"> reader:</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">    if</span><span style="color:#569CD6;"> not</span><span style="color:#D4D4D4;"> place_name:</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">        place_name = row[name_index]</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    current_date = datetime.strptime(row[date_index], </span><span style="color:#CE9178;">&#39;%Y-%m-</span><span style="color:#569CD6;">%d</span><span style="color:#CE9178;">&#39;</span><span style="color:#D4D4D4;">) </span><span style="color:#6A9955;"># 把日期数据转化成datetime对象</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">    try</span><span style="color:#D4D4D4;">:</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">        high = </span><span style="color:#4EC9B0;">int</span><span style="color:#D4D4D4;">(row[high_index])</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">        low = </span><span style="color:#4EC9B0;">int</span><span style="color:#D4D4D4;">(row[low_index])</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">    except</span><span style="color:#4EC9B0;"> ValueError</span><span style="color:#D4D4D4;">:</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">        print</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">f</span><span style="color:#CE9178;">&quot;Missing data for </span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;">current_date</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">&quot;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">    else</span><span style="color:#D4D4D4;">:</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">        dates.append(current_date)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">        highs.append(high)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">        lows.append(low)</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># 根据最高温度绘图</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">plt.style.use(</span><span style="color:#CE9178;">&#39;seaborn-v0_8&#39;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">fig, ax = plt.subplots()</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">ax.plot(dates, highs, </span><span style="color:#9CDCFE;">color</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&#39;red&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">alpha</span><span style="color:#D4D4D4;">=</span><span style="color:#B5CEA8;">0.5</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">ax.plot(dates, lows, </span><span style="color:#9CDCFE;">color</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&#39;blue&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">alpha</span><span style="color:#D4D4D4;">=</span><span style="color:#B5CEA8;">0.5</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">ax.fill_between(dates, highs, lows, </span><span style="color:#9CDCFE;">facecolor</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&#39;blue&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">alpha</span><span style="color:#D4D4D4;">=</span><span style="color:#B5CEA8;">0.1</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># 设置绘图的格式</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">plt.rcParams[</span><span style="color:#CE9178;">&quot;font.family&quot;</span><span style="color:#D4D4D4;">] = [</span><span style="color:#CE9178;">&quot;sans-serif&quot;</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">plt.rcParams[</span><span style="color:#CE9178;">&quot;font.sans-serif&quot;</span><span style="color:#D4D4D4;">] = [</span><span style="color:#CE9178;">&#39;SimHei&#39;</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">title = </span><span style="color:#569CD6;">f</span><span style="color:#CE9178;">&quot;2021年最高最低气温</span><span style="color:#D7BA7D;">\\n</span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;">place_name</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">&quot;</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">ax.set_title(title, </span><span style="color:#9CDCFE;">fontproperties</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;SimHei&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">fontsize</span><span style="color:#D4D4D4;">=</span><span style="color:#B5CEA8;">24</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">ax.set_xlabel(</span><span style="color:#CE9178;">&#39;&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">fontsize</span><span style="color:#D4D4D4;">=</span><span style="color:#B5CEA8;">16</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">fig.autofmt_xdate() </span><span style="color:#6A9955;"># 倾斜文本</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">ax.set_ylabel(</span><span style="color:#CE9178;">&quot;Temperature (F)&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">fontsize</span><span style="color:#D4D4D4;">=</span><span style="color:#B5CEA8;">16</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">ax.tick_params(</span><span style="color:#9CDCFE;">labelsize</span><span style="color:#D4D4D4;">=</span><span style="color:#B5CEA8;">16</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">plt.show()</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="处理geojson格式文件" tabindex="-1"><a class="header-anchor" href="#处理geojson格式文件"><span><strong>处理GeoJSON格式文件</strong></span></a></h4><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> pathlib </span><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> Path</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> json</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> plotly.express </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> px</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> pandas </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> pd</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># 将数据作为字符串读取并转换为 Python 对象</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">path = Path(</span><span style="color:#CE9178;">&#39;eq_data/eq_data_1_day_m1.geojson&#39;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">try</span><span style="color:#D4D4D4;">:</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    contents = path.read_text()</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">except</span><span style="color:#D4D4D4;">:</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    contents = path.read_text(</span><span style="color:#9CDCFE;">encoding</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&#39;utf-8&#39;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">all_eq_data = json.loads(contents) </span><span style="color:#6A9955;"># 将字符串转换成Python 对象</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># 将数据文件转换为更易于阅读的版本</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># path = Path(&#39;eq_data/readable_eq_data.geojson&#39;)</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># readable_contents = json.dumps(all_eq_data, indent=4) # 将Python 对象转换成字符串, indent表示缩进量</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># path.write_text(readable_contents)</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># 查看数据集中的所有地震</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">all_eq_dicts = all_eq_data[</span><span style="color:#CE9178;">&#39;features&#39;</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">mags, titles, lons, lats = [], [], [], [] </span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">for</span><span style="color:#D4D4D4;"> eq_dict </span><span style="color:#C586C0;">in</span><span style="color:#D4D4D4;"> all_eq_dicts:</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    mag = eq_dict[</span><span style="color:#CE9178;">&#39;properties&#39;</span><span style="color:#D4D4D4;">][</span><span style="color:#CE9178;">&#39;mag&#39;</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    title = eq_dict[</span><span style="color:#CE9178;">&#39;properties&#39;</span><span style="color:#D4D4D4;">][</span><span style="color:#CE9178;">&#39;title&#39;</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    lon = eq_dict[</span><span style="color:#CE9178;">&#39;geometry&#39;</span><span style="color:#D4D4D4;">][</span><span style="color:#CE9178;">&#39;coordinates&#39;</span><span style="color:#D4D4D4;">][</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    lat = eq_dict[</span><span style="color:#CE9178;">&#39;geometry&#39;</span><span style="color:#D4D4D4;">][</span><span style="color:#CE9178;">&#39;coordinates&#39;</span><span style="color:#D4D4D4;">][</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    mags.append(mag)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    titles.append(title)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    lons.append(lon)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    lats.append(lat)</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># 使用DataFrame封装数据</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">data = pd.DataFrame(</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;"> data</span><span style="color:#D4D4D4;">=</span><span style="color:#DCDCAA;">zip</span><span style="color:#D4D4D4;">(lons, lats, titles, mags), </span><span style="color:#9CDCFE;">columns</span><span style="color:#D4D4D4;">=[</span><span style="color:#CE9178;">&#39;经度&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;纬度&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;位置&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;震级&#39;</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">data.head()</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">fig = px.scatter(</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">    # x=lons,</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">    # y=lats,</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">    # labels={&#39;x&#39;: &#39;经度 &#39;, &#39;y&#39;: &#39;纬度 &#39;},</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    data,</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">    x</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&#39;经度&#39;</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">    y</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&#39;纬度&#39;</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">    range_x</span><span style="color:#D4D4D4;">=[-</span><span style="color:#B5CEA8;">200</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">200</span><span style="color:#D4D4D4;">],</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">    range_y</span><span style="color:#D4D4D4;">=[-</span><span style="color:#B5CEA8;">90</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">90</span><span style="color:#D4D4D4;">],</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">    width</span><span style="color:#D4D4D4;">=</span><span style="color:#B5CEA8;">800</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">    height</span><span style="color:#D4D4D4;">=</span><span style="color:#B5CEA8;">800</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">    title</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&#39;全球地震散点图&#39;</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">    size</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&#39;震级&#39;</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">    size_max</span><span style="color:#D4D4D4;">=</span><span style="color:#B5CEA8;">10</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">    color</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&#39;震级&#39;</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">    hover_name</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&#39;位置&#39;</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;"> )</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># fig.write_html(&#39;eq_data/global_earthquakes.html&#39;)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">fig.show()</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="使用api" tabindex="-1"><a class="header-anchor" href="#使用api"><span>使用api</span></a></h4><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-python;"><code><span class="line"><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> requests</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> plotly.express </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> px</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># 执行 API 调用并查看响应</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">url = </span><span style="color:#CE9178;">&quot;https://api.github.com/search/repositories&quot;</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">url += </span><span style="color:#CE9178;">&quot;?q=language:python+sort:stars+stars:&gt;10000&quot;</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">headers = {</span><span style="color:#CE9178;">&quot;Accept&quot;</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&quot;application/vnd.github.v3+json&quot;</span><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">r = requests.get(url, </span><span style="color:#9CDCFE;">headers</span><span style="color:#D4D4D4;">=headers)</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">f</span><span style="color:#CE9178;">&quot;Status code: </span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;">r.status_code</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">&quot;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># 处理结果</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">response_dict = r.json()</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">f</span><span style="color:#CE9178;">&quot;Complete results: </span><span style="color:#569CD6;">{not</span><span style="color:#D4D4D4;"> response_dict[</span><span style="color:#CE9178;">&#39;incomplete_results&#39;</span><span style="color:#D4D4D4;">]</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">&quot;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># 处理有关仓库的信息</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">repo_dicts = response_dict[</span><span style="color:#CE9178;">&#39;items&#39;</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">stars, hover_texts, repo_links = [], [], []</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">for</span><span style="color:#D4D4D4;"> repo_dict </span><span style="color:#C586C0;">in</span><span style="color:#D4D4D4;"> repo_dicts:</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">    # 将仓库名转换为链接</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    repo_name = repo_dict[</span><span style="color:#CE9178;">&#39;name&#39;</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    repo_url = repo_dict[</span><span style="color:#CE9178;">&#39;html_url&#39;</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    repo_link = </span><span style="color:#569CD6;">f</span><span style="color:#CE9178;">&quot;&lt;a href=&#39;</span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;">repo_url</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">&#39;&gt;</span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;">repo_name</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">&lt;/a&gt;&quot;</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    repo_links.append(repo_link)</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    stars.append(repo_dict[</span><span style="color:#CE9178;">&#39;stargazers_count&#39;</span><span style="color:#D4D4D4;">])</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">    # 创建悬停文本 </span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    owner = repo_dict[</span><span style="color:#CE9178;">&#39;owner&#39;</span><span style="color:#D4D4D4;">][</span><span style="color:#CE9178;">&#39;login&#39;</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    description = repo_dict[</span><span style="color:#CE9178;">&#39;description&#39;</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    hover_text = </span><span style="color:#569CD6;">f</span><span style="color:#CE9178;">&quot;</span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;">owner</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">&lt;br /&gt;</span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;">description</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">&quot;</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    hover_texts.append(hover_text)</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># 可视化</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">title = </span><span style="color:#CE9178;">&quot;Most-Starred Python Projects on GitHub&quot;</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">labels = {</span><span style="color:#CE9178;">&#39;x&#39;</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&#39;Repository&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;y&#39;</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&#39;Stars&#39;</span><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">fig = px.bar(</span><span style="color:#9CDCFE;">x</span><span style="color:#D4D4D4;">=repo_links, </span><span style="color:#9CDCFE;">y</span><span style="color:#D4D4D4;">=stars, </span><span style="color:#9CDCFE;">title</span><span style="color:#D4D4D4;">=title, </span><span style="color:#9CDCFE;">labels</span><span style="color:#D4D4D4;">=labels,</span><span style="color:#9CDCFE;">hover_name</span><span style="color:#D4D4D4;">=hover_texts)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">fig.update_layout(</span><span style="color:#9CDCFE;">title_font_size</span><span style="color:#D4D4D4;">=</span><span style="color:#B5CEA8;">28</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">xaxis_title_font_size</span><span style="color:#D4D4D4;">=</span><span style="color:#B5CEA8;">20</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">yaxis_title_font_size</span><span style="color:#D4D4D4;">=</span><span style="color:#B5CEA8;">20</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">fig.update_traces(</span><span style="color:#9CDCFE;">marker_color</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&#39;SteelBlue&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">marker_opacity</span><span style="color:#D4D4D4;">=</span><span style="color:#B5CEA8;">0.6</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">fig.show()</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,382)]))}const r=n(p,[["render",o],["__file","Python编程：从入门到实践.html.vue"]]),t=JSON.parse('{"path":"/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/Python%E7%BC%96%E7%A8%8B%EF%BC%9A%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%AE%9E%E8%B7%B5.html","title":"Python编程：从入门到实践","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1724988120000,"contributors":[{"name":"csmSimona","username":"csmSimona","email":"980715844@qq.com","commits":2,"url":"https://github.com/csmSimona"}],"changelog":[{"hash":"5139d2150beae936f7034e9d02e99da623d4915d","time":1724988120000,"email":"980715844@qq.com","author":"csmSimona","message":"目录调整"},{"hash":"c0d4d15fdf0689f997f6de6b8b764f488f580b66","time":1724740884000,"email":"980715844@qq.com","author":"csmSimona","message":"init"}]},"filePathRelative":"读书笔记/Python编程：从入门到实践.md","readingTime":{"minutes":34.69,"words":10407}}');export{r as comp,t as data};
