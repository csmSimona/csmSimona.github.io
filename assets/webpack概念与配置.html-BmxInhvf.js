import{_ as s,c as n,o as a,a as l}from"./app-Bo7QRXKU.js";const e="/assets/webpack-BJ48ndWK.png",p={},i=l('<h2 id="webpack" tabindex="-1"><a class="header-anchor" href="#webpack"><span>webpack</span></a></h2><p>webpack配置学习可以看这篇文章 https://www.jianshu.com/p/42e11515c10f 可以跟着他的操作一步一步来，不过有些地方已经过时了，但还是有很多可以学习的地方。 这是我根据该文章操作的代码，可以进行参考</p><p>https://github.com/csmSimona/webpacktest</p><p><a href="https://github.com/csmSimona/webpacktest/blob/master/webpack.config.js" target="_blank" rel="noopener noreferrer">一个完整的webpack配置文件</a></p><h3 id="概念" tabindex="-1"><a class="header-anchor" href="#概念"><span>概念</span></a></h3><h4 id="什么是webpack" tabindex="-1"><a class="header-anchor" href="#什么是webpack"><span>什么是webpack</span></a></h4><p>本质上，<em>webpack</em> 是一个现代 JavaScript 应用程序的<strong>静态模块打包器(module bundler)</strong>。它做的事情是，分析你的项目结构，找到JavaScript模块以及其它的一些浏览器不能直接运行的拓展语言（Scss，TypeScript等），并将其转换和打包为合适的格式供浏览器使用。</p><p>webpack可以将工程中的静态资源根据我们声明的依赖关系，打包出最后的正常运行的输出文件。官网显示的这幅图很形象地描述了这个过程：</p><p><img src="'+e+`" alt="webpack"></p><p>在webpack中，所有的静态资源都可以被处理为一个模块，包括js、图片、css、字体。</p><h4 id="模块化的好处" tabindex="-1"><a class="header-anchor" href="#模块化的好处"><span>模块化的好处</span></a></h4><ul><li>更轻松地拆分代码逻辑，对于大型工程尤其重要</li><li>更容易地去管理变量，模块会自动生成一个局部变量环境，减少全局变量的污染</li><li>显示地声明依赖关系，想想之前在head中引入很多script标签，由于script顺序错误而引起的bug</li></ul><h4 id="webpack和grunt以及gulp相比有什么特性" tabindex="-1"><a class="header-anchor" href="#webpack和grunt以及gulp相比有什么特性"><span>WebPack和Grunt以及Gulp相比有什么特性</span></a></h4><p>其实Webpack和另外两个并没有太多的可比性，Gulp/Grunt是一种能够优化前端的开发流程的工具，而WebPack是一种模块化的解决方案，不过Webpack的优点使得Webpack在很多场景下可以替代Gulp/Grunt类的工具。</p><p><strong>Grunt和Gulp的工作方式是：在一个配置文件中，指明对某些文件进行类似编译，组合，压缩等任务的具体步骤，工具之后可以自动替你完成这些任务</strong>。</p><h3 id="入口-entry" tabindex="-1"><a class="header-anchor" href="#入口-entry"><span>入口(entry)</span></a></h3><p>工程的入口文件配置，在这里的js文件以及在里面被引用的文件会被webpack找到打包。</p><p>进入入口起点后，webpack 会找出有哪些模块和库是入口起点（直接和间接）依赖的。</p><p>每个依赖项随即被处理，最后输出到称之为 <em>bundles</em> 的文件中。默认值为 <code>./src</code>。</p><p>配置写法有三种：</p><ul><li>对象，可配置多入口，可配置chunk名，灵活可扩展，最常用,一个属性就是一个entry chunk</li></ul><div class="language-JavaScript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="JavaScript" data-title="JavaScript"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-JavaScript;"><code><span class="line"><span class="line"><span style="color:#4EC9B0;">module</span><span style="color:#D4D4D4;">.</span><span style="color:#4EC9B0;">exports</span><span style="color:#D4D4D4;"> = {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  entry:</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">    app:</span><span style="color:#CE9178;"> &#39;./src/app.js&#39;</span><span style="color:#D4D4D4;">,        </span><span style="color:#6A9955;">//应用程序(app)入口</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">    vendors:</span><span style="color:#CE9178;"> &#39;./src/vendors.js&#39;</span><span style="color:#6A9955;"> //第三方库(vendor)入口</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">};</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>字符串, 最简单直接方式，单入口，chunk名默认为main</li></ul><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#4EC9B0;">module</span><span style="color:#D4D4D4;">.</span><span style="color:#4EC9B0;">exports</span><span style="color:#D4D4D4;"> = {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  entry:</span><span style="color:#CE9178;"> &#39;./path/to/my/entry/file.js&#39;</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">};</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">//是下面的简写</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> config</span><span style="color:#D4D4D4;"> = {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  entry:</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">    main:</span><span style="color:#CE9178;"> &#39;./path/to/my/entry/file.js&#39;</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">};</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>数组, 多入口，将多个入口文件打包为一个chunk，chunk名默认为main</li></ul><div class="language-text line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-text;"><code><span class="line"><span class="line"><span>module.exports = {</span></span></span>
<span class="line"><span class="line"><span>  entry: [&#39;./path/to/my/entry/file.js&#39;, &#39;./path/to/my/entry/file1.js&#39;]</span></span></span>
<span class="line"><span class="line"><span>};</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>入口一般用对象写法即可，其他两种写法的可忽略。</p><h4 id="多页面应用程序" tabindex="-1"><a class="header-anchor" href="#多页面应用程序"><span>多页面应用程序</span></a></h4><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#6A9955;">//webpack.config.js</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> config</span><span style="color:#D4D4D4;"> = {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  entry:</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">    pageOne:</span><span style="color:#CE9178;"> &#39;./src/pageOne/index.js&#39;</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">    pageTwo:</span><span style="color:#CE9178;"> &#39;./src/pageTwo/index.js&#39;</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">    pageThree:</span><span style="color:#CE9178;"> &#39;./src/pageThree/index.js&#39;</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">};</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="输出-output" tabindex="-1"><a class="header-anchor" href="#输出-output"><span>输出(output)</span></a></h3><p>打包的输出的文件配置，告诉 webpack 在哪里输出它所创建的 <em>bundles</em>，以及如何命名这些文件，默认值为 <code>./dist</code>。</p><p>Output用于配置打包输出的文件，包括输出文件的文件名、输出路径、静态资源地址，这里列出最常用的4种：</p><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#4EC9B0;">module</span><span style="color:#D4D4D4;">.</span><span style="color:#4EC9B0;">exports</span><span style="color:#D4D4D4;"> = {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  entry:</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">    app:</span><span style="color:#CE9178;"> &#39;./src/app.js&#39;</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">    search:</span><span style="color:#CE9178;"> &#39;./src/search.js&#39;</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  },</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  output:</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">    filename:</span><span style="color:#CE9178;"> &#39;js/[name].js&#39;</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">    chunkFilename:</span><span style="color:#CE9178;"> &#39;js/[name].js&#39;</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">    path:</span><span style="color:#9CDCFE;"> __dirname</span><span style="color:#D4D4D4;"> + </span><span style="color:#CE9178;">&#39;/dist&#39;</span><span style="color:#D4D4D4;">,  </span><span style="color:#6A9955;">//必须是绝对地址</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">    publicPath:</span><span style="color:#CE9178;"> &#39;http://cdn.example.com/assets/[hash]/&#39;</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">};</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="加载器-loader" tabindex="-1"><a class="header-anchor" href="#加载器-loader"><span>加载器(loader)</span></a></h3><p>Loader可以理解为不同类型模块的处理器，将这些类型的模块处理为浏览器可运行和识别的代码，用于加载某些资源文件。</p><p>因为 webpack 只能理解 JavaScript 和 JSON 文件，对于其他资源例如 css，图片，或者其他的语法集，比如 jsx， coffee，是没有办法加载的。 这就需要对应的loader将资源转化，加载进来。从字面意思也能看出，loader是用于加载的，它作用于一个个文件上。</p><p>比如babel-loader将es6以上代码转换为es5代码；sass-loader将sass代码解析为css代码；url-loader和file-loader可以将图片、字体等静态文件解析为base64码或者静态文件地址。Loaders给我们提供了处理模块的入口，在里面可以使用全部的js功能，从而使webpack具有了强大而灵活的能力。</p><blockquote><p>注意，loader 能够 <code>import</code> <em>导入任何类型的模块（例如</em> <code>.css</code> 文件），这是 webpack 特有的功能，其他打包程序或任务执行器的可能并不支持。我们认为这种语言扩展是有很必要的，因为这可以使开发人员创建出更准确的依赖关系图。</p></blockquote><ol><li><p><code>test</code> 属性，用于标识出应该被对应的 loader 进行转换的某个或某些文件。</p></li><li><p><code>use</code> 属性，表示进行转换时，应该使用哪个 loader。</p><p>loader配置：</p></li></ol><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#C8C8C8;">modlue</span><span style="color:#D4D4D4;">: {</span></span></span>
<span class="line"><span class="line"><span style="color:#C8C8C8;">    rules</span><span style="color:#D4D4D4;">: [</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">          //js Loaders</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">        {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">             test:</span><span style="color:#D16969;"> /</span><span style="color:#D7BA7D;">\\.</span><span style="color:#D16969;">js</span><span style="color:#DCDCAA;">$</span><span style="color:#D16969;">/</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">             exclude:</span><span style="color:#D16969;"> /</span><span style="color:#CE9178;">(</span><span style="color:#D16969;">node_modules</span><span style="color:#DCDCAA;">|</span><span style="color:#D16969;">bower_components</span><span style="color:#CE9178;">)</span><span style="color:#D16969;">/</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">             use:</span><span style="color:#CE9178;"> &#39;babel-loader&#39;</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">        },</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">          //css Loaders</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">        {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">            test:</span><span style="color:#D16969;"> /</span><span style="color:#D7BA7D;">\\.</span><span style="color:#D16969;">sass</span><span style="color:#DCDCAA;">$</span><span style="color:#D16969;">/</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">            use:</span><span style="color:#D4D4D4;"> [ </span><span style="color:#CE9178;">&#39;style-loader&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;css-loader&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;postcss-loader&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;sass-loader&#39;</span><span style="color:#D4D4D4;"> ]</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">        }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    ]</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="插件-plugins" tabindex="-1"><a class="header-anchor" href="#插件-plugins"><span>插件(plugins)</span></a></h3><ul><li><p>plugin 用于扩展webpack的功能。它直接作用于 webpack，扩展了它的功能。</p></li><li><p>当然loader也是变相的扩展了 webpack ，但是它只专注于转化文件（transform）这一个领域。</p></li><li><p>而plugin的功能更加的丰富，而不仅局限于资源的加载。比如代码分割、静态资源处理、环境变量的注入、将所有css的module抽取为单个文件等。</p></li><li><p>webpack自身也是用插件系统构建起来的。<strong>插件的目的是做任何loaders做不了的事情。</strong></p></li><li><p>插件的范围包括，从打包优化和压缩，一直到重新定义环境中的变量。</p></li></ul><p>想要使用一个插件，你只需要 <code>require()</code> 它，然后把它添加到 <code>plugins</code> 数组中。多数插件可以通过选项(option)自定义。</p><p>你也可以在一个配置文件中因为不同目的而多次使用同一个插件，这时需要通过使用 <code>new</code> 操作符来创建它的一个实例。</p><p>plugins配置：</p><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#6A9955;">//webpack.config.js</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> HtmlWebpackPlugin</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">require</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;html-webpack-plugin&#39;</span><span style="color:#D4D4D4;">); </span><span style="color:#6A9955;">// 通过 npm 安装</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> webpack</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">require</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;webpack&#39;</span><span style="color:#D4D4D4;">); </span><span style="color:#6A9955;">// 用于访问内置插件</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> config</span><span style="color:#D4D4D4;"> = {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  module:</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">    rules:</span><span style="color:#D4D4D4;"> [</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">      { </span><span style="color:#9CDCFE;">test:</span><span style="color:#D16969;"> /</span><span style="color:#D7BA7D;">\\.</span><span style="color:#D16969;">txt</span><span style="color:#DCDCAA;">$</span><span style="color:#D16969;">/</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">use:</span><span style="color:#CE9178;"> &#39;raw-loader&#39;</span><span style="color:#D4D4D4;"> }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    ]</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  },</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  plugins:</span><span style="color:#D4D4D4;"> [</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">    new</span><span style="color:#DCDCAA;"> HtmlWebpackPlugin</span><span style="color:#D4D4D4;">({</span><span style="color:#9CDCFE;">template:</span><span style="color:#CE9178;"> &#39;./src/index.html&#39;</span><span style="color:#D4D4D4;">})</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  ]</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">};</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#4EC9B0;">module</span><span style="color:#D4D4D4;">.</span><span style="color:#4EC9B0;">exports</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">config</span><span style="color:#D4D4D4;">;</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="模式-mode" tabindex="-1"><a class="header-anchor" href="#模式-mode"><span>模式(mode)</span></a></h3><p>通过选择 <code>none</code> 、<code>development</code> 或 <code>production</code> 之中的一个，来设置 <code>mode</code> 参数，你可以启用相应模式下的 webpack 内置的优化</p><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#4EC9B0;">module</span><span style="color:#D4D4D4;">.</span><span style="color:#4EC9B0;">exports</span><span style="color:#D4D4D4;"> = {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  mode:</span><span style="color:#CE9178;"> &#39;production&#39;</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">};</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,49),c=[i];function r(o,d){return a(),n("div",null,c)}const v=s(p,[["render",r],["__file","webpack概念与配置.html.vue"]]),u=JSON.parse('{"path":"/%E5%85%B6%E4%BB%96/webpack%E6%A6%82%E5%BF%B5%E4%B8%8E%E9%85%8D%E7%BD%AE.html","title":"","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"webpack","slug":"webpack","link":"#webpack","children":[{"level":3,"title":"概念","slug":"概念","link":"#概念","children":[]},{"level":3,"title":"入口(entry)","slug":"入口-entry","link":"#入口-entry","children":[]},{"level":3,"title":"输出(output)","slug":"输出-output","link":"#输出-output","children":[]},{"level":3,"title":"加载器(loader)","slug":"加载器-loader","link":"#加载器-loader","children":[]},{"level":3,"title":"插件(plugins)","slug":"插件-plugins","link":"#插件-plugins","children":[]},{"level":3,"title":"模式(mode)","slug":"模式-mode","link":"#模式-mode","children":[]}]}],"git":{"updatedTime":1724740884000,"contributors":[{"name":"csmSimona","email":"980715844@qq.com","commits":1}]},"filePathRelative":"其他/webpack概念与配置.md","readingTime":{"minutes":5.44,"words":1632}}');export{v as comp,u as data};
