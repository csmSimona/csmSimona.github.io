import{_ as n,c as a,a as e,o as l}from"./app-Dbx6xvs6.js";const i={};function p(r,s){return l(),a("div",null,s[0]||(s[0]=[e(`<h1 id="git小记" tabindex="-1"><a class="header-anchor" href="#git小记"><span>Git小记</span></a></h1><h4 id="_1、查看我的分支和-master-的不同" tabindex="-1"><a class="header-anchor" href="#_1、查看我的分支和-master-的不同"><span>1、<strong>查看我的分支和 master 的不同</strong></span></a></h4><div class="language-Bash line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="Bash" data-title="Bash"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-Bash;"><code><span class="line"><span class="line"><span style="color:#DCDCAA;">git</span><span style="color:#CE9178;"> diff</span><span style="color:#CE9178;"> master..my-branch</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="_2、定制提交" tabindex="-1"><a class="header-anchor" href="#_2、定制提交"><span>2、<strong>定制提交</strong></span></a></h4><div class="language-Bash line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="Bash" data-title="Bash"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-Bash;"><code><span class="line"><span class="line"><span style="color:#6A9955;"># 编辑上次提交</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">git</span><span style="color:#CE9178;"> commit</span><span style="color:#569CD6;"> --amend</span><span style="color:#569CD6;"> -m</span><span style="color:#CE9178;"> &quot;更好的提交日志&quot;</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># 在上次提交中附加一些内容，保持提交日志不变</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">git</span><span style="color:#CE9178;"> add</span><span style="color:#CE9178;"> .</span><span style="color:#D4D4D4;"> &amp;&amp; </span><span style="color:#DCDCAA;">git</span><span style="color:#CE9178;"> commit</span><span style="color:#569CD6;"> --amend</span><span style="color:#569CD6;"> --no-edit</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># 空提交 —— 可以用来重新触发 CI 构建</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">git</span><span style="color:#CE9178;"> commit</span><span style="color:#569CD6;"> --allow-empty</span><span style="color:#569CD6;"> -m</span><span style="color:#CE9178;"> &quot;chore: re-trigger build&quot;</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3、暂存区操作" tabindex="-1"><a class="header-anchor" href="#_3、暂存区操作"><span>3、<strong>暂存区操作</strong></span></a></h4><div class="language-Bash line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="Bash" data-title="Bash"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-Bash;"><code><span class="line"><span class="line"><span style="color:#6A9955;"># 将当前修改添加到暂存区</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">git</span><span style="color:#CE9178;"> stash</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># 查看暂存区列表</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">git</span><span style="color:#CE9178;"> stash</span><span style="color:#CE9178;"> list</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># 恢复暂存区最近的记录</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">git</span><span style="color:#CE9178;"> stash</span><span style="color:#CE9178;"> apply</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># 恢复暂存区指定记录</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">git</span><span style="color:#CE9178;"> stash</span><span style="color:#CE9178;"> apply</span><span style="color:#CE9178;"> stash@{n}</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># 暂存区申请使用时，出现冲突，将冲突解决后的信息同步到暂存区</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">git</span><span style="color:#CE9178;"> stash</span><span style="color:#CE9178;"> apply</span><span style="color:#569CD6;"> --index</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># 删除指定暂存区</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">git</span><span style="color:#CE9178;"> stash</span><span style="color:#CE9178;"> drop</span><span style="color:#CE9178;"> stash@{</span><span style="color:#B5CEA8;">0</span><span style="color:#CE9178;">}</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># 恢复并删除最近一次暂存区</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">git</span><span style="color:#CE9178;"> stash</span><span style="color:#CE9178;"> pop</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4、压缩合并提交" tabindex="-1"><a class="header-anchor" href="#_4、压缩合并提交"><span>4、压缩<strong>合并提交</strong></span></a></h4><div class="language-Bash line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="Bash" data-title="Bash"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-Bash;"><code><span class="line"><span class="line"><span style="color:#DCDCAA;">git</span><span style="color:#CE9178;"> merge</span><span style="color:#569CD6;"> --squash</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>将一个分支的所有提交压缩成一个单独的提交进行合并</p><p>不会产生合并提交，提交历史上只有一个新的提交</p><p><strong>使用场景：</strong></p><ul><li><strong>简化历史记录</strong>：当你希望将一个功能分支的所有工作合并为一个提交，以简化提交历史时使用<code>git merge --squash</code>。</li><li><strong>合并大量微小提交</strong>：如果一个分支上有大量的微小提交，可以使用<code>squash</code>将这些提交压缩成一个，避免提交历史过于冗长。</li></ul><h4 id="_5、git-rebase" tabindex="-1"><a class="header-anchor" href="#_5、git-rebase"><span>5、<strong>git rebase</strong></span></a></h4><p><strong>执行完git pull --rebase之后如果有合并冲突，使用以下三种方式处理这些冲突：</strong></p><ul><li><code>git rebase --abort</code> 会放弃合并，回到rebase操作之前的状态，之前的提交的不会丢弃；</li><li><code>git rebase --skip</code> 则会将引起冲突的commits丢弃掉（慎用！！）；</li><li><code>git rebase --continue</code> 合并冲突，结合&quot;git add 文件&quot;命令一起用与修复冲突，提示开发者，一步一步地有没有解决冲突。</li></ul><p><strong>功能：</strong></p><ul><li><code>git rebase</code>将一个分支的所有提交重新应用到另一个分支上，生成新的提交。</li><li>历史记录将被重写，避免创建合并提交。</li></ul><p><strong>使用场景：</strong></p><ul><li><strong>保持线性历史</strong>：当你希望保持提交历史的线性结构，避免合并提交时使用<code>git rebase</code>。</li><li><strong>整洁的提交历史</strong>：在个人开发或小团队合作中，可以使用<code>git rebase</code>保持整洁的提交历史，使日志记录更加简洁明了</li></ul><p><strong>总结：</strong></p><ul><li><code>git merge</code>适合需要保留完整历史记录的场景</li><li><code>git merge --squash</code>适合需要简化提交历史的场景</li><li><code>git rebase</code>适合需要简洁线性历史的场景</li></ul><h4 id="_6、将一个项目复制到另一个项目仓库" tabindex="-1"><a class="header-anchor" href="#_6、将一个项目复制到另一个项目仓库"><span>6、将一个项目复制到另一个项目仓库</span></a></h4><div class="language-Bash line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="Bash" data-title="Bash"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-Bash;"><code><span class="line"><span class="line"><span style="color:#DCDCAA;">git</span><span style="color:#CE9178;"> clone</span><span style="color:#569CD6;"> --mirror</span><span style="color:#D4D4D4;"> &lt;</span><span style="color:#CE9178;">老仓库的git地</span><span style="color:#D4D4D4;">址&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">cd</span><span style="color:#D4D4D4;"> &lt;</span><span style="color:#CE9178;">克隆下来的项目目</span><span style="color:#D4D4D4;">录&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">git</span><span style="color:#CE9178;"> remote</span><span style="color:#CE9178;"> set-url</span><span style="color:#CE9178;"> origin</span><span style="color:#D4D4D4;"> &lt;</span><span style="color:#CE9178;">新的git项目的地</span><span style="color:#D4D4D4;">址&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">git</span><span style="color:#CE9178;"> push</span><span style="color:#569CD6;"> --all</span><span style="color:#6A9955;"> # 推送本地所有分支到新仓库（包括历史记录）</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">git</span><span style="color:#CE9178;"> push</span><span style="color:#569CD6;"> --tags</span><span style="color:#6A9955;"> # 推送标签</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_7、git-reset" tabindex="-1"><a class="header-anchor" href="#_7、git-reset"><span>7、git reset</span></a></h4><ul><li>git reset ：回滚到某次提交。</li><li>git reset --soft：此次提交之后的修改会被退回到暂存区。</li><li>git reset --hard：此次提交之后的修改不做任何保留，git status 查看工作区是没有记录的</li></ul><h4 id="_8、回退到某个commit下并更新远程仓库-回滚代码" tabindex="-1"><a class="header-anchor" href="#_8、回退到某个commit下并更新远程仓库-回滚代码"><span>8、回退到某个commit下并更新远程仓库（回滚代码）</span></a></h4><div class="language-Bash line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="Bash" data-title="Bash"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-Bash;"><code><span class="line"><span class="line"><span style="color:#DCDCAA;">git</span><span style="color:#CE9178;"> reset</span><span style="color:#569CD6;"> --hard</span><span style="color:#CE9178;"> HEAD^</span><span style="color:#6A9955;">         # 回退到上个版本</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">git</span><span style="color:#CE9178;"> reset</span><span style="color:#569CD6;"> --hard</span><span style="color:#CE9178;"> HEAD~3</span><span style="color:#6A9955;">        # 回退到前3次提交之前，以此类推，回退到n次提交之前</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">git</span><span style="color:#CE9178;"> reset</span><span style="color:#569CD6;"> --hard</span><span style="color:#CE9178;"> commit_id</span><span style="color:#6A9955;">     # 退到/进到 指定commit的sha码</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># 强推到远程，更新回退后的远程仓库</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">git</span><span style="color:#CE9178;"> push</span><span style="color:#CE9178;"> origin</span><span style="color:#CE9178;"> HEAD</span><span style="color:#569CD6;"> --force</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_9、修改已经提交并push后的commit注释" tabindex="-1"><a class="header-anchor" href="#_9、修改已经提交并push后的commit注释"><span>9、修改已经提交并push后的commit注释</span></a></h4><p>1.修改最后一次的commit注释</p><div class="language-text line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-text;"><code><span class="line"><span class="line"><span>git rebase -i HEAD~1</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>2.修改pick为edit</p><ul><li>回车后进入一个页面，按i进入编辑模式</li><li>将要修改的那一条的<strong>pick</strong>修改成<strong>edit</strong></li><li>按esc退出编辑模式，输入**:wq**保存并退出</li></ul><p>3.<code>git rebase --continue</code></p><p>4.强制提交到远程仓库</p><div class="language-text line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-text;"><code><span class="line"><span class="line"><span>git push --force</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="_10、cherry-pick" tabindex="-1"><a class="header-anchor" href="#_10、cherry-pick"><span>10、cherry-pick</span></a></h4><p>将已经提交的 commit，复制出新的 commit 应用到分支里</p><ul><li><p>复制单个</p><p><code>git cherry-pick &lt;commitHash&gt;</code></p></li><li><p>复制多个</p></li></ul><div class="language-Bash line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="Bash" data-title="Bash"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-Bash;"><code><span class="line"><span class="line"><span style="color:#DCDCAA;"> git</span><span style="color:#CE9178;"> cherry-pick</span><span style="color:#D4D4D4;"> &lt;</span><span style="color:#CE9178;">Hash</span><span style="color:#D4D4D4;">A&gt; &lt;</span><span style="color:#CE9178;">Hash</span><span style="color:#D4D4D4;">B&gt; </span><span style="color:#6A9955;"># 复制多个提交</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;"> </span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"> # 复制一系列提交</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;"> git</span><span style="color:#CE9178;"> cherry-pick</span><span style="color:#CE9178;"> A..B</span><span style="color:#6A9955;">   # 不包含A，包含B</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;"> git</span><span style="color:#CE9178;"> cherry-pick</span><span style="color:#CE9178;"> A^..B</span><span style="color:#6A9955;">  # 包含A和B</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>代码冲突</p><p>场景一：解决代码冲突，重新提交到暂存区（git add .），继续执行cherry-pick</p><p><code>git cherry-pick --continue</code></p><p>场景二：放弃合并，回到操作前的样子</p><p><code>git cherry-pick --abort</code></p><p>场景三：保留已经 cherry-pick 成功的 commit，并退出 cherry-pick 流程</p><p><code>git cherry-pick --quit</code></p></li></ul><h4 id="_11、git-revert" tabindex="-1"><a class="header-anchor" href="#_11、git-revert"><span>11、git revert</span></a></h4><p>将现有的提交还原，恢复提交的内容，并生成一条还原记录</p><div class="language-Bash line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="Bash" data-title="Bash"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-Bash;"><code><span class="line"><span class="line"><span style="color:#DCDCAA;">git</span><span style="color:#CE9178;"> revert</span><span style="color:#CE9178;"> HEAD</span><span style="color:#6A9955;"> # 撤销前一次 commit</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">git</span><span style="color:#CE9178;"> revert</span><span style="color:#CE9178;"> HEAD^</span><span style="color:#6A9955;"> # 撤销前前一次 commit</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">git</span><span style="color:#CE9178;"> revert</span><span style="color:#D4D4D4;"> &lt;</span><span style="color:#CE9178;">commitHas</span><span style="color:#D4D4D4;">h&gt; </span><span style="color:#6A9955;"># 撤销指定的版本</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>reset和revert的区别：</p><p><code>git reset</code>如果想恢复到之前某个提交的版本，且那个版本之后提交的版本我们都不要了，就可以用这种方法</p><p><code>git revert</code>如果我们想撤销之前的某一版本，但是又想保留该目标版本后面的版本，记录下这整个版本变动流程，就可以用这种方法</p><h4 id="_12、git-merge-和-git-rebase的区别" tabindex="-1"><a class="header-anchor" href="#_12、git-merge-和-git-rebase的区别"><span>12、git merge 和 git rebase的区别</span></a></h4><ul><li>工作原理 <ul><li><code>git merge</code>：将一个分支的更改合并到另一个分支。它会创建一个新的提交，该提交将两个分支的更改合并在一起，并且保留了每个分支上的历史记录。</li><li><code>git rebase</code>：将当前分支的提交“移动”到目标分支的顶部，而不是创建一个新的合并提交。它会将当前分支的更改应用到目标分支的提交上，然后将当前分支移动到目标分支的最新提交之后。</li></ul></li><li>提交历史 <ul><li><code>git merge</code>：保留了每个分支的提交历史，并创建了一个新的合并提交，其中包含了两个分支的更改。</li><li><code>git rebase</code>：将当前分支的提交“重播”在目标分支的提交之上，因此它会产生一个更线性的提交历史，看起来更加清晰。这种方法有助于保持项目历史的整洁性，但可能会导致变基后的提交 ID 发生变化，这可能会影响到已共享的提交。</li></ul></li><li>合并冲突处理 <ul><li><code>git merge</code>：在合并过程中，如果存在冲突，Git 会创建一个合并提交，并提示用户手动解决冲突。解决完冲突后，再提交合并结果。</li><li><code>git rebase</code>：在重新应用每个提交的过程中，如果存在冲突，Git 会在每个冲突点停止，让用户解决冲突。然后用户可以使用 <code>git rebase --continue</code> 命令继续重新应用提交，直到全部提交都被应用完毕。</li></ul></li><li>使用场景 <ul><li><code>git merge</code>：适用于合并相对较稳定的分支，如主分支或者长期存在的开发分支。它将保留每个分支的完整历史记录，并创建一个新的合并提交，记录合并时的状态。</li><li><code>git rebase</code>：通常用于将开发分支与目标分支同步，以便于保持一个清晰、线性的提交历史。这有助于避免分支合并后产生大量的合并提交，使得提交历史更易于理解和管理。</li></ul></li></ul><h4 id="_13、为指定git仓库单独配置用户名和邮箱" tabindex="-1"><a class="header-anchor" href="#_13、为指定git仓库单独配置用户名和邮箱"><span>13、为指定Git仓库单独配置用户名和邮箱</span></a></h4><div class="language-Bash line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="Bash" data-title="Bash"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-Bash;"><code><span class="line"><span class="line"><span style="color:#6A9955;"># 进入指定 Git 仓库</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">cd</span><span style="color:#CE9178;"> HelloWorld</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># 局部配置用户名</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">git</span><span style="color:#CE9178;"> config</span><span style="color:#CE9178;"> user.name</span><span style="color:#CE9178;"> &quot;csmSimona&quot;</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;"># 局部配置邮箱</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">git</span><span style="color:#CE9178;"> config</span><span style="color:#CE9178;"> user.email</span><span style="color:#CE9178;"> &quot;980715844@qq.com&quot;</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,51)]))}const t=n(i,[["render",p],["__file","Git小记.html.vue"]]),o=JSON.parse('{"path":"/%E5%85%B6%E4%BB%96/Git%E5%B0%8F%E8%AE%B0.html","title":"Git小记","lang":"zh-CN","frontmatter":{},"headers":[],"git":{"updatedTime":1724740884000,"contributors":[{"name":"csmSimona","email":"980715844@qq.com","commits":1}]},"filePathRelative":"其他/Git小记.md","readingTime":{"minutes":6.29,"words":1888}}');export{t as comp,o as data};
