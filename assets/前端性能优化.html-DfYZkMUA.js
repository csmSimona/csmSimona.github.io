import{_ as l,c as e,a as n,b as p,d as o,w as c,r as i,o as r,e as t}from"./app-CzYwu8Vn.js";const D="/assets/lighthouse1-DT2-Xkj8.png",d={};function y(u,s){const a=i("RouteLink");return r(),e("div",null,[s[1]||(s[1]=n('<h1 id="前端性能优化" tabindex="-1"><a class="header-anchor" href="#前端性能优化"><span>前端性能优化</span></a></h1><h2 id="常规性能优化" tabindex="-1"><a class="header-anchor" href="#常规性能优化"><span>常规性能优化</span></a></h2><h3 id="一、利用缓存减少远程请求" tabindex="-1"><a class="header-anchor" href="#一、利用缓存减少远程请求"><span>一、利用缓存减少远程请求</span></a></h3><h4 id="_1、浏览器缓存" tabindex="-1"><a class="header-anchor" href="#_1、浏览器缓存"><span><strong>1、浏览器缓存</strong></span></a></h4><p>设置合适的缓存策略，如使用<code>Cache-Control</code>头设置资源缓存时间</p><p>具体可看：<a href="https://csmsimona.github.io/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E6%B1%87%E6%80%BB/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C.html#_11%E3%80%81%E5%BC%BA%E7%BC%93%E5%AD%98%E5%92%8C%E5%8D%8F%E5%95%86%E7%BC%93%E5%AD%98" target="_blank" rel="noopener noreferrer">强缓存和协商缓存</a></p><h4 id="_2、service-worker" tabindex="-1"><a class="header-anchor" href="#_2、service-worker"><span>2、<strong>Service Worker</strong></span></a></h4><p>使用 Service Worker 来缓存静态资源，实现离线访问</p><h3 id="二、减少http请求" tabindex="-1"><a class="header-anchor" href="#二、减少http请求"><span>二、减少HTTP请求</span></a></h3><h4 id="_1、合并文件" tabindex="-1"><a class="header-anchor" href="#_1、合并文件"><span><strong>1、合并文件</strong></span></a></h4><p>将多个CSS或JS文件合并为一个文件，减少HTTP请求次数。</p><h4 id="_2、使用精灵图-sprite" tabindex="-1"><a class="header-anchor" href="#_2、使用精灵图-sprite"><span><strong>2、使用精灵图（Sprite）</strong></span></a></h4><p>将多个小图标合并成一个图片，使用CSS背景定位来显示不同部分。</p><p>精灵图的核心原理在于设置不同的背景偏移量，大致包含两点：</p><ul><li>不同的图标元素都会将 <code>background-url</code> 设置为合并后的精灵图的 uri；</li><li>不同的图标通过设置对应的 <code>background-position</code> 来展示大图中对应的图标部分。</li></ul><h4 id="_3、高频率请求场景使用节流和防抖" tabindex="-1"><a class="header-anchor" href="#_3、高频率请求场景使用节流和防抖"><span>3、高频率请求场景使用节流和防抖</span></a></h4><p><a href="https://csmsimona.github.io/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E6%B1%87%E6%80%BB/JavaScript%E5%B0%8F%E8%AE%B0.html#_7%E3%80%81%E8%8A%82%E6%B5%81%E5%92%8C%E9%98%B2%E6%8A%96" target="_blank" rel="noopener noreferrer">节流（Throttle）和防抖（Debounce）</a></p><p><strong>节流是指在一段时间内，不管事件触发了多少次，只执行一次回调。</strong></p><p><strong>防抖是指在事件被触发后延迟一段时间后再执行回调，如果在这段延迟时间内事件又被触发，则重新计算延迟时间。</strong></p><p><strong>节流是将多次执行变成每隔一段时间执行，防抖是将多次执行变为最后一次执行。</strong></p><p>例：实时搜索框频繁输入内容使用防抖、搜索联想使用节流</p><h3 id="三、加快请求速度" tabindex="-1"><a class="header-anchor" href="#三、加快请求速度"><span>三、加快请求速度</span></a></h3><h4 id="_1、避免多余重定向" tabindex="-1"><a class="header-anchor" href="#_1、避免多余重定向"><span><strong>1、避免多余重定向</strong></span></a></h4><h4 id="_2、dns预解析" tabindex="-1"><a class="header-anchor" href="#_2、dns预解析"><span><strong>2、DNS预解析</strong></span></a></h4><div class="language-html line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="html"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-html;"><code><span class="line"><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">link</span><span style="color:#9CDCFE;"> rel</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;dns-prefetch&quot;</span><span style="color:#9CDCFE;"> href</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;http://yourwebsite.com&quot;</span><span style="color:#808080;">&gt;</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="_3、预先建立连接" tabindex="-1"><a class="header-anchor" href="#_3、预先建立连接"><span><strong>3、预先建立连接</strong></span></a></h4><div class="language-html line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="html"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-html;"><code><span class="line"><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">link</span><span style="color:#9CDCFE;"> rel</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;preconnect&quot;</span><span style="color:#9CDCFE;"> href</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;http://yourwebsite.com&quot;</span><span style="color:#808080;">&gt;</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="_4、静态资源使用cdn" tabindex="-1"><a class="header-anchor" href="#_4、静态资源使用cdn"><span><strong>4、静态资源使用CDN</strong></span></a></h4><p>内容分发网络（CDN）是一组分布在多个不同地理位置的 Web 服务器。</p><p>对于使用 CDN 的资源，DNS 解析会将 CDN 资源的域名解析到 CDN 服务的负载均衡器上，负载均衡器可以通过请求的信息获取用户对应的地理区域，从而<strong>通过负载均衡算法，在背后的诸多服务器中，综合选择一台地理位置近、负载低的机器来提供服务</strong>。例如为北京联通用户解析北京的服务器 IP。这样，用户在之后访问 CDN 资源时都是访问北京服务器，距离近，速度快。</p><h4 id="_5、使用服务端渲染-ssr" tabindex="-1"><a class="header-anchor" href="#_5、使用服务端渲染-ssr"><span><strong>5、使用服务端渲染（SSR）</strong></span></a></h4><p><a href="https://csmsimona.github.io/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E6%B1%87%E6%80%BB/%E5%89%8D%E7%AB%AF%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98.html#%E4%BB%80%E4%B9%88%E6%98%AF%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%B8%B2%E6%9F%93" target="_blank" rel="noopener noreferrer">什么是服务端渲染</a></p><h3 id="四、加速页面解析与处理" tabindex="-1"><a class="header-anchor" href="#四、加速页面解析与处理"><span>四、加速页面解析与处理</span></a></h3><h4 id="_1、注意资源在页面文档中的位置" tabindex="-1"><a class="header-anchor" href="#_1、注意资源在页面文档中的位置"><span><strong>1、注意资源在页面文档中的位置</strong></span></a></h4><p>浏览器在加载HTML内容时，是将HTML内容从上至下依次解析，解析到link或者script标签就会加载href或者src对应链接内容，为了第一时间展示页面给用户，就需要将CSS提前加载，不要受 JS 加载影响。</p><p>一般情况下都是CSS在头部，JS在底部。</p><h4 id="_2、使用-defer-和-async异步加载js" tabindex="-1"><a class="header-anchor" href="#_2、使用-defer-和-async异步加载js"><span><strong>2、使用 defer 和 async异步加载JS</strong></span></a></h4><p>防止 JavaScript 脚本的下载阻塞 DOM 构建</p><ul><li><code>defer</code> 会在 HTML 解析完成后，按照脚本出现的次序再顺序执行</li><li><code>async</code> 则是下载完成就立即开始执行，同时阻塞页面解析，不保证脚本间的执行顺序。</li><li>推荐在一些与主业务无关的 JavaScript 脚本上使用 async。例如统计脚本、监控脚本、广告脚本等。</li></ul><h4 id="_3、懒加载-lazy-load" tabindex="-1"><a class="header-anchor" href="#_3、懒加载-lazy-load"><span><strong>3、懒加载（Lazy Load）</strong></span></a></h4><p><a href="https://csmsimona.github.io/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E6%B1%87%E6%80%BB/HTML%E5%B0%8F%E8%AE%B0.html#_22%E3%80%81%E5%9B%BE%E7%89%87%E6%87%92%E5%8A%A0%E8%BD%BD%E5%92%8C%E9%A2%84%E5%8A%A0%E8%BD%BD" target="_blank" rel="noopener noreferrer">图片懒加载与预加载</a></p><p>通过监听页面滚动，判断图片是否进入视野，从而真正去加载图片</p><p>对于页面上的元素只需要将原本的 <code>src</code> 值设置到 <code>data-src</code> 中即可，而 <code>src</code> 可以设置为一个统一的占位图。</p><p>如果想使用懒加载，还可以借助一些已有的工具库，例如 <a href="https://github.com/aFarkas/lazysizes" target="_blank" rel="noopener noreferrer">aFarkas/lazysizes</a>、<a href="https://github.com/verlok/lazyload" target="_blank" rel="noopener noreferrer">verlok/lazyload</a>、<a href="https://github.com/tuupola/lazyload" target="_blank" rel="noopener noreferrer">tuupola/lazyload</a> 等。</p><h4 id="_4、预加载与预获取" tabindex="-1"><a class="header-anchor" href="#_4、预加载与预获取"><span><strong>4、预加载与预获取</strong></span></a></h4><p>使用<code>&lt;link rel=&quot;preload&quot;&gt;</code>和<code>&lt;link rel=&quot;prefetch&quot;&gt;</code>来提前加载或获取关键资源。</p><h3 id="五、提高渲染性能" tabindex="-1"><a class="header-anchor" href="#五、提高渲染性能"><span>五、提高渲染性能</span></a></h3><h4 id="_1、减少重排重绘" tabindex="-1"><a class="header-anchor" href="#_1、减少重排重绘"><span><strong>1、减少重排重绘</strong></span></a></h4><p><a href="https://csmsimona.github.io/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E6%B1%87%E6%80%BB/HTML%E5%B0%8F%E8%AE%B0.html#_14%E3%80%81%E6%B5%8F%E8%A7%88%E5%99%A8%E6%B8%B2%E6%9F%93%E9%A1%B5%E9%9D%A2%E7%9A%84%E8%BF%87%E7%A8%8B" target="_blank" rel="noopener noreferrer">浏览器渲染过程</a></p><p><a href="https://csmsimona.github.io/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E6%B1%87%E6%80%BB/HTML%E5%B0%8F%E8%AE%B0.html#_19%E3%80%81%E9%87%8D%E7%BB%98-repaint-%E5%92%8C%E9%87%8D%E6%8E%92-reflow" target="_blank" rel="noopener noreferrer">重排和重绘</a></p><h5 id="减少dom操作" tabindex="-1"><a class="header-anchor" href="#减少dom操作"><span>减少DOM操作</span></a></h5><ul><li><strong>避免频繁的DOM查询</strong>：对于需要频繁访问的DOM元素，将其查询结果缓存起来，避免多次调用<code>document.querySelector</code>或<code>getElementById</code>等方法。</li><li><strong>批量操作DOM</strong><ul><li><strong>使用文档片段（DocumentFragment）</strong>：在操作多个DOM节点时，先将它们添加到<code>DocumentFragment</code>中，最后一次性插入DOM。</li><li><strong>离线操作DOM</strong>：将元素从DOM树中移除<code>（display:none等脱离文档流方式）</code>，完成操作后再插入。比如操作表格时可以先将表格移出文档流，更新后再插回去。</li></ul></li><li><strong>使用虚拟DOM</strong>：如果使用React、Vue等框架，这些框架的虚拟DOM机制可以大幅减少实际的DOM操作。虚拟DOM通过对比新旧DOM树的差异来最小化实际的DOM操作次数。</li><li>**合并DOM更新：**在动画或大量DOM更新时，将操作放入<code>requestAnimationFrame</code>回调中，以确保它们在同一帧内进行，避免多次重排</li><li>使用<code>resize</code>事件时，做<strong>防抖</strong>和<strong>节流</strong>处理</li></ul><h5 id="css优化" tabindex="-1"><a class="header-anchor" href="#css优化"><span>CSS优化</span></a></h5><ul><li><strong>查找元素的优化</strong>：应该尽可能的通过ID或者类来查找元素，避免通过属性来查找元素。</li><li><strong>避免使用CSS表达式</strong>：CSS表达式会导致每次重排时都重新计算，增加重排次数。通过<strong>更改 className 批量修改元素样式</strong></li><li><strong>避免使用</strong><code>width: auto</code>：使用明确的宽度值可以减少浏览器计算和重排的频率。</li><li>尽量少使用<code>dispaly:none</code>，可以使用<code>visibility:hidden</code>代替，<code>dispaly:none</code>会造成<strong>重排</strong>，<code>visibility:hidden</code>会造成<strong>重绘</strong>。</li><li>尽量<strong>减少深度嵌套或复杂选择器的使用</strong>，以提高 CSS 渲染效率。</li><li><strong>避免使用表格布局</strong>：因为在表格元素上触发回流会导致其中所有其他元素的回流</li></ul><h5 id="动画相关优化" tabindex="-1"><a class="header-anchor" href="#动画相关优化"><span>动画相关优化</span></a></h5><ul><li>将<strong>复杂的动画元素定位为 fixed 或 absolute</strong> 减少重排</li><li><strong>使用will-change属性</strong>：对于可能频繁改变的元素，可以设置<code>will-change</code>属性来提示浏览器提前进行优化。（但避免过度使用 will-change；在动画中遇到性能问题时考虑使用它）</li><li>在 GPU 上渲染动画：浏览器已经优化了 CSS 动画，使其适用于触发动画属性的重绘（因此也包括回流）。为了提高性能，<strong>将具有动画效果的元素移动到 GPU 上</strong>。**可以触发 GPU 硬件加速的 CSS 属性包括 transform、filter、will-change 和 position:fixed。**动画将在 GPU 上处理，提高性能，特别是在移动设备上（但避免过度使用，因为可能会导致性能问题）。</li></ul><h4 id="_2、使用css动画" tabindex="-1"><a class="header-anchor" href="#_2、使用css动画"><span><strong>2、使用CSS动画</strong></span></a></h4><p>尽量使用CSS动画代替JavaScript动画，因为CSS动画通常在性能上更优。</p><h3 id="六、图片资源优化" tabindex="-1"><a class="header-anchor" href="#六、图片资源优化"><span>六、图片资源优化</span></a></h3><h4 id="_1、使用精灵图-sprite" tabindex="-1"><a class="header-anchor" href="#_1、使用精灵图-sprite"><span><strong>1、使用精灵图（Sprite）</strong></span></a></h4><h4 id="_2、使用合适的图片格式" tabindex="-1"><a class="header-anchor" href="#_2、使用合适的图片格式"><span><strong>2、使用合适的图片格式</strong></span></a></h4><ul><li><p>对于能够显示WebP格式的浏览器尽量使用WebP格式。因为WebP格式具有更好的图象数据压缩算法，能带来更小的图片体积，而且拥有肉眼识别无差异的图象质量，缺点就是兼容性并不好</p></li><li><p>小图使用PNG</p></li><li><p>照片使用JPEG</p></li><li><p>使用 SVG 应对矢量图场景</p><p>在一些需要缩放与高保真的情况，或者用作图标的场景下，使用 SVG 这种矢量图非常不错。有时使用 SVG 格式会比相同的 PNG 或 JPEG 更小。</p></li></ul><h4 id="_3、图片压缩" tabindex="-1"><a class="header-anchor" href="#_3、图片压缩"><span><strong>3、图片压缩</strong></span></a></h4><p>使用压缩工具减少图像文件的大小</p><p><a href="https://tinypng.com/" target="_blank" rel="noopener noreferrer">tinypng（熊猫压缩）</a></p><p><a href="https://imagecompressor.com/zh/" target="_blank" rel="noopener noreferrer">在线图像优化器</a></p><p><a href="https://www.bejson.com/ui/compress_img/" target="_blank" rel="noopener noreferrer">图片压缩工具</a></p><h4 id="_4、使用cdn" tabindex="-1"><a class="header-anchor" href="#_4、使用cdn"><span><strong>4、使用CDN</strong></span></a></h4><h4 id="_5、图标用iconfont代替" tabindex="-1"><a class="header-anchor" href="#_5、图标用iconfont代替"><span><strong>5、图标用Iconfont代替</strong></span></a></h4><h4 id="_6、尽可能利用-css3效果代替图片" tabindex="-1"><a class="header-anchor" href="#_6、尽可能利用-css3效果代替图片"><span><strong>6、尽可能利用 CSS3效果代替图片</strong></span></a></h4><p>有很多图片使用 CSS 效果（渐变、阴影等）就能画出来，这种情况选择 CSS3 效果更好。因为代码大小通常是图片大小的几分之一甚至几十分之一。</p><h3 id="七、字体文件优化" tabindex="-1"><a class="header-anchor" href="#七、字体文件优化"><span>七、字体文件优化</span></a></h3><h4 id="_1、字体裁剪" tabindex="-1"><a class="header-anchor" href="#_1、字体裁剪"><span><strong>1、字体裁剪</strong></span></a></h4><p>一个字体库中可能会包含很多字（尤其是在中文的场景下），但是并非每个字都会使用到，因此可以将不需要使用到的字体剔除</p><p><strong>font-spider（字蛛）减少ttf字体文件大小</strong></p>',75)),p("p",null,[o(a,{to:"/%E4%BD%BF%E7%94%A8font-spider%E5%8E%8B%E7%BC%A9%E5%AD%97%E4%BD%93%E6%96%87%E4%BB%B6/%E4%BD%BF%E7%94%A8font-spider%E5%8E%8B%E7%BC%A9%E5%AD%97%E4%BD%93%E6%96%87%E4%BB%B6.html"},{default:c(()=>s[0]||(s[0]=[t("使用font-spider压缩字体文件",-1)])),_:1,__:[0]})]),s[2]||(s[2]=n(`<h4 id="_2、font-display" tabindex="-1"><a class="header-anchor" href="#_2、font-display"><span><strong>2、font-display</strong></span></a></h4><p>在 <code>@font-face</code> 中设置 <code>font-display: swap</code>，让 FOIT 的默认行为变为 FOUT (Flash of Unstyled Text)，即先会使用默认字体样式展示文本，字体加载完毕后再将文本的字体样式进行替换。</p><div class="language-CSS line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="CSS"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-CSS;"><code><span class="line"><span class="line"><span style="color:#C586C0;">@font-face</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  font-family</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&quot;Orbitron&quot;</span><span style="color:#D4D4D4;">;</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  src</span><span style="color:#D4D4D4;">: </span><span style="color:#DCDCAA;">url</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;./Orbitron-VariableFont_wght.ttf&quot;</span><span style="color:#D4D4D4;">);</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  font-display</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">swap</span><span style="color:#D4D4D4;">;</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="https://caniuse.com/css-font-rendering-controls" target="_blank" rel="noopener noreferrer">font-display兼容性</a></p><h4 id="_3、开启cdn" tabindex="-1"><a class="header-anchor" href="#_3、开启cdn"><span><strong>3、开启CDN</strong></span></a></h4><h4 id="_4、开启gzip压缩" tabindex="-1"><a class="header-anchor" href="#_4、开启gzip压缩"><span><strong>4、开启gzip压缩</strong></span></a></h4><h4 id="_5、fontmin-webpack" tabindex="-1"><a class="header-anchor" href="#_5、fontmin-webpack"><span><strong>5、fontmin-webpack</strong></span></a></h4><p>webpack插件，将图标字体缩小为仅使用的字形</p><h3 id="八、减少第三方依赖" tabindex="-1"><a class="header-anchor" href="#八、减少第三方依赖"><span><strong>八、减少第三方依赖</strong></span></a></h3><ul><li><p><strong>按需引入</strong>：使用 lodash、moment 等库时，可以使用类似<code>lodash-es</code>、<code>date-fns</code>等按需引入的版本，避免加载整个库。</p></li><li><p><strong>轻量替代方案</strong>：寻找更轻量的库或原生API代替大型库，例如使用<code>fetch</code>替代<code>axios</code>。</p></li><li><p><strong>剔除掉无用的语言包</strong>：例如项目中使用了 momentjs，发现打包后有很多没有用到的语言包</p><p>使用 <code>moment-locales-webpack-plugin</code> 插件，剔除掉无用的语言包</p></li></ul><h3 id="九、构建优化-webpack" tabindex="-1"><a class="header-anchor" href="#九、构建优化-webpack"><span>九、构建优化（webpack）</span></a></h3><h4 id="优化效率工具" tabindex="-1"><a class="header-anchor" href="#优化效率工具"><span>优化效率工具</span></a></h4><p>安装以下 webpack 插件，帮助我们分析优化效率：</p><ul><li><a href="https://link.juejin.cn?target=https%3A%2F%2Fwww.npmjs.com%2Fpackage%2Fprogress-bar-webpack-plugin" target="_blank" rel="noopener noreferrer">progress-bar-webpack-plugin</a>：查看编译进度；</li><li><a href="https://link.juejin.cn?target=https%3A%2F%2Fwww.npmjs.com%2Fpackage%2Fspeed-measure-webpack-plugin" target="_blank" rel="noopener noreferrer">speed-measure-webpack-plugin</a>：查看编译速度；</li><li><a href="https://link.juejin.cn?target=https%3A%2F%2Fwww.npmjs.com%2Fpackage%2Fwebpack-bundle-analyzer" target="_blank" rel="noopener noreferrer">webpack-bundle-analyzer</a>：打包体积分析。</li></ul><h4 id="加快构建速度" tabindex="-1"><a class="header-anchor" href="#加快构建速度"><span>加快构建速度</span></a></h4><h5 id="_1-持久化缓存-cache" tabindex="-1"><a class="header-anchor" href="#_1-持久化缓存-cache"><span>1.持久化缓存（cache）</span></a></h5><p>Webpack 5 引入了持久化缓存机制，通过 <code>cache: { type: &#39;filesystem&#39; }</code> 来缓存生成的模块和编译信息，大幅提升二次构建速度、打包速度，当构建突然中断，二次进行构建时，可以直接从缓存中拉取，可提速 <strong>90%</strong> 左右。</p><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#4EC9B0;">module</span><span style="color:#D4D4D4;">.</span><span style="color:#4EC9B0;">exports</span><span style="color:#D4D4D4;"> = {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">    cache:</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">      type:</span><span style="color:#CE9178;"> &#39;filesystem&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#6A9955;">// 使用文件缓存</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    },</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_2-优化babel-loader" tabindex="-1"><a class="header-anchor" href="#_2-优化babel-loader"><span>2.优化babel-loader</span></a></h5><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#D4D4D4;">{</span></span></span>
<span class="line"><span class="line"><span style="color:#C8C8C8;">    test</span><span style="color:#D4D4D4;">:</span><span style="color:#D16969;"> /</span><span style="color:#D7BA7D;">\\.</span><span style="color:#D16969;">js</span><span style="color:#DCDCAA;">$</span><span style="color:#D16969;">/</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#C8C8C8;">  	loader</span><span style="color:#D4D4D4;">: [</span><span style="color:#CE9178;">&#39;babel-loader?cacheDirectory&#39;</span><span style="color:#D4D4D4;">],	</span><span style="color:#6A9955;">// 开启缓存</span></span></span>
<span class="line"><span class="line"><span style="color:#C8C8C8;">    include</span><span style="color:#D4D4D4;">: </span><span style="color:#9CDCFE;">path</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">resolve</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">__dirname</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;src&#39;</span><span style="color:#D4D4D4;">),	</span><span style="color:#6A9955;">// 明确范围</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">    // 排除范围，include和exclude两者选一个即可</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">    // exclude: path.resolve(__dirname, &#39;node_modules&#39;)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_3-ignoreplugin-避免引用无用模块-直接不引入-代码中没有" tabindex="-1"><a class="header-anchor" href="#_3-ignoreplugin-避免引用无用模块-直接不引入-代码中没有"><span>3.IgnorePlugin 避免引用无用模块（直接不引入，代码中没有）</span></a></h5><p>以moment.js为例，忽略语言包</p><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#6A9955;">// 忽略 moment 下的 /locale 目录</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">new</span><span style="color:#9CDCFE;"> webpack</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">IgnorePlugin</span><span style="color:#D4D4D4;">(</span><span style="color:#D16969;">/</span><span style="color:#D7BA7D;">\\.\\/</span><span style="color:#D16969;">locale/</span><span style="color:#D4D4D4;">,</span><span style="color:#D16969;"> /moment/</span><span style="color:#D4D4D4;">),</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_4-noparse避免重复打包-引入-但不打包" tabindex="-1"><a class="header-anchor" href="#_4-noparse避免重复打包-引入-但不打包"><span>4.noParse避免重复打包（引入，但不打包）</span></a></h5><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#4EC9B0;">module</span><span style="color:#D4D4D4;">.</span><span style="color:#4EC9B0;">exports</span><span style="color:#D4D4D4;"> = {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">    module:</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">        // 独完整的 react.min.js 文件就没有采用模块化</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">        // 忽略对 react.min.js 文件的递归解析处理</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">        noParse:</span><span style="color:#D4D4D4;"> [</span><span style="color:#D16969;">/react</span><span style="color:#D7BA7D;">\\.</span><span style="color:#D16969;">min</span><span style="color:#D7BA7D;">\\.</span><span style="color:#D16969;">js</span><span style="color:#DCDCAA;">$</span><span style="color:#D16969;">/</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_5-thread-loader-多线程" tabindex="-1"><a class="header-anchor" href="#_5-thread-loader-多线程"><span>5.thread-loader 多线程</span></a></h5><p>通过 <a href="https://webpack.docschina.org/loaders/thread-loader/#root" target="_blank" rel="noopener noreferrer">thread-loader</a> 将耗时的 loader 放在一个独立的 worker 池中运行，加快 loader 构建速度。</p><div class="language-bash line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-bash;"><code><span class="line"><span class="line"><span style="color:#DCDCAA;">npm</span><span style="color:#CE9178;"> i</span><span style="color:#569CD6;"> -D</span><span style="color:#CE9178;"> thread-loader</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>我们应该仅在非常耗时的 loader 前引入 thread-loader（例如sass-loader）</p><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#4EC9B0;">module</span><span style="color:#D4D4D4;">.</span><span style="color:#4EC9B0;">exports</span><span style="color:#D4D4D4;"> = {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">    rules:</span><span style="color:#D4D4D4;"> [</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">        {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">        test:</span><span style="color:#D16969;"> /</span><span style="color:#D7BA7D;">\\.</span><span style="color:#D16969;">module</span><span style="color:#D7BA7D;">\\.</span><span style="color:#CE9178;">(</span><span style="color:#D16969;">scss</span><span style="color:#DCDCAA;">|</span><span style="color:#D16969;">sass</span><span style="color:#CE9178;">)</span><span style="color:#DCDCAA;">$</span><span style="color:#D16969;">/</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">        include:</span><span style="color:#9CDCFE;"> paths</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">appSrc</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">        use:</span><span style="color:#D4D4D4;"> [</span></span></span>
<span class="line"><span class="line"><span style="color:#CE9178;">          &#39;style-loader&#39;</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">          {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">            loader:</span><span style="color:#CE9178;"> &#39;css-loader&#39;</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">            options:</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">              modules:</span><span style="color:#569CD6;"> true</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">              importLoaders:</span><span style="color:#B5CEA8;"> 2</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">            },</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">          },</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">          {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">            loader:</span><span style="color:#CE9178;"> &#39;postcss-loader&#39;</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">            options:</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">              postcssOptions:</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">                plugins:</span><span style="color:#D4D4D4;"> [</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">                  [</span></span></span>
<span class="line"><span class="line"><span style="color:#CE9178;">                    &#39;postcss-preset-env&#39;</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">                  ],</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">                ],</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">              },</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">            },</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">          },</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">          {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">            loader:</span><span style="color:#CE9178;"> &#39;thread-loader&#39;</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">            options:</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">              workerParallelJobs:</span><span style="color:#B5CEA8;"> 2</span><span style="color:#6A9955;"> // 一个 worker 进程中并行执行工作的数量</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">            }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">          },</span></span></span>
<span class="line"><span class="line"><span style="color:#CE9178;">          &#39;sass-loader&#39;</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">        ].</span><span style="color:#DCDCAA;">filter</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">Boolean</span><span style="color:#D4D4D4;">),</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">      },</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    ]</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_6-自动刷新" tabindex="-1"><a class="header-anchor" href="#_6-自动刷新"><span>6.自动刷新</span></a></h5><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#C8C8C8;">    watch</span><span style="color:#D4D4D4;">: </span><span style="color:#569CD6;">true</span><span style="color:#D4D4D4;">, </span><span style="color:#6A9955;">// 开启监听，默认为 false</span></span></span>
<span class="line"><span class="line"><span style="color:#C8C8C8;">    watchOptions</span><span style="color:#D4D4D4;">: {</span></span></span>
<span class="line"><span class="line"><span style="color:#C8C8C8;">        ignored</span><span style="color:#D4D4D4;">:</span><span style="color:#D16969;"> /node_modules/</span><span style="color:#D4D4D4;">, </span><span style="color:#6A9955;">// 忽略哪些</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">        // 监听到变化发生后会等300ms再去执行动作，防止文件更新太快导致重新编译频率太高</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">        // 默认为 300ms</span></span></span>
<span class="line"><span class="line"><span style="color:#C8C8C8;">        aggregateTimeout</span><span style="color:#D4D4D4;">: </span><span style="color:#B5CEA8;">300</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">        // 判断文件是否发生变化是通过不停的去询问系统指定文件有没有变化实现的</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">        // 默认每隔1000毫秒询问一次</span></span></span>
<span class="line"><span class="line"><span style="color:#C8C8C8;">        poll</span><span style="color:#D4D4D4;">: </span><span style="color:#B5CEA8;">1000</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    }</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h5><p>用于生产环境</p><ul><li>优化babel-loader</li><li>IgnorePlugin</li><li>noParse</li><li>thread-loader</li></ul><p>开发环境</p><ul><li>cache缓存</li><li>自动刷新</li></ul><h4 id="减小打包体积" tabindex="-1"><a class="header-anchor" href="#减小打包体积"><span>减小打包体积</span></a></h4><h5 id="_1-代码压缩" tabindex="-1"><a class="header-anchor" href="#_1-代码压缩"><span>1.代码压缩</span></a></h5><ul><li><p>在 webpack 可以使用如下插件进行压缩：</p><ul><li>JavaScript：<code>TerserWebpackPlugin</code></li><li>CSS ：<code>CssMinimizerPlugin</code></li><li>HTML：<code>HtmlWebpackPlugin</code></li></ul></li><li><p>使用 <code>gzip</code> 压缩</p><ul><li><p>html、js、css资源，使用 gzip 后通常可以将体积压缩70%以上</p></li><li><p>使用 webpack 进行 gzip 压缩的方式，使用 <code>compression-webpack-plugin</code> 插件</p></li></ul></li><li><p>使用<code>Brotli</code>压缩</p></li></ul><p><strong>JS压缩（TerserWebpackPlugin）</strong></p><p>使用 <a href="https://webpack.docschina.org/plugins/terser-webpack-plugin" target="_blank" rel="noopener noreferrer">TerserWebpackPlugin</a> 来压缩 JavaScript。</p><p>webpack5 自带最新的 <code>terser-webpack-plugin</code>，无需手动安装。</p><p><code>terser-webpack-plugin</code> 默认开启了 <code>parallel: true</code> 配置，并发运行的默认数量： <code>os.cpus().length - 1</code> ，本文配置的 parallel 数量为 4，使用多进程并发运行压缩以提高构建速度。</p><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> TerserPlugin</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">require</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;terser-webpack-plugin&#39;</span><span style="color:#D4D4D4;">);</span></span></span>
<span class="line"><span class="line"><span style="color:#4EC9B0;">module</span><span style="color:#D4D4D4;">.</span><span style="color:#4EC9B0;">exports</span><span style="color:#D4D4D4;"> = {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">    optimization:</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">        minimizer:</span><span style="color:#D4D4D4;"> [</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">            new</span><span style="color:#DCDCAA;"> TerserPlugin</span><span style="color:#D4D4D4;">({</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">              parallel:</span><span style="color:#B5CEA8;"> 4</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">              terserOptions:</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">                parse:</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">                  ecma:</span><span style="color:#B5CEA8;"> 8</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">                },</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">                compress:</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">                  ecma:</span><span style="color:#B5CEA8;"> 5</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">                  warnings:</span><span style="color:#569CD6;"> false</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">                  comparisons:</span><span style="color:#569CD6;"> false</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">                  inline:</span><span style="color:#B5CEA8;"> 2</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">                },</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">                mangle:</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">                  safari10:</span><span style="color:#569CD6;"> true</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">                },</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">                output:</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">                  ecma:</span><span style="color:#B5CEA8;"> 5</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">                  comments:</span><span style="color:#569CD6;"> false</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">                  ascii_only:</span><span style="color:#569CD6;"> true</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">                },</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">              },</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">            }),</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">        ]</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>css压缩（CssMinimizerWebpackPlugin）</strong></p><p>使用 <a href="https://webpack.docschina.org/plugins/css-minimizer-webpack-plugin/#root" target="_blank" rel="noopener noreferrer">CssMinimizerWebpackPlugin</a> 压缩 CSS 文件。</p><p><code>CssMinimizerWebpackPlugin</code> 将在 Webpack 构建期间搜索 CSS 文件，优化、压缩 CSS。</p><div class="language-bash line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-bash;"><code><span class="line"><span class="line"><span style="color:#DCDCAA;">npm</span><span style="color:#CE9178;"> install</span><span style="color:#569CD6;"> -D</span><span style="color:#CE9178;"> css-minimizer-webpack-plugin</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> CssMinimizerPlugin</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">require</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;css-minimizer-webpack-plugin&quot;</span><span style="color:#D4D4D4;">);</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#4EC9B0;">module</span><span style="color:#D4D4D4;">.</span><span style="color:#4EC9B0;">exports</span><span style="color:#D4D4D4;"> = {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  optimization:</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">    minimizer:</span><span style="color:#D4D4D4;"> [</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">      new</span><span style="color:#DCDCAA;"> CssMinimizerPlugin</span><span style="color:#D4D4D4;">({</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">          parallel:</span><span style="color:#B5CEA8;"> 4</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">        }),</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    ],</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这将仅在生产环境开启 CSS 优化。</p><p>如果还想在开发环境下启用 CSS 优化，请将 <code>optimization.minimize</code> 设置为 <code>true</code></p><h5 id="_2-使用-url-loader-将图片转-base64" tabindex="-1"><a class="header-anchor" href="#_2-使用-url-loader-将图片转-base64"><span>2.使用 <code>url-loader</code> 将图片转 base64</span></a></h5><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#6A9955;">// 安装</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">npm</span><span style="color:#9CDCFE;"> install</span><span style="color:#9CDCFE;"> url</span><span style="color:#D4D4D4;">-</span><span style="color:#9CDCFE;">loader</span><span style="color:#D4D4D4;"> --</span><span style="color:#9CDCFE;">save</span><span style="color:#D4D4D4;">-</span><span style="color:#9CDCFE;">dev</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    </span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">// 配置</span></span></span>
<span class="line"><span class="line"><span style="color:#4EC9B0;">module</span><span style="color:#D4D4D4;">.</span><span style="color:#4EC9B0;">exports</span><span style="color:#D4D4D4;"> = {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  module:</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">    rules:</span><span style="color:#D4D4D4;"> [{</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">        test:</span><span style="color:#D16969;"> /.</span><span style="color:#CE9178;">(</span><span style="color:#D16969;">png</span><span style="color:#DCDCAA;">|</span><span style="color:#D16969;">jpg</span><span style="color:#DCDCAA;">|</span><span style="color:#D16969;">gif</span><span style="color:#CE9178;">)</span><span style="color:#DCDCAA;">$</span><span style="color:#D16969;">/</span><span style="color:#569CD6;">i</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">        use:</span><span style="color:#D4D4D4;"> [{</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">            loader:</span><span style="color:#CE9178;"> &#39;url-loader&#39;</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">            options:</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">              // 小于 10kb 的图片转化为 base64</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">              limit:</span><span style="color:#B5CEA8;"> 1024</span><span style="color:#D4D4D4;"> * </span><span style="color:#B5CEA8;">10</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">            }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">        }]</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">     }]</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">};</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_3-使用image-webpack-loader插件进行图片压缩" tabindex="-1"><a class="header-anchor" href="#_3-使用image-webpack-loader插件进行图片压缩"><span>3.使用<code>image-webpack-loader</code>插件进行图片压缩</span></a></h5><h5 id="_4-使用tree-shaking-移除未使用的代码" tabindex="-1"><a class="header-anchor" href="#_4-使用tree-shaking-移除未使用的代码"><span>4.使用Tree Shaking 移除未使用的代码</span></a></h5><p>Webpack 中的 Tree Shaking 是一种优化技术，用于消除未使用的代码，从而减小程序包的大小。</p><p>Tree Shaking 的主要目的是通过静态分析来识别和去除那些不会被执行的代码，从而提高应用的加载速度和性能。</p><p>通过 <code>mode: &#39;production&#39;</code> 或配置 <code>optimization.usedExports: true</code>，自动删除未使用的代码，减少打包体积。</p><h5 id="_5-使用-purgecss-webpack-plugin-对-css-tree-shaking" tabindex="-1"><a class="header-anchor" href="#_5-使用-purgecss-webpack-plugin-对-css-tree-shaking"><span>5.使用 <a href="https://github.com/FullHuman/purgecss/tree/main/packages/purgecss-webpack-plugin" target="_blank" rel="noopener noreferrer">purgecss-webpack-plugin</a> 对 CSS Tree Shaking</span></a></h5><div class="language-bash line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-bash;"><code><span class="line"><span class="line"><span style="color:#DCDCAA;">npm</span><span style="color:#CE9178;"> i</span><span style="color:#CE9178;"> purgecss-webpack-plugin</span><span style="color:#569CD6;"> -D</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>因为打包时 CSS 默认放在 JS 文件内，因此要结合 webpack 分离 CSS 文件插件 <code>mini-css-extract-plugin</code> 一起使用，先将 CSS 文件分离，再进行 CSS Tree Shaking。</p><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#6A9955;">// webpack.prod.js</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> glob</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">require</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;glob&#39;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> MiniCssExtractPlugin</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">require</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;mini-css-extract-plugin&#39;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> PurgeCSSPlugin</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">require</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;purgecss-webpack-plugin&#39;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> paths</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">require</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;paths&#39;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#4EC9B0;">module</span><span style="color:#D4D4D4;">.</span><span style="color:#4EC9B0;">exports</span><span style="color:#D4D4D4;"> = {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  plugins:</span><span style="color:#D4D4D4;"> [</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">    // 打包体积分析</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">    new</span><span style="color:#DCDCAA;"> BundleAnalyzerPlugin</span><span style="color:#D4D4D4;">(),</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">    // 提取 CSS</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">    new</span><span style="color:#DCDCAA;"> MiniCssExtractPlugin</span><span style="color:#D4D4D4;">({</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">      filename:</span><span style="color:#CE9178;"> &quot;[name].css&quot;</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    }),</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">    // CSS Tree Shaking</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">    new</span><span style="color:#DCDCAA;"> PurgeCSSPlugin</span><span style="color:#D4D4D4;">({</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">      paths:</span><span style="color:#9CDCFE;"> glob</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">sync</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">\`</span><span style="color:#569CD6;">\${</span><span style="color:#9CDCFE;">paths</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">appSrc</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">/**/*\`</span><span style="color:#D4D4D4;">,  { </span><span style="color:#9CDCFE;">nodir:</span><span style="color:#569CD6;"> true</span><span style="color:#D4D4D4;"> }),</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    }),</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  ]</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_6-抽离公共代码-splitchunks" tabindex="-1"><a class="header-anchor" href="#_6-抽离公共代码-splitchunks"><span>6.抽离公共代码（splitChunks）</span></a></h5><p><strong>将基础库代码单独拆包打包合并</strong></p><p>为了更好利用缓存，我们一般会把不容易变化的部分单独抽取出来。例如一个 React 技术栈的项目，可能会将 React、Redux、React-Router 这类基础库单独打包出一个文件。</p><p>这样做的优点在于，由于基础库被单独打包在一起了，即使业务代码经常变动，也不会导致整个缓存失效。基础框架/库、项目中的 common、util 仍然可以利用缓存，不会每次发布新版都会让用户花费不必要的带宽重新下载基础库。</p><p>可以通过 <code>optimization.splitChunks</code>来分离一些公共库。</p><p>webpack 将根据以下条件自动拆分 chunks：</p><ul><li>新的 chunk 可以被共享，或者模块来自于 <code>node_modules</code> 文件夹；</li><li>新的 chunk 体积大于 20kb（在进行 min+gz 之前的体积）；</li><li>当按需加载 chunks 时，并行请求的最大数量小于或等于 30；</li><li>当加载初始化页面时，并发请求的最大数量小于或等于 30； 通过 splitChunks 把 react 等公共库抽离出来，不重复引入占用体积。</li></ul><div class="language-JavaScript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="JavaScript"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-JavaScript;"><code><span class="line"><span class="line"><span style="color:#6A9955;">// webpack.config.js</span></span></span>
<span class="line"><span class="line"><span style="color:#4EC9B0;">module</span><span style="color:#D4D4D4;">.</span><span style="color:#4EC9B0;">exports</span><span style="color:#D4D4D4;"> = {</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">    //...</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">    optimization:</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">        // 分割代码块</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">        splitChunks:</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">            /**</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">             * initial 入口 chunk，对于异步导入的文件不处理</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">                async 异步 chunk，只对异步导入的文件处理</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">                all 全部 chunk</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">             */</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">            chunks:</span><span style="color:#CE9178;"> &#39;all&#39;</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">            // 缓存分组</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">            cacheGroups:</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">                // 第三方模块</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">                vendor:</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">                    name:</span><span style="color:#CE9178;"> &#39;vendor&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#6A9955;">// chunk 名称</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">                    priority:</span><span style="color:#B5CEA8;"> 1</span><span style="color:#D4D4D4;">, </span><span style="color:#6A9955;">// 权限更高，优先抽离，重要！！！</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">                    test:</span><span style="color:#D16969;"> /node_modules/</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">                    minSize:</span><span style="color:#B5CEA8;"> 0</span><span style="color:#D4D4D4;">,  </span><span style="color:#6A9955;">// 大小限制</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">                    minChunks:</span><span style="color:#B5CEA8;"> 1</span><span style="color:#6A9955;">  // 最少复用过几次</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">                },</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">                // 公共的模块</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">                common:</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">                    name:</span><span style="color:#CE9178;"> &#39;common&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#6A9955;">// chunk 名称</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">                    priority:</span><span style="color:#B5CEA8;"> 0</span><span style="color:#D4D4D4;">, </span><span style="color:#6A9955;">// 优先级</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">                    minSize:</span><span style="color:#B5CEA8;"> 0</span><span style="color:#D4D4D4;">,  </span><span style="color:#6A9955;">// 公共模块的大小限制</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">                    minChunks:</span><span style="color:#B5CEA8;"> 2</span><span style="color:#6A9955;">  // 公共模块最少复用过几次</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">                }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">            }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">        }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_7-抽离css文件-minicssextractplugin" tabindex="-1"><a class="header-anchor" href="#_7-抽离css文件-minicssextractplugin"><span>7.抽离CSS文件（MiniCssExtractPlugin）</span></a></h5><p><a href="https://webpack.docschina.org/plugins/mini-css-extract-plugin/" target="_blank" rel="noopener noreferrer">MiniCssExtractPlugin</a> 插件将 CSS 提取到单独的文件中，为每个包含 CSS 的 JS 文件创建一个 CSS 文件，并且支持 CSS 和 SourceMaps 的按需加载。</p><div class="language-bash line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-bash;"><code><span class="line"><span class="line"><span style="color:#DCDCAA;">npm</span><span style="color:#CE9178;"> install</span><span style="color:#569CD6;"> -D</span><span style="color:#CE9178;"> mini-css-extract-plugin</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>配置：</p><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> MiniCssExtractPlugin</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">require</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;mini-css-extract-plugin&quot;</span><span style="color:#D4D4D4;">);</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#4EC9B0;">module</span><span style="color:#D4D4D4;">.</span><span style="color:#4EC9B0;">exports</span><span style="color:#D4D4D4;"> = {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  plugins:</span><span style="color:#D4D4D4;"> [</span><span style="color:#569CD6;">new</span><span style="color:#DCDCAA;"> MiniCssExtractPlugin</span><span style="color:#D4D4D4;">()],</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  module:</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">    rules:</span><span style="color:#D4D4D4;"> [</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">        {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">        test:</span><span style="color:#D16969;"> /</span><span style="color:#D7BA7D;">\\.</span><span style="color:#D16969;">module</span><span style="color:#D7BA7D;">\\.</span><span style="color:#CE9178;">(</span><span style="color:#D16969;">scss</span><span style="color:#DCDCAA;">|</span><span style="color:#D16969;">sass</span><span style="color:#CE9178;">)</span><span style="color:#DCDCAA;">$</span><span style="color:#D16969;">/</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">        include:</span><span style="color:#9CDCFE;"> paths</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">appSrc</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">        use:</span><span style="color:#D4D4D4;"> [</span></span></span>
<span class="line"><span class="line"><span style="color:#CE9178;">          &#39;style-loader&#39;</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">          isEnvProduction</span><span style="color:#D4D4D4;"> &amp;&amp; </span><span style="color:#9CDCFE;">MiniCssExtractPlugin</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">loader</span><span style="color:#D4D4D4;">, </span><span style="color:#6A9955;">// 仅生产环境</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">          {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">            loader:</span><span style="color:#CE9178;"> &#39;css-loader&#39;</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">            options:</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">              modules:</span><span style="color:#569CD6;"> true</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">              importLoaders:</span><span style="color:#B5CEA8;"> 2</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">            },</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">          },</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">          {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">            loader:</span><span style="color:#CE9178;"> &#39;postcss-loader&#39;</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">            options:</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">              postcssOptions:</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">                plugins:</span><span style="color:#D4D4D4;"> [</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">                  [</span></span></span>
<span class="line"><span class="line"><span style="color:#CE9178;">                    &#39;postcss-preset-env&#39;</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">                  ],</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">                ],</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">              },</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">            },</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">          },</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">          {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">            loader:</span><span style="color:#CE9178;"> &#39;thread-loader&#39;</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">            options:</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">              workerParallelJobs:</span><span style="color:#B5CEA8;"> 2</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">            }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">          },</span></span></span>
<span class="line"><span class="line"><span style="color:#CE9178;">          &#39;sass-loader&#39;</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">        ].</span><span style="color:#DCDCAA;">filter</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">Boolean</span><span style="color:#D4D4D4;">),</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">      },</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    ]</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  },</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">};</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>注意：MiniCssExtractPlugin.loader 要放在 style-loader 后面。</p></blockquote><h5 id="_8-最小化-entry-chunk" tabindex="-1"><a class="header-anchor" href="#_8-最小化-entry-chunk"><span>8.最小化 entry chunk</span></a></h5><p>通过配置 <code>optimization.runtimeChunk = true</code>，为运行时代码创建一个额外的 chunk，减少 entry chunk 体积，提高性能。</p><p><code>webpack.prod.js</code> 配置方式如下：</p><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#4EC9B0;">module</span><span style="color:#D4D4D4;">.</span><span style="color:#4EC9B0;">exports</span><span style="color:#D4D4D4;"> = {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">    optimization:</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">        runtimeChunk:</span><span style="color:#569CD6;"> true</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">      },</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    };</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_9-给打包出来的文件名添加哈希-实现浏览器缓存文件" tabindex="-1"><a class="header-anchor" href="#_9-给打包出来的文件名添加哈希-实现浏览器缓存文件"><span>9.给打包出来的文件名添加哈希，实现浏览器缓存文件</span></a></h5><p>通过 Webpack 的 <code>[contenthash]</code> 配置为输出文件名生成唯一的哈希值，确保文件内容变化时，浏览器能够重新获取新文件。</p><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#C8C8C8;">output</span><span style="color:#D4D4D4;">: {</span></span></span>
<span class="line"><span class="line"><span style="color:#C8C8C8;">  filename</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&#39;[name].[contenthash].js&#39;</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#C8C8C8;">  path</span><span style="color:#D4D4D4;">: </span><span style="color:#9CDCFE;">path</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">resolve</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">__dirname</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;dist&#39;</span><span style="color:#D4D4D4;">),</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="" tabindex="-1"><a class="header-anchor" href="#"><span></span></a></h5><h5 id="_10-使用cdn加速" tabindex="-1"><a class="header-anchor" href="#_10-使用cdn加速"><span>10.使用CDN加速</span></a></h5><p>1、publicPath配置cdn网址 <code>publicPath: &#39;http://cdn.abc.com&#39; // 修改所有静态文件 url 的前缀（如 cdn 域名）</code></p><p>2、将打包资源CSS、JS等上传到cdn</p><h3 id="十、监控与分析" tabindex="-1"><a class="header-anchor" href="#十、监控与分析"><span>十、监控与分析</span></a></h3><h4 id="_1、webpack-bundle-analyzer" tabindex="-1"><a class="header-anchor" href="#_1、webpack-bundle-analyzer"><span><strong>1、</strong><a href="https://github.com/webpack-contrib/webpack-bundle-analyzer" target="_blank" rel="noopener noreferrer"><strong>webpack-bundle-analyzer</strong></a></span></a></h4><p>可以通过 <a href="https://github.com/webpack-contrib/webpack-bundle-analyzer" target="_blank" rel="noopener noreferrer">webpack-bundle-analyzer</a> 这个工具来查看打包代码里面各个模块的占用大小</p><div class="language-Bash line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="Bash"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-Bash;"><code><span class="line"><span class="line"><span style="color:#DCDCAA;">npm</span><span style="color:#CE9178;"> install</span><span style="color:#CE9178;"> webpack-bundle-analyzer</span><span style="color:#569CD6;"> -D</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">//</span><span style="color:#CE9178;"> vue.config.js</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">module.exports</span><span style="color:#CE9178;"> =</span><span style="color:#CE9178;"> {</span><span style="color:#D4D4D4;">     </span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">   chainWebpack:</span><span style="color:#D4D4D4;"> (config) =&gt; {</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">        //</span><span style="color:#CE9178;"> 分析打包大小</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">        if</span><span style="color:#D4D4D4;"> (</span><span style="color:#DCDCAA;">process.env.npm_config_report</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">          config.plugin(</span><span style="color:#DCDCAA;">&#39;webpack-bundle-analyzer&#39;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">            .use(require(</span><span style="color:#DCDCAA;">&#39;webpack-bundle-analyzer&#39;</span><span style="color:#D4D4D4;">).BundleAnalyzerPlugin)</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">            .end</span><span style="color:#D4D4D4;">();</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">        }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">   }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">//</span><span style="color:#CE9178;"> package.json</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">{</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">  &quot;name&quot;</span><span style="color:#DCDCAA;">:</span><span style="color:#CE9178;"> &quot;name&quot;,</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">  &quot;version&quot;</span><span style="color:#DCDCAA;">:</span><span style="color:#CE9178;"> &quot;0.0.1&quot;,</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">  &quot;scripts&quot;</span><span style="color:#DCDCAA;">:</span><span style="color:#CE9178;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">    &quot;report&quot;</span><span style="color:#DCDCAA;">:</span><span style="color:#CE9178;"> &quot;set npm_config_report=true &amp;&amp; vue-cli-service build&quot;,</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  },</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">  ...</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;"> }</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">npm</span><span style="color:#CE9178;"> run</span><span style="color:#CE9178;"> report</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2、使用性能检测工具" tabindex="-1"><a class="header-anchor" href="#_2、使用性能检测工具"><span><strong>2、使用性能检测工具</strong></span></a></h4><p>使用<a href="#%E6%80%A7%E8%83%BD%E6%A3%80%E6%B5%8B%E5%B7%A5%E5%85%B7lighthouse">Lighthouse</a>、PageSpeed Insights等工具分析和优化页面性能。</p><h4 id="_3、检查加载性能" tabindex="-1"><a class="header-anchor" href="#_3、检查加载性能"><span>3、检查加载性能⭐</span></a></h4><p>一个网站加载性能如何主要看白屏时间和首屏时间。</p><ul><li>白屏时间：指从输入网址，到浏览器开始渲染第一个像素点之间的时间。优化目标：&lt; 0.8秒</li><li>首屏时间（First Screen Load Time）：用户无需滚动就能看到的页面区域完全渲染完成的时间。优化目标：≤2.5秒</li><li>FCP（First Contentful Paint）首次内容绘制：用户开始输入<code>url</code>（开始导航） 到页面上任意一部分内容呈现在屏幕上的时间 <ul><li>浏览器渲染第一段DOM。图片、非白色的<code>&lt; canvas &gt;</code>元素和 <code>svg</code> 被认为是 DOM 内容，<code>iframe</code>中的任何内容不包含在内</li><li>表示用户首次看到页面有内容出现（即使只是部分内容）</li><li>优化目标：≤1.8秒</li></ul></li></ul><h5 id="计算白屏时间" tabindex="-1"><a class="header-anchor" href="#计算白屏时间"><span>计算白屏时间</span></a></h5><p>没有浏览器原生API支持，通常使用以下方法：</p><ul><li><p><strong>Performance API</strong>：</p><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> timing</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">window</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">performance</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">timing</span><span style="color:#D4D4D4;">;</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> whiteScreenTime</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">timing</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">responseStart</span><span style="color:#D4D4D4;"> - </span><span style="color:#9CDCFE;">timing</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">navigationStart</span><span style="color:#D4D4D4;">;</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>DOM变化监听</strong>：</p><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#6A9955;">// 在&lt;head&gt;底部记录起始时间</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">window</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">pageStartTime</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">Date</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">now</span><span style="color:#D4D4D4;">();</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">// 使用MutationObserver监听首次DOM变化</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> observer</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">new</span><span style="color:#DCDCAA;"> MutationObserver</span><span style="color:#D4D4D4;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  const</span><span style="color:#4FC1FF;"> endTime</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">Date</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">now</span><span style="color:#D4D4D4;">();</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  const</span><span style="color:#4FC1FF;"> whiteScreenDuration</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">endTime</span><span style="color:#D4D4D4;"> - </span><span style="color:#9CDCFE;">window</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">pageStartTime</span><span style="color:#D4D4D4;">;</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">  // 记录白屏时间</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  observer</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">disconnect</span><span style="color:#D4D4D4;">();</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">});</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">observer</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">observe</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">document</span><span style="color:#D4D4D4;">, {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  childList:</span><span style="color:#569CD6;"> true</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  subtree:</span><span style="color:#569CD6;"> true</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">});</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h5 id="测量fcp" tabindex="-1"><a class="header-anchor" href="#测量fcp"><span>测量FCP</span></a></h5><p>浏览器提供了PerformanceObserver API进行测量：</p><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#6A9955;">// 方法一：使用PerformanceObserver监听FCP事件</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> observer</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">new</span><span style="color:#DCDCAA;"> PerformanceObserver</span><span style="color:#D4D4D4;">((</span><span style="color:#9CDCFE;">list</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  for</span><span style="color:#D4D4D4;"> (</span><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> entry</span><span style="color:#569CD6;"> of</span><span style="color:#9CDCFE;"> list</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getEntries</span><span style="color:#D4D4D4;">()) {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">    if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">entry</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;"> === </span><span style="color:#CE9178;">&#39;first-contentful-paint&#39;</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">      const</span><span style="color:#4FC1FF;"> fcpTime</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">entry</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">startTime</span><span style="color:#D4D4D4;">;</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">      console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;FCP时间：&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">fcpTime</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;ms&#39;</span><span style="color:#D4D4D4;">);</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">      // 发送到分析服务器</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">});</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">// 开始观察paint类型的性能条目</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">observer</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">observe</span><span style="color:#D4D4D4;">({ </span><span style="color:#9CDCFE;">entryTypes:</span><span style="color:#D4D4D4;"> [</span><span style="color:#CE9178;">&#39;paint&#39;</span><span style="color:#D4D4D4;">] });</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">// 方法二：直接获取性能时间点</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> fcpEntry</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">performance</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getEntriesByName</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;first-contentful-paint&#39;</span><span style="color:#D4D4D4;">)[</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">];</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> fcp</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">fcpEntry</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">startTime</span><span style="color:#D4D4D4;">;</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="计算首屏时间" tabindex="-1"><a class="header-anchor" href="#计算首屏时间"><span>计算首屏时间</span></a></h5><p>没有标准化方法，常用技术包括：</p><ul><li><p><strong>关键元素标记法</strong></p><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#6A9955;">// 定义首屏关键元素</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> firstScreenElements</span><span style="color:#D4D4D4;"> = [</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  document</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getElementById</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;header&#39;</span><span style="color:#D4D4D4;">),</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  document</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">querySelector</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;.hero&#39;</span><span style="color:#D4D4D4;">),</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">  // 其他首屏元素...</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">];</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#4EC9B0;">Promise</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">all</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">firstScreenElements</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">map</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">el</span><span style="color:#569CD6;"> =&gt;</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#569CD6;"> new</span><span style="color:#4EC9B0;"> Promise</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">resolve</span><span style="color:#569CD6;"> =&gt;</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">    if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">el</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">complete</span><span style="color:#D4D4D4;"> || </span><span style="color:#9CDCFE;">el</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">readyState</span><span style="color:#D4D4D4;"> === </span><span style="color:#CE9178;">&#39;complete&#39;</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">      resolve</span><span style="color:#D4D4D4;">();</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    } </span><span style="color:#C586C0;">else</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">      el</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">addEventListener</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;load&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">resolve</span><span style="color:#D4D4D4;">);</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">      el</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">addEventListener</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;error&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">resolve</span><span style="color:#D4D4D4;">);</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  });</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">})).</span><span style="color:#DCDCAA;">then</span><span style="color:#D4D4D4;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  const</span><span style="color:#4FC1FF;"> firstScreenTime</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">Date</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">now</span><span style="color:#D4D4D4;">() - </span><span style="color:#9CDCFE;">performance</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">timing</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">navigationStart</span><span style="color:#D4D4D4;">;</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">  // 记录首屏时间</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">});</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>粗略的计算首屏时间</p><div class="language-JavaScript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="JavaScript"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-JavaScript;"><code><span class="line"><span class="line"><span style="color:#6A9955;">// 方法一</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">window</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">addEventListener</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;load&#39;</span><span style="color:#D4D4D4;">, () </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">    let</span><span style="color:#9CDCFE;"> timing</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">performance</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">timing</span><span style="color:#D4D4D4;">;</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">    // domContentLoadedEventEnd：DOMContentLoaded事件结束的时间点</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">    // loadEventEnd：页面加载完成的时间点，可以用来计算完整页面加载时间</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">    let</span><span style="color:#9CDCFE;"> firstPaint</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">timing</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">domContentLoadedEventEnd</span><span style="color:#D4D4D4;">- </span><span style="color:#9CDCFE;">timing</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">navigationStart</span><span style="color:#D4D4D4;">;</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">    console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;FCP:&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">firstPaint</span><span style="color:#D4D4D4;">);</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">});</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">// 方法二</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">// 获取当前时间作为开始时间</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> startTime</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">performance</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">now</span><span style="color:#D4D4D4;">();</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">// 监听load事件，当页面加载完成后触发</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">window</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">addEventListener</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;load&#39;</span><span style="color:#D4D4D4;">, () </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">    // 计算页面加载完成的时间</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">    const</span><span style="color:#4FC1FF;"> endTime</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">performance</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">now</span><span style="color:#D4D4D4;">();</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">    console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">\`首屏加载时间: </span><span style="color:#569CD6;">\${</span><span style="color:#9CDCFE;">endTime</span><span style="color:#D4D4D4;"> - </span><span style="color:#9CDCFE;">startTime</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">ms\`</span><span style="color:#D4D4D4;">);</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">});</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>通过计算首屏区域内的所有图片加载时间，然后取其最大值</p><div class="language-html line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="html"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-html;"><code><span class="line"><span class="line"><span style="color:#808080;">&lt;!</span><span style="color:#569CD6;">DOCTYPE</span><span style="color:#9CDCFE;"> html</span><span style="color:#808080;">&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">html</span><span style="color:#9CDCFE;"> lang</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;en&quot;</span><span style="color:#808080;">&gt;</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">head</span><span style="color:#808080;">&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#808080;">  &lt;</span><span style="color:#569CD6;">meta</span><span style="color:#9CDCFE;"> charset</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;UTF-8&quot;</span><span style="color:#808080;">&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#808080;">  &lt;</span><span style="color:#569CD6;">meta</span><span style="color:#9CDCFE;"> name</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;viewport&quot;</span><span style="color:#9CDCFE;"> content</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;width=device-width, initial-scale=1.0&quot;</span><span style="color:#808080;">&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#808080;">  &lt;</span><span style="color:#569CD6;">title</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">首屏时间计算-统计首屏最慢图片加载时间</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">title</span><span style="color:#808080;">&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#808080;">  &lt;</span><span style="color:#569CD6;">script</span><span style="color:#808080;">&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">    window</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">pageStartTime</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">Date</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">now</span><span style="color:#D4D4D4;">()</span></span></span>
<span class="line"><span class="line"><span style="color:#808080;">  &lt;/</span><span style="color:#569CD6;">script</span><span style="color:#808080;">&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">head</span><span style="color:#808080;">&gt;</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">body</span><span style="color:#808080;">&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#808080;">  &lt;</span><span style="color:#569CD6;">img</span><span style="color:#9CDCFE;"> src</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;https://gitee.com/HanpengChen/blog-images/raw/master/blogImages/2021/spring/20210107155629.png&quot;</span><span style="color:#9CDCFE;"> alt</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;img&quot;</span><span style="color:#9CDCFE;"> onload</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;</span><span style="color:#DCDCAA;">load</span><span style="color:#CE9178;">()&quot;</span><span style="color:#808080;">&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#808080;">  &lt;</span><span style="color:#569CD6;">img</span><span style="color:#9CDCFE;"> src</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;https://gitee.com/HanpengChen/blog-images/raw/master/blogImages/2020/autumn/article-gzh-qrcode.png&quot;</span><span style="color:#9CDCFE;"> alt</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;img&quot;</span><span style="color:#9CDCFE;"> onload</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;</span><span style="color:#DCDCAA;">load</span><span style="color:#CE9178;">()&quot;</span><span style="color:#808080;">&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#808080;">  &lt;</span><span style="color:#569CD6;">script</span><span style="color:#808080;">&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">    function</span><span style="color:#DCDCAA;"> load</span><span style="color:#D4D4D4;">() {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">      window</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">firstScreen</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">Date</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">now</span><span style="color:#D4D4D4;">()</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    }</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">    window</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">onload</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;"> () {</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">      // 首屏时间</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">      console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">window</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">firstScreen</span><span style="color:#D4D4D4;"> - </span><span style="color:#9CDCFE;">window</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">pageStartTime</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    }</span></span></span>
<span class="line"><span class="line"><span style="color:#808080;">  &lt;/</span><span style="color:#569CD6;">script</span><span style="color:#808080;">&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">body</span><span style="color:#808080;">&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">html</span><span style="color:#808080;">&gt;</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>截图比较法</strong>：</p><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#6A9955;">// 使用Puppeteer等工具</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> browser</span><span style="color:#D4D4D4;"> = </span><span style="color:#C586C0;">await</span><span style="color:#9CDCFE;"> puppeteer</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">launch</span><span style="color:#D4D4D4;">();</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> page</span><span style="color:#D4D4D4;"> = </span><span style="color:#C586C0;">await</span><span style="color:#9CDCFE;"> browser</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">newPage</span><span style="color:#D4D4D4;">();</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">// 设置视口大小</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">await</span><span style="color:#9CDCFE;"> page</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">setViewport</span><span style="color:#D4D4D4;">({ </span><span style="color:#9CDCFE;">width:</span><span style="color:#B5CEA8;"> 1200</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">height:</span><span style="color:#B5CEA8;"> 800</span><span style="color:#D4D4D4;"> });</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">// 开始导航并记录时间</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> startTime</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">Date</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">now</span><span style="color:#D4D4D4;">();</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">await</span><span style="color:#9CDCFE;"> page</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">goto</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;https://example.com&#39;</span><span style="color:#D4D4D4;">, { </span><span style="color:#9CDCFE;">waitUntil:</span><span style="color:#CE9178;"> &#39;networkidle0&#39;</span><span style="color:#D4D4D4;"> });</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">// 截取首屏</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> screenshot</span><span style="color:#D4D4D4;"> = </span><span style="color:#C586C0;">await</span><span style="color:#9CDCFE;"> page</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">screenshot</span><span style="color:#D4D4D4;">({ </span><span style="color:#9CDCFE;">clip:</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">x:</span><span style="color:#B5CEA8;"> 0</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">y:</span><span style="color:#B5CEA8;"> 0</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">width:</span><span style="color:#B5CEA8;"> 1200</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">height:</span><span style="color:#B5CEA8;"> 800</span><span style="color:#D4D4D4;"> } });</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">// 与预存的完整首屏截图比较</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> similarity</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">compareScreenshots</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">screenshot</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">referenceImage</span><span style="color:#D4D4D4;">);</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">similarity</span><span style="color:#D4D4D4;"> &gt; </span><span style="color:#B5CEA8;">0.95</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  const</span><span style="color:#4FC1FF;"> firstScreenTime</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">Date</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">now</span><span style="color:#D4D4D4;">() - </span><span style="color:#9CDCFE;">startTime</span><span style="color:#D4D4D4;">;</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">  // 记录首屏时间</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h4 id="_4、检查运行性能" tabindex="-1"><a class="header-anchor" href="#_4、检查运行性能"><span><strong>4、检查运行性能</strong></span></a></h4><p>配合 chrome 的开发者工具，我们可以查看网站在运行时的性能。</p><p>打开网站，按 F12 选择 performance，点击左上角的灰色圆点，变成红色就代表开始记录了。这时可以模仿用户使用网站，在使用完毕后，点击 stop，然后你就能看到网站运行期间的性能报告。如果有红色的块，代表有掉帧的情况；如果是绿色，则代表 FPS 很好。</p><h2 id="vue-项目性能优化" tabindex="-1"><a class="header-anchor" href="#vue-项目性能优化"><span>Vue 项目性能优化</span></a></h2><h3 id="_1、模板和指令优化" tabindex="-1"><a class="header-anchor" href="#_1、模板和指令优化"><span><strong>1、模板和指令优化</strong></span></a></h3><ul><li><p>合理使用<code>v-show</code>和<code>v-if</code></p></li><li><p>使用 <code>v-for</code> 时，尽量提供唯一的 <code>key</code> ，避免重复渲染。</p></li><li><p>使用 <code>v-once</code> 指令，只渲染一次，避免不必要的计算。</p></li><li><p>使用 <code>v-memo</code> 指令，对使用<code>v-for</code>生成的列表进行渲染优化。<code>(vue3.2新增)</code></p><p>用于缓存计算结果。只有当指定的依赖发生变化时，才会重新计算和渲染。</p></li></ul><h3 id="_2、组件优化" tabindex="-1"><a class="header-anchor" href="#_2、组件优化"><span><strong>2、组件优化</strong></span></a></h3><ul><li><p>合理使用 <code>keep-alive</code> 组件，缓存组件实例，避免重复渲染。</p></li><li><p>使用异步组件加载，减少首屏加载时间。</p><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> AsyncComponent</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">defineAsyncComponent</span><span style="color:#D4D4D4;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#569CD6;"> import</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;./MyComponent.vue&#39;</span><span style="color:#D4D4D4;">))</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>配合 Vue Router 使用路由懒加载，实现路由页面按需加载。</p></li><li><p>合理划分组件，提升复用性和渲染性能。</p></li></ul><h3 id="_3、响应式优化" tabindex="-1"><a class="header-anchor" href="#_3、响应式优化"><span><strong>3、响应式优化</strong></span></a></h3><ul><li><p>使用 <code>Object.freeze</code> 冻结对象，避免不必要的响应式。</p></li><li><p>使用 stop 停止不必要的watchEffect副作用执行，以减少性能消耗。</p></li><li><p>watch的优化</p><ul><li><p>避免滥用深度监听，降低性能开销。</p></li><li><p>对于频繁触发的响应式数据变化，可以通过防抖和节流优化监听逻辑。</p><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">debounce</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &#39;lodash&#39;</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">watch</span><span style="color:#D4D4D4;">(</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  () </span><span style="color:#569CD6;">=&gt;</span><span style="color:#9CDCFE;"> searchQuery</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">  debounce</span><span style="color:#D4D4D4;">((</span><span style="color:#9CDCFE;">newQuery</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">    fetchSearchResults</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">newQuery</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  }, </span><span style="color:#B5CEA8;">300</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">)</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>可以通过返回函数只监听具体的依赖，减少不必要的触发。</p><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#DCDCAA;">watch</span><span style="color:#D4D4D4;">([() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#9CDCFE;"> user</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;">, () </span><span style="color:#569CD6;">=&gt;</span><span style="color:#9CDCFE;"> user</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">age</span><span style="color:#D4D4D4;">], ([</span><span style="color:#9CDCFE;">newName</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">newAge</span><span style="color:#D4D4D4;">]) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">  //...</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">})</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>当监听器在某些条件下不再需要时，可以通过返回的 stop 方法手动停止监听，以节省资源</p><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> stop</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">watch</span><span style="color:#D4D4D4;">(</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  () </span><span style="color:#569CD6;">=&gt;</span><span style="color:#9CDCFE;"> data</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">value</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  (</span><span style="color:#9CDCFE;">newValue</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">    if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">newValue</span><span style="color:#D4D4D4;"> === </span><span style="color:#CE9178;">&#39;done&#39;</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">      stop</span><span style="color:#D4D4D4;">() </span><span style="color:#6A9955;">// 停止监听</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">)</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>当多个监听器的回调逻辑类似时，可以合并监听</p><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#DCDCAA;">watch</span><span style="color:#D4D4D4;">([() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#9CDCFE;"> user</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;">, () </span><span style="color:#569CD6;">=&gt;</span><span style="color:#9CDCFE;"> user</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">age</span><span style="color:#D4D4D4;">], ([</span><span style="color:#9CDCFE;">newName</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">newAge</span><span style="color:#D4D4D4;">]) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">  //...</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">})</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li></ul><h3 id="_4、其他" tabindex="-1"><a class="header-anchor" href="#_4、其他"><span><strong>4、其他</strong></span></a></h3><ul><li><p>自定义事件、dom事件、定时器等及时销毁</p></li><li><p>webpack层面的优化</p></li><li><p>前端通用的性能优化，如图片懒加载</p></li></ul><h2 id="react项目性能优化" tabindex="-1"><a class="header-anchor" href="#react项目性能优化"><span>React项目性能优化</span></a></h2><ul><li><p>渲染列表时加key</p></li><li><p>自定义事件、DOM事件及时销毁</p></li><li><p>合理使用异步组件</p></li><li><p>减少函数 bind this 的次数</p></li><li><p>合理使用SCU、PureComponent 和memo</p></li><li><p>合理使用Immutable.js</p></li><li><p>webpack层面的优化</p></li><li><p>前端通用的性能优化，如图片懒加载</p></li><li><p>使用SSR</p></li><li><p>setState异步函数：能将多个数据的改变结合成一次来做，降低虚拟DOM的比对频率。</p></li><li><p>ajax请求放在<code>componentDidMount</code>里</p></li><li><p><code>useMemo</code>: 用于缓存昂贵的计算结果，避免在每次渲染时重复计算。</p><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> ExpensiveComponent</span><span style="color:#D4D4D4;">({ </span><span style="color:#9CDCFE;">items</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">filter</span><span style="color:#D4D4D4;"> }) {</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  const</span><span style="color:#4FC1FF;"> filteredItems</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">useMemo</span><span style="color:#D4D4D4;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">    return</span><span style="color:#9CDCFE;"> items</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">filter</span><span style="color:#D4D4D4;">((</span><span style="color:#9CDCFE;">item</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#9CDCFE;"> item</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">includes</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">filter</span><span style="color:#D4D4D4;">))</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  }, [</span><span style="color:#9CDCFE;">items</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">filter</span><span style="color:#D4D4D4;">]) </span><span style="color:#6A9955;">// 仅在 items 或 filter 变化时重新计算</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#D4D4D4;"> (</span></span></span>
<span class="line"><span class="line"><span style="color:#808080;">    &lt;</span><span style="color:#569CD6;">ul</span><span style="color:#808080;">&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">      {</span><span style="color:#9CDCFE;">filteredItems</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">map</span><span style="color:#D4D4D4;">((</span><span style="color:#9CDCFE;">item</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> (</span></span></span>
<span class="line"><span class="line"><span style="color:#808080;">        &lt;</span><span style="color:#569CD6;">li</span><span style="color:#9CDCFE;"> key</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">{</span><span style="color:#9CDCFE;">item</span><span style="color:#569CD6;">}</span><span style="color:#808080;">&gt;</span><span style="color:#569CD6;">{</span><span style="color:#9CDCFE;">item</span><span style="color:#569CD6;">}</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">li</span><span style="color:#808080;">&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">      ))</span><span style="color:#569CD6;">}</span></span></span>
<span class="line"><span class="line"><span style="color:#808080;">    &lt;/</span><span style="color:#569CD6;">ul</span><span style="color:#808080;">&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  )</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>useCallback</code>: 用于缓存回调函数，避免在每次渲染时创建新的函数实例。</p><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> ParentComponent</span><span style="color:#D4D4D4;">() {</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  const</span><span style="color:#D4D4D4;"> [</span><span style="color:#4FC1FF;">count</span><span style="color:#D4D4D4;">, </span><span style="color:#4FC1FF;">setCount</span><span style="color:#D4D4D4;">] = </span><span style="color:#DCDCAA;">useState</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  const</span><span style="color:#4FC1FF;"> handleClick</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">useCallback</span><span style="color:#D4D4D4;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">    setCount</span><span style="color:#D4D4D4;">((</span><span style="color:#9CDCFE;">prevCount</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#9CDCFE;"> prevCount</span><span style="color:#D4D4D4;"> + </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  }, []) </span><span style="color:#6A9955;">// 空依赖数组，函数不会重新创建</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#D4D4D4;"> (</span></span></span>
<span class="line"><span class="line"><span style="color:#808080;">    &lt;</span><span style="color:#569CD6;">div</span><span style="color:#808080;">&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#808080;">      &lt;</span><span style="color:#4EC9B0;">ChildComponent</span><span style="color:#9CDCFE;"> onClick</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">{</span><span style="color:#9CDCFE;">handleClick</span><span style="color:#569CD6;">}</span><span style="color:#808080;"> /&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#808080;">      &lt;</span><span style="color:#569CD6;">p</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">Count: </span><span style="color:#569CD6;">{</span><span style="color:#9CDCFE;">count</span><span style="color:#569CD6;">}</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">p</span><span style="color:#808080;">&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#808080;">    &lt;/</span><span style="color:#569CD6;">div</span><span style="color:#808080;">&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  )</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> ChildComponent</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">React</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">memo</span><span style="color:#D4D4D4;">(({ </span><span style="color:#9CDCFE;">onClick</span><span style="color:#D4D4D4;"> }) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;ChildComponent rendered&#39;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#808080;"> &lt;</span><span style="color:#569CD6;">button</span><span style="color:#9CDCFE;"> onClick</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">{</span><span style="color:#9CDCFE;">onClick</span><span style="color:#569CD6;">}</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">Click me</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">button</span><span style="color:#808080;">&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">})</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>React.memo</code>: 是一个高阶组件，用于缓存组件的渲染结果，避免在 props 未变化时重新渲染</p><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> MyComponent</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">React</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">memo</span><span style="color:#D4D4D4;">(({ </span><span style="color:#9CDCFE;">value</span><span style="color:#D4D4D4;"> }) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;MyComponent rendered&#39;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#808080;"> &lt;</span><span style="color:#569CD6;">div</span><span style="color:#808080;">&gt;</span><span style="color:#569CD6;">{</span><span style="color:#9CDCFE;">value</span><span style="color:#569CD6;">}</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">div</span><span style="color:#808080;">&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">})</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> ParentComponent</span><span style="color:#D4D4D4;">() {</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  const</span><span style="color:#D4D4D4;"> [</span><span style="color:#4FC1FF;">count</span><span style="color:#D4D4D4;">, </span><span style="color:#4FC1FF;">setCount</span><span style="color:#D4D4D4;">] = </span><span style="color:#DCDCAA;">useState</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#D4D4D4;"> (</span></span></span>
<span class="line"><span class="line"><span style="color:#808080;">    &lt;</span><span style="color:#569CD6;">div</span><span style="color:#808080;">&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#808080;">      &lt;</span><span style="color:#569CD6;">button</span><span style="color:#9CDCFE;"> onClick</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;">() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#DCDCAA;"> setCount</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">count</span><span style="color:#D4D4D4;"> + </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">)</span><span style="color:#569CD6;">}</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">Increment</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">button</span><span style="color:#808080;">&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#808080;">      &lt;</span><span style="color:#4EC9B0;">MyComponent</span><span style="color:#9CDCFE;"> value</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;Hello&quot;</span><span style="color:#808080;"> /&gt;</span><span style="color:#569CD6;"> {</span><span style="color:#6A9955;">/* 不会因 count 变化而重新渲染 */</span><span style="color:#569CD6;">}</span></span></span>
<span class="line"><span class="line"><span style="color:#808080;">    &lt;/</span><span style="color:#569CD6;">div</span><span style="color:#808080;">&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  )</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>Suspense</code>: 用于在异步加载数据或组件时显示加载状态，可以减少初始加载时间，提升用户体验</p><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> LazyComponent</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">React</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">lazy</span><span style="color:#D4D4D4;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#569CD6;"> import</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;./LazyComponent&#39;</span><span style="color:#D4D4D4;">))</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> MyComponent</span><span style="color:#D4D4D4;">() {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#D4D4D4;"> (</span></span></span>
<span class="line"><span class="line"><span style="color:#808080;">    &lt;</span><span style="color:#4EC9B0;">React.Suspense</span><span style="color:#9CDCFE;"> fallback</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">{</span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">div</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">Loading...</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">div</span><span style="color:#808080;">&gt;</span><span style="color:#569CD6;">}</span><span style="color:#808080;">&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#808080;">      &lt;</span><span style="color:#4EC9B0;">LazyComponent</span><span style="color:#808080;"> /&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#808080;">    &lt;/</span><span style="color:#4EC9B0;">React.Suspense</span><span style="color:#808080;">&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  )</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>路由懒加载</code>：通过动态导入（dynamic import）将路由组件拆分为单独的代码块，按需加载。可以减少初始加载的代码量，提升页面加载速度</p><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">BrowserRouter</span><span style="color:#C586C0;"> as</span><span style="color:#9CDCFE;"> Router</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">Route</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">Routes</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &#39;react-router-dom&#39;</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">import</span><span style="color:#9CDCFE;"> React</span><span style="color:#D4D4D4;">, { </span><span style="color:#9CDCFE;">Suspense</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &#39;react&#39;</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> Home</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">React</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">lazy</span><span style="color:#D4D4D4;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#569CD6;"> import</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;./Home&#39;</span><span style="color:#D4D4D4;">))</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> About</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">React</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">lazy</span><span style="color:#D4D4D4;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#569CD6;"> import</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;./About&#39;</span><span style="color:#D4D4D4;">))</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> App</span><span style="color:#D4D4D4;">() {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#D4D4D4;"> (</span></span></span>
<span class="line"><span class="line"><span style="color:#808080;">    &lt;</span><span style="color:#4EC9B0;">Router</span><span style="color:#808080;">&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#808080;">      &lt;</span><span style="color:#4EC9B0;">Suspense</span><span style="color:#9CDCFE;"> fallback</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">{</span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">div</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">Loading...</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">div</span><span style="color:#808080;">&gt;</span><span style="color:#569CD6;">}</span><span style="color:#808080;">&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#808080;">        &lt;</span><span style="color:#4EC9B0;">Routes</span><span style="color:#808080;">&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#808080;">          &lt;</span><span style="color:#4EC9B0;">Route</span><span style="color:#9CDCFE;"> path</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;/&quot;</span><span style="color:#9CDCFE;"> element</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">{</span><span style="color:#808080;">&lt;</span><span style="color:#4EC9B0;">Home</span><span style="color:#808080;"> /&gt;</span><span style="color:#569CD6;">}</span><span style="color:#808080;"> /&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#808080;">          &lt;</span><span style="color:#4EC9B0;">Route</span><span style="color:#9CDCFE;"> path</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;/about&quot;</span><span style="color:#9CDCFE;"> element</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">{</span><span style="color:#808080;">&lt;</span><span style="color:#4EC9B0;">About</span><span style="color:#808080;"> /&gt;</span><span style="color:#569CD6;">}</span><span style="color:#808080;"> /&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#808080;">        &lt;/</span><span style="color:#4EC9B0;">Routes</span><span style="color:#808080;">&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#808080;">      &lt;/</span><span style="color:#4EC9B0;">Suspense</span><span style="color:#808080;">&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#808080;">    &lt;/</span><span style="color:#4EC9B0;">Router</span><span style="color:#808080;">&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  )</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="vite中可做的项目优化" tabindex="-1"><a class="header-anchor" href="#vite中可做的项目优化"><span>Vite中可做的项目优化</span></a></h2><h3 id="_1、启用-gzip-brotli-压缩" tabindex="-1"><a class="header-anchor" href="#_1、启用-gzip-brotli-压缩"><span>1、启用 Gzip/Brotli 压缩</span></a></h3><p>使用 <code>vite-plugin-compression</code> 插件开启 Gzip 或 Brotli 压缩，可以有效减小传输的文件体积，提升加载速度。</p><p>安装依赖：</p><div class="language-bash line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-bash;"><code><span class="line"><span class="line"><span style="color:#DCDCAA;">npm</span><span style="color:#CE9178;"> install</span><span style="color:#CE9178;"> vite-plugin-compression</span><span style="color:#569CD6;"> --save-dev</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>配置示例：</p><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#C586C0;">import</span><span style="color:#9CDCFE;"> compression</span><span style="color:#C586C0;"> from</span><span style="color:#CE9178;"> &#39;vite-plugin-compression&#39;</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">export</span><span style="color:#C586C0;"> default</span><span style="color:#DCDCAA;"> defineConfig</span><span style="color:#D4D4D4;">({</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  plugins:</span><span style="color:#D4D4D4;"> [</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">    compression</span><span style="color:#D4D4D4;">({</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">      algorithm:</span><span style="color:#CE9178;"> &#39;gzip&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#6A9955;">// 或 &#39;brotli&#39; 压缩</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">      threshold:</span><span style="color:#B5CEA8;"> 10240</span><span style="color:#D4D4D4;">, </span><span style="color:#6A9955;">// 文件大于 10KB 时启用压缩</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    }),</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  ],</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">})</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>参考博文：<a href="https://juejin.cn/post/7222901994840244279" target="_blank" rel="noopener noreferrer">vite打包优化vite-plugin-compression的使用</a></p></blockquote><h3 id="_2、代码分割" tabindex="-1"><a class="header-anchor" href="#_2、代码分割"><span>2、代码分割</span></a></h3><ul><li>路由分割</li></ul><p>使用动态导入实现按需加载，减小初始包的体积，提高页面加载速度。</p><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> module</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">import</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;./module.js&#39;</span><span style="color:#D4D4D4;">) </span><span style="color:#6A9955;">// 动态导入</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>或者在路由中使用懒加载：</p><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#569CD6;">const</span><span style="color:#DCDCAA;"> MyComponent</span><span style="color:#D4D4D4;"> = () </span><span style="color:#569CD6;">=&gt;</span><span style="color:#569CD6;"> import</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;./MyComponent.vue&#39;</span><span style="color:#D4D4D4;">)</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>手动控制分包</li></ul><p>在 Vite 中，你可以通过配置 Rollup 的 <code>manualChunks</code> 选项来手动控制如何分割代码。这个策略适用于想要将特定的依赖或模块提取成单独的 chunk 文件。</p><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">defineConfig</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &#39;vite&#39;</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">export</span><span style="color:#C586C0;"> default</span><span style="color:#DCDCAA;"> defineConfig</span><span style="color:#D4D4D4;">({</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  build:</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">    minify:</span><span style="color:#569CD6;"> false</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">    // 在这里配置打包时的rollup配置</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">    rollupOptions:</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">      manualChunks</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">id</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">        if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">id</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">includes</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;node_modules&#39;</span><span style="color:#D4D4D4;">)) {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">          return</span><span style="color:#CE9178;"> &#39;vendor&#39;</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">        }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">      },</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    },</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  },</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">})</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>参考博文：<a href="https://juejin.cn/post/7177982374259949624" target="_blank" rel="noopener noreferrer">Vite性能优化之分包策略</a></p></blockquote><h3 id="_3、图片优化" tabindex="-1"><a class="header-anchor" href="#_3、图片优化"><span>3、图片优化</span></a></h3><p>使用 <code>vite-plugin-imagemin</code> 插件对项目中的图片进行压缩，减少图片体积，提升加载速度。</p><div class="language-bash line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-bash;"><code><span class="line"><span class="line"><span style="color:#DCDCAA;">npm</span><span style="color:#CE9178;"> install</span><span style="color:#CE9178;"> vite-plugin-imagemin</span><span style="color:#569CD6;"> --save-dev</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#C586C0;">export</span><span style="color:#C586C0;"> default</span><span style="color:#DCDCAA;"> defineConfig</span><span style="color:#D4D4D4;">({</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  plugins:</span><span style="color:#D4D4D4;"> [</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">    ViteImagemin</span><span style="color:#D4D4D4;">({</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">      gifsicle:</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">        optimizationLevel:</span><span style="color:#B5CEA8;"> 3</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">      },</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">      optipng:</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">        optimizationLevel:</span><span style="color:#B5CEA8;"> 7</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">      },</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">      mozjpeg:</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">        quality:</span><span style="color:#B5CEA8;"> 85</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">      },</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">      pngquant:</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">        quality:</span><span style="color:#D4D4D4;"> [</span><span style="color:#B5CEA8;">0.65</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">0.9</span><span style="color:#D4D4D4;">],</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">      },</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    }),</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  ],</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">})</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4、依赖优化" tabindex="-1"><a class="header-anchor" href="#_4、依赖优化"><span>4、依赖优化</span></a></h3><p>配置 Vite 的 <code>optimizeDeps</code> 选项，提前预构建常用依赖，减少开发环境下的启动时间。</p><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#C586C0;">export</span><span style="color:#C586C0;"> default</span><span style="color:#DCDCAA;"> defineConfig</span><span style="color:#D4D4D4;">({</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  optimizeDeps:</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">    include:</span><span style="color:#D4D4D4;"> [</span><span style="color:#CE9178;">&#39;lodash&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;vue&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;react&#39;</span><span style="color:#D4D4D4;">], </span><span style="color:#6A9955;">// 预构建依赖</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  },</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">})</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="性能检测工具lighthouse" tabindex="-1"><a class="header-anchor" href="#性能检测工具lighthouse"><span>性能检测工具Lighthouse</span></a></h2><h3 id="_1、简介" tabindex="-1"><a class="header-anchor" href="#_1、简介"><span>1、简介</span></a></h3><p>Lighthouse 是一款检测网页质量的自动化工具，Google提供的开源软件，任何网站都可以免费使用。可以检查的网站性能、可访问性、SEO等，并给出优化建议。</p><p><img src="`+D+`" alt="lighthouse1"></p><h3 id="_2、安装使用" tabindex="-1"><a class="header-anchor" href="#_2、安装使用"><span>2、安装使用</span></a></h3><ul><li><p>Chrome 开发者工具</p></li><li><p>Chrome 扩展程序</p></li><li><p>命令行安装</p><div class="language-bash line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-bash;"><code><span class="line"><span class="line"><span style="color:#DCDCAA;">npm</span><span style="color:#CE9178;"> i</span><span style="color:#CE9178;"> lighthouse</span><span style="color:#569CD6;"> -g</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">lighthouse</span><span style="color:#CE9178;"> https://www.baidu.com/</span><span style="color:#569CD6;"> --view</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="_3、评分指标" tabindex="-1"><a class="header-anchor" href="#_3、评分指标"><span>3、评分指标</span></a></h3><p>1、<strong>FCP（First Contentful Paint）</strong>： 首次内容绘制</p><ul><li>用户开始输入url（开始导航） 到页面上任意一部分内容呈现在屏幕上的时间（浏览器渲染第一段DOM。图片、非白色的 &lt; canvas &gt; 元素和 svg 被认为是 DOM 内容，iframe中的任何内容不包含在内）。</li><li>这个指标对于没有使用ssr技术的web app意义并不大，因为第一绘制发生的时间通常JS还没加载完毕。</li></ul><p>2、<strong>SI（Speed Index）</strong>：速度指数（分数越低越好）</p><ul><li>衡量页面加载期间内容的视觉显示速度。</li><li>它要求的是页面的渲染过程应该是渐进的，内容一点点出现，而不是开始一段时间一直是空白，然后全部内容一下出现。</li><li>这个指标跟页面渲染时间和渲染方式有关，如果页面渲染时间很短，页面一下就出来了，那它的得分也会很高。该指标权重为 10%</li></ul><p>3、<strong>TTI（Time to Interactive）</strong>：首次可操作（比如可点击可滚动）</p><ul><li>衡量一个页面需要多长时间才能完全交互</li><li>主要影响因素就是页面渲染速度和 JS 阻塞时间。</li></ul><p>4、<strong>TBT（Total Blocking Time）</strong>：总阻塞时间</p><ul><li>在FCP和TTI之间，所有超过50ms的long task的超过时间之和</li><li>要求我们所有的 JS 任务(宏任务，一般是函数)执行时间不要大于 50 ms</li></ul><p>5、<strong>LCP（Largest Contentful Paint）</strong>：当前页面上”最大的内容“渲染时间</p><ul><li>衡量页面的主要内容对用户可见的时间</li></ul><p>6、<strong>CLS（Cumulative Layout Shift）</strong>：累积布局移位</p><ul><li><p>网页布局在加载期间的偏移量，普遍用于测量视觉稳定性。</p></li><li><p>得分范围是0－1，其中0表示没有偏移，1表示最大偏移。要求我们在渲染页面过程中，不要频繁发生内容块的偏移。</p></li></ul><h3 id="_4、常见问题" tabindex="-1"><a class="header-anchor" href="#_4、常见问题"><span>4、常见问题</span></a></h3><ol><li><p><code>Use HTTP/2</code></p><p>http1.1替换为http2.0后可使用二进制标头和多路复用（可以只通过一个 TCP 连接就可以传输所有的请求数据，并行请求）。</p></li><li><p><code>Remove unused CSS</code> 或者 <code>Remove unused JavaScript</code>（移除无用的js和css）</p></li><li><p><code>Serve static assets with an efficient cache policy</code>（为静态资源提供缓存）</p></li><li><p><code>Reduce JavaScript execution time</code> 减少js的执行时间</p><p>当JavaScript执行时间超过2秒时，Lighthouse将显示警告。执行时间超过3.5秒时，审核将失败</p><ul><li>拆分代码</li><li>缩小并压缩代码</li><li>删除未使用的代码 (tree shaking)</li><li>使用缓存代码</li></ul></li></ol>`,166))])}const C=l(d,[["render",y],["__file","前端性能优化.html.vue"]]),m=JSON.parse('{"path":"/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E6%B1%87%E6%80%BB/%E5%89%8D%E7%AB%AF%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96.html","title":"前端性能优化","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1752911801000,"contributors":[{"name":"csmSimona","username":"csmSimona","email":"980715844@qq.com","commits":6,"url":"https://github.com/csmSimona"},{"name":"chenshimeng","username":"chenshimeng","email":"chenshimeng@hyperchain.cn","commits":1,"url":"https://github.com/chenshimeng"}],"changelog":[{"hash":"b1b59fcbe4322ab951f22a25ced0344564429464","time":1752911801000,"email":"980715844@qq.com","author":"csmSimona","message":"update"},{"hash":"106aaa0e4dbb002ed34f1ac7ef4194cb3459d2a2","time":1744126956000,"email":"980715844@qq.com","author":"csmSimona","message":"update"},{"hash":"28944703ca380950be1536e88d7eb1c5bd61afaf","time":1727023893000,"email":"980715844@qq.com","author":"csmSimona","message":"update docs"},{"hash":"b838a67df4a86387934479ec6107a377ae7d89fa","time":1726590005000,"email":"980715844@qq.com","author":"csmSimona","message":"update docs"},{"hash":"f2e253faf986e81a43d713c8c9121bbb9bea2116","time":1725384859000,"email":"980715844@qq.com","author":"csmSimona","message":"update vue小记"},{"hash":"dba483764b9fb416e72c39250e41639c4d51810c","time":1725294921000,"email":"chenshimeng@hyperchain.cn","author":"chenshimeng","message":"update 性能优化"},{"hash":"c0d4d15fdf0689f997f6de6b8b764f488f580b66","time":1724740884000,"email":"980715844@qq.com","author":"csmSimona","message":"init"}]},"filePathRelative":"前端基础汇总/前端性能优化.md","readingTime":{"minutes":25.74,"words":7722}}');export{C as comp,m as data};
