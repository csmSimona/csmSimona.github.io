import{_ as s,c as n,o as a,a as l}from"./app-Cy8tXSBo.js";const e={},p=l(`<h2 id="手写js代码" tabindex="-1"><a class="header-anchor" href="#手写js代码"><span>手写js代码</span></a></h2><h3 id="√1、数据类型判断" tabindex="-1"><a class="header-anchor" href="#√1、数据类型判断"><span>√1、数据类型判断</span></a></h3><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> typeOf</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">obj</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#4EC9B0;"> Object</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">prototype</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">toString</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">call</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">obj</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">slice</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">8</span><span style="color:#D4D4D4;">, -</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">toLowerCase</span><span style="color:#D4D4D4;">()</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2、简单实现instanceof" tabindex="-1"><a class="header-anchor" href="#_2、简单实现instanceof"><span>2、简单实现instanceof</span></a></h3><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> instance_of</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">left</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">right</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  if</span><span style="color:#D4D4D4;"> (</span><span style="color:#569CD6;">typeof</span><span style="color:#9CDCFE;"> left</span><span style="color:#D4D4D4;"> !== </span><span style="color:#CE9178;">&#39;object&#39;</span><span style="color:#D4D4D4;"> || </span><span style="color:#9CDCFE;">left</span><span style="color:#D4D4D4;"> === </span><span style="color:#CE9178;">&#39;null&#39;</span><span style="color:#D4D4D4;">) </span><span style="color:#C586C0;">return</span><span style="color:#569CD6;"> false</span><span style="color:#6A9955;"> // 基础类型一律为 false</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  let</span><span style="color:#9CDCFE;"> proto</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">Object</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getPrototypeOf</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">left</span><span style="color:#D4D4D4;">) </span><span style="color:#6A9955;">// 获取对象的原型</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  while</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">true</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">    if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">proto</span><span style="color:#D4D4D4;"> === </span><span style="color:#569CD6;">null</span><span style="color:#D4D4D4;">) </span><span style="color:#C586C0;">return</span><span style="color:#569CD6;"> false</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">    if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">proto</span><span style="color:#D4D4D4;"> === </span><span style="color:#4EC9B0;">right</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">prototype</span><span style="color:#D4D4D4;">) </span><span style="color:#C586C0;">return</span><span style="color:#569CD6;"> true</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">    proto</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">Object</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getPrototypeOf</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">proto</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3、实现object-create" tabindex="-1"><a class="header-anchor" href="#_3、实现object-create"><span>3、实现Object.create</span></a></h3><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> objCreate</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">obj</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  function</span><span style="color:#DCDCAA;"> F</span><span style="color:#D4D4D4;">() {}</span></span></span>
<span class="line"><span class="line"><span style="color:#4EC9B0;">  F</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">prototype</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">obj</span></span></span>
<span class="line"><span class="line"><span style="color:#4EC9B0;">  F</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">prototype</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">constructor</span><span style="color:#D4D4D4;"> = </span><span style="color:#4FC1FF;">F</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#569CD6;"> new</span><span style="color:#DCDCAA;"> F</span><span style="color:#D4D4D4;">()</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4、实现-new-关键字" tabindex="-1"><a class="header-anchor" href="#_4、实现-new-关键字"><span>⭐4、实现 new 关键字</span></a></h3><p>new 一个对象的过程</p><p>1、创建一个新对象，如：var person = {};</p><p>2、新对象的_ proto _属性指向构造函数的原型对象。</p><p>3、将构造函数的作用域赋值给新对象。（this对象指向新对象）</p><p>4、执行构造函数内部的代码，将属性和方法添加给person中的this对象。</p><p>5、返回新对象person。</p><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> myNew</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">fn</span><span style="color:#D4D4D4;">, ...</span><span style="color:#9CDCFE;">args</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  if</span><span style="color:#D4D4D4;"> (</span><span style="color:#569CD6;">typeof</span><span style="color:#9CDCFE;"> fn</span><span style="color:#D4D4D4;"> !== </span><span style="color:#CE9178;">&#39;function&#39;</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">    throw</span><span style="color:#569CD6;"> new</span><span style="color:#DCDCAA;"> TypeError</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">\`</span><span style="color:#569CD6;">\${</span><span style="color:#9CDCFE;">fn</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;"> is not a constructor\`</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  }</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  let</span><span style="color:#9CDCFE;"> obj</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">Object</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">create</span><span style="color:#D4D4D4;">(</span><span style="color:#4EC9B0;">fn</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">prototype</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">  // 效果一样</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">  // let obj = new Object()</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">  // obj.__proto__ = fn.prototype</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  let</span><span style="color:#9CDCFE;"> res</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">fn</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">apply</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">obj</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">args</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#D4D4D4;"> (</span><span style="color:#569CD6;">typeof</span><span style="color:#9CDCFE;"> res</span><span style="color:#D4D4D4;"> === </span><span style="color:#CE9178;">&#39;object&#39;</span><span style="color:#D4D4D4;"> &amp;&amp; </span><span style="color:#9CDCFE;">res</span><span style="color:#D4D4D4;"> !== </span><span style="color:#569CD6;">null</span><span style="color:#D4D4D4;">) ? </span><span style="color:#9CDCFE;">res</span><span style="color:#D4D4D4;"> : </span><span style="color:#9CDCFE;">obj</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5、手写call" tabindex="-1"><a class="header-anchor" href="#_5、手写call"><span>5、手写call</span></a></h3><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#4EC9B0;">Function</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">prototype</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">myCall</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">thisArg</span><span style="color:#D4D4D4;">, ...</span><span style="color:#9CDCFE;">args</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  if</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">typeof</span><span style="color:#569CD6;"> this</span><span style="color:#D4D4D4;"> !== </span><span style="color:#CE9178;">&#39;function&#39;</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">      throw</span><span style="color:#569CD6;"> new</span><span style="color:#DCDCAA;"> TypeError</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;caller must be a function&#39;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  }</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  const</span><span style="color:#4FC1FF;"> fn</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">Symbol</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;fn&#39;</span><span style="color:#D4D4D4;">)        </span><span style="color:#6A9955;">// 声明一个独有的Symbol属性, 防止fn覆盖已有属性</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  thisArg</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">thisArg</span><span style="color:#D4D4D4;"> || </span><span style="color:#9CDCFE;">window</span><span style="color:#6A9955;">    // 若没有传入this, 默认绑定window对象</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  thisArg</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">fn</span><span style="color:#D4D4D4;">] = </span><span style="color:#569CD6;">this</span><span style="color:#6A9955;">              // this指向调用call的对象,即我们要改变this指向的函数</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  const</span><span style="color:#4FC1FF;"> result</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">thisArg</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">fn</span><span style="color:#D4D4D4;">](...</span><span style="color:#9CDCFE;">args</span><span style="color:#D4D4D4;">)  </span><span style="color:#6A9955;">// 执行当前函数</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  delete</span><span style="color:#9CDCFE;"> thisArg</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">fn</span><span style="color:#D4D4D4;">]              </span><span style="color:#6A9955;">// 删除我们声明的fn属性</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#9CDCFE;"> result</span><span style="color:#6A9955;">                  // 返回函数执行结果</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6、手写bind" tabindex="-1"><a class="header-anchor" href="#_6、手写bind"><span>6、手写bind</span></a></h3><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#4EC9B0;">Function</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">prototype</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">myBind</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">thisArg</span><span style="color:#D4D4D4;">, ...</span><span style="color:#9CDCFE;">args</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  let</span><span style="color:#9CDCFE;"> fn</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">this</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#569CD6;"> function</span><span style="color:#D4D4D4;">(...</span><span style="color:#9CDCFE;">newArgs</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">    return</span><span style="color:#9CDCFE;"> fn</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">call</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">thisArg</span><span style="color:#D4D4D4;">, ...</span><span style="color:#9CDCFE;">args</span><span style="color:#D4D4D4;">, ...</span><span style="color:#9CDCFE;">newArgs</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="√7、函数科里化" tabindex="-1"><a class="header-anchor" href="#√7、函数科里化"><span>√7、函数科里化</span></a></h3><p>将使用多个参数的函数转换成一系列使用一个参数的函数</p><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> currying</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">fn</span><span style="color:#D4D4D4;">, ...</span><span style="color:#9CDCFE;">args</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">fn</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">length</span><span style="color:#D4D4D4;"> &gt; </span><span style="color:#9CDCFE;">args</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">length</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">    return</span><span style="color:#569CD6;"> function</span><span style="color:#D4D4D4;">(...</span><span style="color:#9CDCFE;">newArgs</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">      return</span><span style="color:#DCDCAA;"> currying</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">fn</span><span style="color:#D4D4D4;">, ...</span><span style="color:#9CDCFE;">args</span><span style="color:#D4D4D4;">, ...</span><span style="color:#9CDCFE;">newArgs</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  } </span><span style="color:#C586C0;">else</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">    return</span><span style="color:#DCDCAA;"> fn</span><span style="color:#D4D4D4;">(...</span><span style="color:#9CDCFE;">args</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> add</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">a</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">b</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">c</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">d</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#9CDCFE;"> a</span><span style="color:#D4D4D4;"> + </span><span style="color:#9CDCFE;">b</span><span style="color:#D4D4D4;"> + </span><span style="color:#9CDCFE;">c</span><span style="color:#D4D4D4;"> + </span><span style="color:#9CDCFE;">d</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">var</span><span style="color:#9CDCFE;"> curry</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">currying</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">add</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">curry</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">)(</span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">)(</span><span style="color:#B5CEA8;">4</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">curry</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">)(</span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">)(</span><span style="color:#B5CEA8;">4</span><span style="color:#D4D4D4;">)</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="√8、偏函数" tabindex="-1"><a class="header-anchor" href="#√8、偏函数"><span>√8、偏函数</span></a></h3><p>将一个 n 参的函数转换成固定 x 参的函数，剩余参数（n - x）将在下次调用全部传入</p><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> partial</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">fn</span><span style="color:#D4D4D4;">, ...</span><span style="color:#9CDCFE;">args</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#D4D4D4;"> (...</span><span style="color:#9CDCFE;">newArgs</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">    return</span><span style="color:#DCDCAA;"> fn</span><span style="color:#D4D4D4;">(...</span><span style="color:#9CDCFE;">args</span><span style="color:#D4D4D4;">, ...</span><span style="color:#9CDCFE;">newArgs</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> add</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">a</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">b</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">c</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#9CDCFE;"> a</span><span style="color:#D4D4D4;"> + </span><span style="color:#9CDCFE;">b</span><span style="color:#D4D4D4;"> + </span><span style="color:#9CDCFE;">c</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">let</span><span style="color:#9CDCFE;"> partialAdd</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">partial</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">add</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">partialAdd</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">)</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="√9、数组去重" tabindex="-1"><a class="header-anchor" href="#√9、数组去重"><span>√9、数组去重</span></a></h3><p>https://csmsimona.github.io/myDocs/#/zh-cn/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E6%B1%87%E6%80%BB/JavaScript%E5%B0%8F%E8%AE%B0?id=_9%e3%80%81%e6%95%b0%e7%bb%84%e5%8e%bb%e9%87%8d%e7%9a%84%e6%96%b9%e6%b3%95</p><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#569CD6;">var</span><span style="color:#DCDCAA;"> unique</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">arr</span><span style="color:#569CD6;"> =&gt;</span><span style="color:#D4D4D4;"> [...</span><span style="color:#569CD6;">new</span><span style="color:#DCDCAA;"> Set</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">)]</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">----------------------------------------------------------------------</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> unique</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  var</span><span style="color:#9CDCFE;"> res</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">filter</span><span style="color:#D4D4D4;">((</span><span style="color:#9CDCFE;">item</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">index</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">    return</span><span style="color:#9CDCFE;"> arr</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">indexOf</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">item</span><span style="color:#D4D4D4;">) === </span><span style="color:#9CDCFE;">index</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  })</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#9CDCFE;"> res</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">----------------------------------------------------------------------</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> unique</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  let</span><span style="color:#9CDCFE;"> res</span><span style="color:#D4D4D4;"> = []</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  arr</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">forEach</span><span style="color:#D4D4D4;">((</span><span style="color:#9CDCFE;">item</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">index</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">    if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">indexOf</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">item</span><span style="color:#D4D4D4;">) == </span><span style="color:#9CDCFE;">index</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">      res</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">push</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">item</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  })</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#9CDCFE;"> res</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">----------------------------------------------------------------------</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> unique</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">){            </span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  for</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">var</span><span style="color:#9CDCFE;"> i</span><span style="color:#D4D4D4;"> = </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">; </span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;"> &lt; </span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">length</span><span style="color:#D4D4D4;">; </span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">++){</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">    for</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">var</span><span style="color:#9CDCFE;"> j</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">+</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">; </span><span style="color:#9CDCFE;">j</span><span style="color:#D4D4D4;"> &lt; </span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">length</span><span style="color:#D4D4D4;">; </span><span style="color:#9CDCFE;">j</span><span style="color:#D4D4D4;">++){</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">      if</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">] == </span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">j</span><span style="color:#D4D4D4;">]){         </span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">        arr</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">splice</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">j</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">);</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">        j</span><span style="color:#D4D4D4;">--;</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">      }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  }</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#9CDCFE;"> arr</span><span style="color:#D4D4D4;">;</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="√10、数组扁平化" tabindex="-1"><a class="header-anchor" href="#√10、数组扁平化"><span>√10、数组扁平化</span></a></h3><p>https://csmsimona.github.io/myDocs/#/zh-cn/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E6%B1%87%E6%80%BB/JavaScript%E5%B0%8F%E8%AE%B0?id=_10%e3%80%81%e6%95%b0%e7%bb%84%e6%8b%8d%e5%b9%b3</p><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#6A9955;">// 数组方法flat()，默认打平一层，Infinity打平任意层</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">var</span><span style="color:#DCDCAA;"> flatArr</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">arr</span><span style="color:#569CD6;"> =&gt;</span><span style="color:#9CDCFE;"> arr</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">flat</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">Infinity</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">// 递归+concat</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> flatArr</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  let</span><span style="color:#9CDCFE;"> result</span><span style="color:#D4D4D4;"> = []</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  arr</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">forEach</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">item</span><span style="color:#569CD6;"> =&gt;</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">    if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">item</span><span style="color:#569CD6;"> instanceof</span><span style="color:#4EC9B0;"> Array</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">      result</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">result</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">concat</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">flatArr</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">item</span><span style="color:#D4D4D4;">))</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    } </span><span style="color:#C586C0;">else</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">      result</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">push</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">item</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  })</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#9CDCFE;"> result</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">// reduce（与上一种的递归类似）</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> flatArr</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#9CDCFE;"> arr</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">reduce</span><span style="color:#D4D4D4;">((</span><span style="color:#9CDCFE;">total</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">item</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">    return</span><span style="color:#9CDCFE;"> total</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">concat</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">Array</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">isArray</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">item</span><span style="color:#D4D4D4;">) ? </span><span style="color:#DCDCAA;">flatArr</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">item</span><span style="color:#D4D4D4;">) : </span><span style="color:#9CDCFE;">item</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  }, [])</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">// 扩展运算符...</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> flatArr</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  while</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">some</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">item</span><span style="color:#569CD6;"> =&gt;</span><span style="color:#9CDCFE;"> Array</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">isArray</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">item</span><span style="color:#D4D4D4;">))) {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">    arr</span><span style="color:#D4D4D4;"> = [].</span><span style="color:#DCDCAA;">concat</span><span style="color:#D4D4D4;">(...</span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  }</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#9CDCFE;"> arr</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">// join()</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> flatArr</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#9CDCFE;"> arr</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">join</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;,&#39;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">split</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;,&#39;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">map</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">Number</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">// toString()</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> flatArr</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#9CDCFE;"> arr</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">toString</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">split</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;,&#39;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">map</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">Number</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="√11、数组排序" tabindex="-1"><a class="header-anchor" href="#√11、数组排序"><span>√⭐11、数组排序</span></a></h3><h4 id="冒泡排序" tabindex="-1"><a class="header-anchor" href="#冒泡排序"><span>冒泡排序</span></a></h4><p>时间复杂度 O(n*n) 稳定</p><p>原理：从第一个元素开始，把当前元素和下一个索引元素进行比较。如果当前元素大，那么就交换位置，重复操作直到比较到最后一个元素，那么此时最后一个元素就是该数组中最大的数。下一轮重复以上操作，但是此时最后一个元素也就是最大数了，所以不需要再比较最后一个元素，只需要比较到length-1的位置。</p><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> bubbleSort</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  for</span><span style="color:#D4D4D4;"> (</span><span style="color:#569CD6;">let</span><span style="color:#9CDCFE;"> i</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">length</span><span style="color:#D4D4D4;"> - </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">; </span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;"> &gt; </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">; </span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">--) {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">    for</span><span style="color:#D4D4D4;"> (</span><span style="color:#569CD6;">let</span><span style="color:#9CDCFE;"> j</span><span style="color:#D4D4D4;"> = </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">; </span><span style="color:#9CDCFE;">j</span><span style="color:#D4D4D4;"> &lt; </span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">; </span><span style="color:#9CDCFE;">j</span><span style="color:#D4D4D4;">++) {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">      if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">j</span><span style="color:#D4D4D4;">] &gt; </span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">j</span><span style="color:#D4D4D4;">+</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">]) {</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">        [</span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">j</span><span style="color:#D4D4D4;">], </span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">j</span><span style="color:#D4D4D4;">+</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">]] = [</span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">j</span><span style="color:#D4D4D4;">+</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">], </span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">j</span><span style="color:#D4D4D4;">]] </span><span style="color:#6A9955;">// ES6解构赋值</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">      }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  }</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#9CDCFE;"> arr</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="选择排序" tabindex="-1"><a class="header-anchor" href="#选择排序"><span>选择排序</span></a></h4><p>时间复杂度 O(n*n) 不稳定</p><p>原理：遍历数组，设置最小值的索引为0，如果取出的值比当前最小值小，就替换最小值索引，遍历完成后，将第一个元素和最小值索引上的值交换。如上操作后，第一个元素就是数组中的最小值，下次遍历就可以从索引1开始重复上述操作。</p><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> selectSort</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  for</span><span style="color:#D4D4D4;"> (</span><span style="color:#569CD6;">let</span><span style="color:#9CDCFE;"> i</span><span style="color:#D4D4D4;"> = </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">; </span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;"> &lt; </span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">length</span><span style="color:#D4D4D4;"> - </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">; </span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">++) {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">    for</span><span style="color:#D4D4D4;"> (</span><span style="color:#569CD6;">let</span><span style="color:#9CDCFE;"> j</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;"> + </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">; </span><span style="color:#9CDCFE;">j</span><span style="color:#D4D4D4;"> &lt; </span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">length</span><span style="color:#D4D4D4;">; </span><span style="color:#9CDCFE;">j</span><span style="color:#D4D4D4;">++) {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">      if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">] &gt; </span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">j</span><span style="color:#D4D4D4;">]) {</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">        [</span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">], </span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">j</span><span style="color:#D4D4D4;">]] = [</span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">j</span><span style="color:#D4D4D4;">], </span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">]]</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">      }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  }</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#9CDCFE;"> arr</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="插入排序" tabindex="-1"><a class="header-anchor" href="#插入排序"><span>插入排序</span></a></h4><p>时间复杂度 O(n*n) 稳定</p><p>原理：第一个元素默认是已排序元素，取出下一个元素和当前元素比较，如果当前元素大就交换位置。那么此时第一个元素就是当前的最小数，所以下次取出操作从第三个元素开始，向前对比，重复之前的操作。</p><p>即：将元素插入到已排序好的数组中</p><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> insertSort</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  for</span><span style="color:#D4D4D4;"> (</span><span style="color:#569CD6;">let</span><span style="color:#9CDCFE;"> i</span><span style="color:#D4D4D4;"> = </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">; </span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;"> &lt; </span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">length</span><span style="color:#D4D4D4;">; </span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">++) {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">    for</span><span style="color:#D4D4D4;"> (</span><span style="color:#569CD6;">let</span><span style="color:#9CDCFE;"> j</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">; </span><span style="color:#9CDCFE;">j</span><span style="color:#D4D4D4;"> &gt; </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">; </span><span style="color:#9CDCFE;">j</span><span style="color:#D4D4D4;">--) {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">      if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">j</span><span style="color:#D4D4D4;">] &lt; </span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">j</span><span style="color:#D4D4D4;">-</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">]) {</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">        [</span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">j</span><span style="color:#D4D4D4;">], </span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">j</span><span style="color:#D4D4D4;"> - </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">]] = [</span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">j</span><span style="color:#D4D4D4;"> - </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">], </span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">j</span><span style="color:#D4D4D4;">]]</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">      } </span><span style="color:#C586C0;">else</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">        break</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">      }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  }</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#9CDCFE;"> arr</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">var</span><span style="color:#9CDCFE;"> arr</span><span style="color:#D4D4D4;"> = [</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">,</span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">,</span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">,</span><span style="color:#B5CEA8;">7</span><span style="color:#D4D4D4;">,</span><span style="color:#B5CEA8;">5</span><span style="color:#D4D4D4;">,</span><span style="color:#B5CEA8;">4</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">insertSort</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">)</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="快速排序" tabindex="-1"><a class="header-anchor" href="#快速排序"><span>快速排序</span></a></h4><p>时间复杂度 O(nlogn) 不稳定</p><p>原理：选择基准值 mid，循环原数组，小于基准值放左边数组，大于放右边数组，然后 concat 组合，最后依靠递归完成排序。</p><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> quickSort</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  let</span><span style="color:#9CDCFE;"> left</span><span style="color:#D4D4D4;"> = [], </span><span style="color:#9CDCFE;">right</span><span style="color:#D4D4D4;"> = [], </span><span style="color:#9CDCFE;">mid</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">splice</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  for</span><span style="color:#D4D4D4;"> (</span><span style="color:#569CD6;">let</span><span style="color:#9CDCFE;"> i</span><span style="color:#D4D4D4;"> = </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">; </span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;"> &lt; </span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">length</span><span style="color:#D4D4D4;">; </span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">++) {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">    if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">] &gt; </span><span style="color:#9CDCFE;">mid</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">      right</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">push</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">])</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    } </span><span style="color:#C586C0;">else</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">      left</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">push</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">])</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  }</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#DCDCAA;"> quickSort</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">left</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">concat</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">mid</span><span style="color:#D4D4D4;">, </span><span style="color:#DCDCAA;">quickSort</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">right</span><span style="color:#D4D4D4;">))</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="√12、深浅拷贝" tabindex="-1"><a class="header-anchor" href="#√12、深浅拷贝"><span>√⭐12、深浅拷贝</span></a></h3><p>https://csmsimona.github.io/myDocs/#/zh-cn/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E6%B1%87%E6%80%BB/JavaScript%E5%B0%8F%E8%AE%B0?id=_1%e3%80%81%e6%b7%b1%e6%8b%b7%e8%b4%9d%e5%92%8c%e6%b5%85%e6%8b%b7%e8%b4%9d</p><h4 id="普通数组深拷贝" tabindex="-1"><a class="header-anchor" href="#普通数组深拷贝"><span>普通数组深拷贝</span></a></h4><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">var</span><span style="color:#9CDCFE;"> arr</span><span style="color:#D4D4D4;"> = [</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">,</span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">,</span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">,</span><span style="color:#B5CEA8;">4</span><span style="color:#D4D4D4;">,</span><span style="color:#B5CEA8;">5</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">var</span><span style="color:#9CDCFE;"> objArr</span><span style="color:#D4D4D4;"> = [{</span><span style="color:#9CDCFE;">name:</span><span style="color:#CE9178;"> &#39;ccc&#39;</span><span style="color:#D4D4D4;">}, {</span><span style="color:#9CDCFE;">age:</span><span style="color:#B5CEA8;"> 1</span><span style="color:#D4D4D4;">}]</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">// 1.直接遍历</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> copyArr</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  let</span><span style="color:#9CDCFE;"> newArr</span><span style="color:#D4D4D4;"> = []</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  arr</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">forEach</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">item</span><span style="color:#569CD6;"> =&gt;</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">    newArr</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">push</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">item</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  })</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#9CDCFE;"> newArr</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">var</span><span style="color:#9CDCFE;"> arr1</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">copyArr</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">var</span><span style="color:#9CDCFE;"> objArr1</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">copyArr</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">objArr</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">[</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">] = </span><span style="color:#B5CEA8;">2</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">objArr</span><span style="color:#D4D4D4;">[</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">].</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&#39;qq&#39;</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">arr1</span><span style="color:#D4D4D4;">[</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">]);           </span><span style="color:#6A9955;">// 1</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">objArr1</span><span style="color:#D4D4D4;">[</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">].</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;">);   </span><span style="color:#6A9955;">// qq</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">// 2.slice()</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">var</span><span style="color:#9CDCFE;"> arr1</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">slice</span><span style="color:#D4D4D4;">()</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">var</span><span style="color:#9CDCFE;"> objArr1</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">objArr</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">slice</span><span style="color:#D4D4D4;">()</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">[</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">] = </span><span style="color:#B5CEA8;">2</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">objArr</span><span style="color:#D4D4D4;">[</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">].</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&#39;qq&#39;</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">arr1</span><span style="color:#D4D4D4;">[</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">]);           </span><span style="color:#6A9955;">// 1</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">objArr1</span><span style="color:#D4D4D4;">[</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">].</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;">);   </span><span style="color:#6A9955;">// qq</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">// 3.concat()</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">var</span><span style="color:#9CDCFE;"> arr1</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">concat</span><span style="color:#D4D4D4;">()</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">var</span><span style="color:#9CDCFE;"> objArr1</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">objArr</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">concat</span><span style="color:#D4D4D4;">()</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">[</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">] = </span><span style="color:#B5CEA8;">2</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">objArr</span><span style="color:#D4D4D4;">[</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">].</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&#39;qq&#39;</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">arr1</span><span style="color:#D4D4D4;">[</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">]);           </span><span style="color:#6A9955;">// 1</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">objArr1</span><span style="color:#D4D4D4;">[</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">].</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;">);   </span><span style="color:#6A9955;">// qq</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="对象拷贝" tabindex="-1"><a class="header-anchor" href="#对象拷贝"><span>对象拷贝</span></a></h4><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#569CD6;">var</span><span style="color:#9CDCFE;"> obj</span><span style="color:#D4D4D4;"> = {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  name:</span><span style="color:#CE9178;"> &#39;cc&#39;</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  age:</span><span style="color:#B5CEA8;"> 9</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  family:</span><span style="color:#D4D4D4;"> [</span><span style="color:#CE9178;">&#39;mother&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;father&#39;</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">// 单层深拷贝，多层浅拷贝</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> shallowCopy</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">obj</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  if</span><span style="color:#D4D4D4;"> (</span><span style="color:#569CD6;">typeof</span><span style="color:#9CDCFE;"> obj</span><span style="color:#D4D4D4;"> !== </span><span style="color:#CE9178;">&#39;object&#39;</span><span style="color:#D4D4D4;">) </span><span style="color:#C586C0;">return</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  let</span><span style="color:#9CDCFE;"> newObj</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">obj</span><span style="color:#569CD6;"> instanceof</span><span style="color:#4EC9B0;"> Array</span><span style="color:#D4D4D4;"> ? [] : {}</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  for</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">let</span><span style="color:#9CDCFE;"> key</span><span style="color:#569CD6;"> in</span><span style="color:#9CDCFE;"> obj</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">    if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">obj</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">hasOwnProperty</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">key</span><span style="color:#D4D4D4;">)) {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">      newObj</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">key</span><span style="color:#D4D4D4;">] = </span><span style="color:#9CDCFE;">obj</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">key</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  }</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#9CDCFE;"> newObj</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">// Object.assign() 类似</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">var</span><span style="color:#9CDCFE;"> newObj</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">Object</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">assign</span><span style="color:#D4D4D4;">({}, </span><span style="color:#9CDCFE;">obj</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">// 深拷贝 （限制于对象和数组。不考虑时间，函数等）</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> deepClone</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">obj</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  if</span><span style="color:#D4D4D4;"> (</span><span style="color:#569CD6;">typeof</span><span style="color:#9CDCFE;"> obj</span><span style="color:#D4D4D4;"> !== </span><span style="color:#CE9178;">&#39;object&#39;</span><span style="color:#D4D4D4;">) </span><span style="color:#C586C0;">return</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  let</span><span style="color:#9CDCFE;"> newObj</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">obj</span><span style="color:#569CD6;"> instanceof</span><span style="color:#4EC9B0;"> Array</span><span style="color:#D4D4D4;"> ? [] : {}</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  for</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">let</span><span style="color:#9CDCFE;"> key</span><span style="color:#569CD6;"> in</span><span style="color:#9CDCFE;"> obj</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">    if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">obj</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">hasOwnProperty</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">key</span><span style="color:#D4D4D4;">)) {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">      newObj</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">key</span><span style="color:#D4D4D4;">] = </span><span style="color:#569CD6;">typeof</span><span style="color:#9CDCFE;"> obj</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">key</span><span style="color:#D4D4D4;">] === </span><span style="color:#CE9178;">&#39;object&#39;</span><span style="color:#D4D4D4;"> ? </span><span style="color:#DCDCAA;">deepClone</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">obj</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">key</span><span style="color:#D4D4D4;">]) : </span><span style="color:#9CDCFE;">obj</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">key</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  }</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#9CDCFE;"> newObj</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">// 深拷贝升级版（还可以拷贝函数，时间等）</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> deepClone</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">obj</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">newObj</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  for</span><span style="color:#D4D4D4;"> (</span><span style="color:#569CD6;">var</span><span style="color:#9CDCFE;"> key</span><span style="color:#569CD6;"> in</span><span style="color:#9CDCFE;"> obj</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">    var</span><span style="color:#9CDCFE;"> val</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">obj</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">key</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">    if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">val</span><span style="color:#569CD6;"> instanceof</span><span style="color:#4EC9B0;"> Object</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">      var</span><span style="color:#9CDCFE;"> tempObj</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">new</span><span style="color:#9CDCFE;"> val</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">constructor</span><span style="color:#D4D4D4;">()</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">      deepClone</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">val</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">tempObj</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">      newObj</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">key</span><span style="color:#D4D4D4;">] = </span><span style="color:#9CDCFE;">tempObj</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    } </span><span style="color:#C586C0;">else</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">      newObj</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">key</span><span style="color:#D4D4D4;">] = </span><span style="color:#9CDCFE;">val</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">var</span><span style="color:#9CDCFE;"> obj</span><span style="color:#D4D4D4;"> = {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  name:</span><span style="color:#CE9178;"> &#39;cc&#39;</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  age:</span><span style="color:#B5CEA8;"> 9</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  family:</span><span style="color:#D4D4D4;"> [</span><span style="color:#CE9178;">&#39;mother&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;father&#39;</span><span style="color:#D4D4D4;">],</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  date:</span><span style="color:#569CD6;"> new</span><span style="color:#DCDCAA;"> Date</span><span style="color:#D4D4D4;">(),</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">  say</span><span style="color:#D4D4D4;">() {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">    console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;hello&#39;</span><span style="color:#D4D4D4;">);</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">// 序列化反序列化法</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">var</span><span style="color:#9CDCFE;"> newObj</span><span style="color:#D4D4D4;"> = </span><span style="color:#4FC1FF;">JSON</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">parse</span><span style="color:#D4D4D4;">(</span><span style="color:#4FC1FF;">JSON</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">stringify</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">obj</span><span style="color:#D4D4D4;">))</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="实现-deepassign" tabindex="-1"><a class="header-anchor" href="#实现-deepassign"><span>实现 deepAssign</span></a></h4><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#6A9955;">// 实现 deepAssign({a: {b: 1, c: 2}}, {a: {c: 3}});</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">// =&gt; {a: {b: 1, c: 3}}</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">// 两个对象</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> deepAssign</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">obj1</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">obj2</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  for</span><span style="color:#D4D4D4;"> (</span><span style="color:#569CD6;">let</span><span style="color:#9CDCFE;"> key</span><span style="color:#569CD6;"> in</span><span style="color:#9CDCFE;"> obj2</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">    obj1</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">key</span><span style="color:#D4D4D4;">] = </span><span style="color:#569CD6;">typeof</span><span style="color:#9CDCFE;"> obj2</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">key</span><span style="color:#D4D4D4;">] === </span><span style="color:#CE9178;">&#39;object&#39;</span><span style="color:#D4D4D4;"> ? </span><span style="color:#DCDCAA;">deepAssign</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">obj1</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">key</span><span style="color:#D4D4D4;">], </span><span style="color:#9CDCFE;">obj2</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">key</span><span style="color:#D4D4D4;">]) : </span><span style="color:#9CDCFE;">obj2</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">key</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  }</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#9CDCFE;"> obj1</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">// 不限参数数量</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> deepAssign</span><span style="color:#D4D4D4;">() {</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  var</span><span style="color:#9CDCFE;"> args</span><span style="color:#D4D4D4;"> = [...</span><span style="color:#569CD6;">arguments</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#9CDCFE;"> args</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">reduce</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">deepClone</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">args</span><span style="color:#D4D4D4;">[</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">])</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  function</span><span style="color:#DCDCAA;"> deepClone</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">total</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">current</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">    if</span><span style="color:#D4D4D4;"> (!</span><span style="color:#9CDCFE;">total</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">      total</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">Array</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">isArray</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">current</span><span style="color:#D4D4D4;">) ? [] : {}</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    }</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">    for</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">key</span><span style="color:#569CD6;"> in</span><span style="color:#9CDCFE;"> current</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">      total</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">key</span><span style="color:#D4D4D4;">] = </span><span style="color:#569CD6;">typeof</span><span style="color:#9CDCFE;"> current</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">key</span><span style="color:#D4D4D4;">] === </span><span style="color:#CE9178;">&#39;object&#39;</span><span style="color:#D4D4D4;"> ? </span><span style="color:#DCDCAA;">deepClone</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">total</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">key</span><span style="color:#D4D4D4;">], </span><span style="color:#9CDCFE;">current</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">key</span><span style="color:#D4D4D4;">]) : </span><span style="color:#9CDCFE;">current</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">key</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    }</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">    return</span><span style="color:#9CDCFE;"> total</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="√13、数组随机排序" tabindex="-1"><a class="header-anchor" href="#√13、数组随机排序"><span>√13、数组随机排序</span></a></h3><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> randomArr</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  arr</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">sort</span><span style="color:#D4D4D4;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">    return</span><span style="color:#9CDCFE;"> Math</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">random</span><span style="color:#D4D4D4;">() &gt; </span><span style="color:#B5CEA8;">0.5</span><span style="color:#D4D4D4;"> ? -</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;"> : </span><span style="color:#B5CEA8;">1</span><span style="color:#6A9955;">    // Math.random() - 0.5 </span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  })</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#9CDCFE;"> arr</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">var</span><span style="color:#9CDCFE;"> arr</span><span style="color:#D4D4D4;"> = [</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">4</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">5</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">6</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">randomArr</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">)</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="√14、防抖" tabindex="-1"><a class="header-anchor" href="#√14、防抖"><span>√14、防抖</span></a></h3><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> debounce</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">fn</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">wait</span><span style="color:#D4D4D4;"> = </span><span style="color:#B5CEA8;">100</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  let</span><span style="color:#9CDCFE;"> timer</span><span style="color:#D4D4D4;"> = </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">;</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#569CD6;"> function</span><span style="color:#D4D4D4;">(...</span><span style="color:#9CDCFE;">args</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">    clearTimeout</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">timer</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">    timer</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">setTimeout</span><span style="color:#D4D4D4;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">      fn</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">apply</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">args</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    }, </span><span style="color:#9CDCFE;">wait</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="√15、节流" tabindex="-1"><a class="header-anchor" href="#√15、节流"><span>√15、节流</span></a></h3><p>函数的节流和函数的去抖都是通过减少实际逻辑处理过程的执行来提高事件处理函数运行性能的手段，并没有实质上减少事件的触发次数</p><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> throttle</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">fn</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">duration</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  var</span><span style="color:#9CDCFE;"> begin</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">new</span><span style="color:#DCDCAA;"> Date</span><span style="color:#D4D4D4;">()</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#569CD6;"> function</span><span style="color:#D4D4D4;">(...</span><span style="color:#9CDCFE;">args</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">    var</span><span style="color:#9CDCFE;"> current</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">new</span><span style="color:#DCDCAA;"> Date</span><span style="color:#D4D4D4;">()</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">    if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">current</span><span style="color:#D4D4D4;"> - </span><span style="color:#9CDCFE;">begin</span><span style="color:#D4D4D4;"> &gt;= </span><span style="color:#9CDCFE;">duration</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">      fn</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">apply</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">args</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">      begin</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">current</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> throttle</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">fn</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">delay</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  let</span><span style="color:#9CDCFE;"> flag</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">true</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#D4D4D4;"> (...</span><span style="color:#9CDCFE;">args</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">    if</span><span style="color:#D4D4D4;"> (!</span><span style="color:#9CDCFE;">flag</span><span style="color:#D4D4D4;">) </span><span style="color:#C586C0;">return</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">    flag</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">false</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">    setTimeout</span><span style="color:#D4D4D4;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">      fn</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">call</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">, ...</span><span style="color:#9CDCFE;">args</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">      flag</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">true</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    }, </span><span style="color:#9CDCFE;">delay</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="√16、随机数" tabindex="-1"><a class="header-anchor" href="#√16、随机数"><span>√16、随机数</span></a></h3><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> randomNum</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">min</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">max</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  let</span><span style="color:#9CDCFE;"> choice</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">max</span><span style="color:#D4D4D4;"> - </span><span style="color:#9CDCFE;">min</span><span style="color:#D4D4D4;"> + </span><span style="color:#B5CEA8;">1</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#9CDCFE;"> Math</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">floor</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">Math</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">random</span><span style="color:#D4D4D4;">() * </span><span style="color:#9CDCFE;">choice</span><span style="color:#D4D4D4;"> + </span><span style="color:#9CDCFE;">min</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="√17、随机字符串" tabindex="-1"><a class="header-anchor" href="#√17、随机字符串"><span>√17、随机字符串</span></a></h3><p>toString(36)将数值转换成36进制，包含了0-9和a-z的所有字符</p><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> randomStr</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">len</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  let</span><span style="color:#9CDCFE;"> str</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&#39;&#39;</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  while</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">str</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">length</span><span style="color:#D4D4D4;"> &lt; </span><span style="color:#9CDCFE;">len</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">    str</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">str</span><span style="color:#D4D4D4;"> + </span><span style="color:#9CDCFE;">Math</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">random</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">toString</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">36</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">slice</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  }</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#9CDCFE;"> str</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">slice</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">len</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="√18、斐波那契数列" tabindex="-1"><a class="header-anchor" href="#√18、斐波那契数列"><span>√18、斐波那契数列</span></a></h3><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> fibonacci</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">n</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">n</span><span style="color:#D4D4D4;"> == </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;"> || </span><span style="color:#9CDCFE;">n</span><span style="color:#D4D4D4;"> == </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">) </span><span style="color:#C586C0;">return</span><span style="color:#9CDCFE;"> n</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#DCDCAA;"> fibonacci</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">n</span><span style="color:#D4D4D4;">-</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">) + </span><span style="color:#DCDCAA;">fibonacci</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">n</span><span style="color:#D4D4D4;">-</span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> fibonacci</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">n</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  let</span><span style="color:#9CDCFE;"> arr</span><span style="color:#D4D4D4;"> = [</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  for</span><span style="color:#D4D4D4;"> (</span><span style="color:#569CD6;">let</span><span style="color:#9CDCFE;"> i</span><span style="color:#D4D4D4;"> = </span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">; </span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;"> &lt; </span><span style="color:#9CDCFE;">n</span><span style="color:#D4D4D4;">; </span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">++) {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">    arr</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">] = </span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">-</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">] + </span><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">-</span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  }</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#9CDCFE;"> arr</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">n</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_19、继承" tabindex="-1"><a class="header-anchor" href="#_19、继承"><span>19、继承</span></a></h3><h4 id="原型链继承" tabindex="-1"><a class="header-anchor" href="#原型链继承"><span>原型链继承</span></a></h4><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> Person</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">name</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"><span style="color:#4EC9B0;">Person</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">prototype</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getName</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;">() {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#569CD6;"> this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">name</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> Teacher</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">job</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">name</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">job</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">job</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"><span style="color:#4EC9B0;">Teacher</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">prototype</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">new</span><span style="color:#DCDCAA;"> Person</span><span style="color:#D4D4D4;">()         </span><span style="color:#6A9955;">// Teacher的原型指向Person的实例，实现继承</span></span></span>
<span class="line"><span class="line"><span style="color:#4EC9B0;">Teacher</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">prototype</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">constructor</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">Teacher</span><span style="color:#6A9955;">  // 解决原型链继承后对象类型改变（变成了Person）的问题，Teacher原型的构造函数指向Teacher</span></span></span>
<span class="line"><span class="line"><span style="color:#4EC9B0;">Teacher</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">prototype</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getJob</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;">() {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#569CD6;"> this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">job</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">var</span><span style="color:#9CDCFE;"> teacher</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">new</span><span style="color:#DCDCAA;"> Teacher</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;cc&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;teacher&#39;</span><span style="color:#D4D4D4;">);</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">teacher</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getName</span><span style="color:#D4D4D4;">());</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">teacher</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getJob</span><span style="color:#D4D4D4;">());</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="借用构造函数继承" tabindex="-1"><a class="header-anchor" href="#借用构造函数继承"><span>借用构造函数继承</span></a></h4><p>（解决包含引用类型值的原型属性会被所有实例共享的问题），但是自身也有问题</p><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> Person</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">name</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">family</span><span style="color:#D4D4D4;"> = [</span><span style="color:#CE9178;">&#39;mother&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;father&#39;</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"><span style="color:#4EC9B0;">Person</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">prototype</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getName</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;">() {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#569CD6;"> this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">name</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"><span style="color:#4EC9B0;">Person</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">prototype</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getFamily</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;">() {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#569CD6;"> this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">family</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> Teacher</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">job</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">name</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">job</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">job</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  Person</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">call</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"><span style="color:#4EC9B0;">Teacher</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">prototype</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getJob</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;">() {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#569CD6;"> this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">job</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">var</span><span style="color:#9CDCFE;"> teacher1</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">new</span><span style="color:#DCDCAA;"> Teacher</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;cc&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;teacher&#39;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">var</span><span style="color:#9CDCFE;"> teacher2</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">new</span><span style="color:#DCDCAA;"> Teacher</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;ss&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;alsoTeacher&#39;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">teacher1</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">family</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">push</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;son&#39;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">teacher1</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">family</span><span style="color:#D4D4D4;">);       </span><span style="color:#6A9955;">// [&quot;mother&quot;, &quot;father&quot;, &quot;son&quot;]</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">teacher2</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">family</span><span style="color:#D4D4D4;">);       </span><span style="color:#6A9955;">// [&quot;mother&quot;, &quot;father&quot;]  (如果是原型链继承的话 值和teacher1.family相同)</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">teacher1</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getFamily</span><span style="color:#D4D4D4;">());  </span><span style="color:#6A9955;">// 报错：teacher1.getFamily is not a function  </span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">teacher2</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getFamily</span><span style="color:#D4D4D4;">());  </span><span style="color:#6A9955;">// 没用到原型，只能继承父类的实例属性和方法，不能继承原型属性/方法</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="组合继承" tabindex="-1"><a class="header-anchor" href="#组合继承"><span>组合继承</span></a></h4><p>（对原型链继承和构造函数继承进行组合）(常用)</p><p>问题：调用了两次父类构造函数（耗内存）</p><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> Person</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">name</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">family</span><span style="color:#D4D4D4;"> = [</span><span style="color:#CE9178;">&#39;mother&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;father&#39;</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"><span style="color:#4EC9B0;">Person</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">prototype</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getName</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;">() {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#569CD6;"> this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">name</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"><span style="color:#4EC9B0;">Person</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">prototype</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getFamily</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;">() {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#569CD6;"> this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">family</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> Teacher</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">job</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">name</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">job</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">job</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  Person</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">call</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;">)               </span><span style="color:#6A9955;">// 继承属性</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"><span style="color:#4EC9B0;">Teacher</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">prototype</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">new</span><span style="color:#DCDCAA;"> Person</span><span style="color:#D4D4D4;">()        </span><span style="color:#6A9955;">// 继承方法</span></span></span>
<span class="line"><span class="line"><span style="color:#4EC9B0;">Teacher</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">prototype</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">constructor</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">Teacher</span></span></span>
<span class="line"><span class="line"><span style="color:#4EC9B0;">Teacher</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">prototype</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getJob</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;">() {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#569CD6;"> this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">job</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">var</span><span style="color:#9CDCFE;"> teacher1</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">new</span><span style="color:#DCDCAA;"> Teacher</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;cc&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;teacher&#39;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">var</span><span style="color:#9CDCFE;"> teacher2</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">new</span><span style="color:#DCDCAA;"> Teacher</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;ss&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;alsoTeacher&#39;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">teacher1</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">family</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">push</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;son&#39;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">teacher1</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">family</span><span style="color:#D4D4D4;">);         </span><span style="color:#6A9955;">// [&quot;mother&quot;, &quot;father&quot;, &quot;son&quot;]</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">teacher2</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">family</span><span style="color:#D4D4D4;">);         </span><span style="color:#6A9955;">// [&quot;mother&quot;, &quot;father&quot;]</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">teacher1</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getFamily</span><span style="color:#D4D4D4;">());    </span><span style="color:#6A9955;">// [&quot;mother&quot;, &quot;father&quot;, &quot;son&quot;]</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">teacher2</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getFamily</span><span style="color:#D4D4D4;">());    </span><span style="color:#6A9955;">// [&quot;mother&quot;, &quot;father&quot;]</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="原型式继承" tabindex="-1"><a class="header-anchor" href="#原型式继承"><span>原型式继承</span></a></h4><p>（用函数包装，原型链继承实例对象，返回函数调用）</p><p>这个函数就变成了一个可以随意增添属性的实例或对象。Object.create()就是这个原理。</p><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> createObj</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">obj</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  function</span><span style="color:#DCDCAA;"> Fn</span><span style="color:#D4D4D4;">() {}</span></span></span>
<span class="line"><span class="line"><span style="color:#4EC9B0;">  Fn</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">prototype</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">obj</span></span></span>
<span class="line"><span class="line"><span style="color:#4EC9B0;">  Fn</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">prototype</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">constructor</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">Fn</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#569CD6;"> new</span><span style="color:#DCDCAA;"> Fn</span><span style="color:#D4D4D4;">()</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">var</span><span style="color:#9CDCFE;"> person</span><span style="color:#D4D4D4;"> = {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  name:</span><span style="color:#CE9178;"> &#39;cc&#39;</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  family:</span><span style="color:#D4D4D4;"> [</span><span style="color:#CE9178;">&#39;mother&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;father&#39;</span><span style="color:#D4D4D4;">],</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">  getName</span><span style="color:#D4D4D4;">() {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">    return</span><span style="color:#569CD6;"> this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">name</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  },</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">  getFamily</span><span style="color:#D4D4D4;">() {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">    return</span><span style="color:#569CD6;"> this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">family</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">var</span><span style="color:#9CDCFE;"> teacher1</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">createObj</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">person</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">var</span><span style="color:#9CDCFE;"> teacher2</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">createObj</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">person</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">teacher2</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&#39;ss&#39;</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">teacher1</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">family</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">push</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;son&#39;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">teacher1</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getName</span><span style="color:#D4D4D4;">());    </span><span style="color:#6A9955;">// cc</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">teacher2</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getName</span><span style="color:#D4D4D4;">());    </span><span style="color:#6A9955;">// ss</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">teacher1</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getFamily</span><span style="color:#D4D4D4;">());  </span><span style="color:#6A9955;">// [&quot;mother&quot;, &quot;father&quot;, &quot;son&quot;]</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">teacher2</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getFamily</span><span style="color:#D4D4D4;">());  </span><span style="color:#6A9955;">// [&quot;mother&quot;, &quot;father&quot;, &quot;son&quot;]  和原型链继承有一样的问题，引用类型的原型属性被共享了</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="寄生式继承" tabindex="-1"><a class="header-anchor" href="#寄生式继承"><span>寄生式继承</span></a></h4><p>在原型式继承的基础上，通过调用函数创建一个新对象</p><p>可以给这个对象新增属性和方法（增强对象）</p><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> createObj</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">obj</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  function</span><span style="color:#DCDCAA;"> Fn</span><span style="color:#D4D4D4;">() {}</span></span></span>
<span class="line"><span class="line"><span style="color:#4EC9B0;">  Fn</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">prototype</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">obj</span></span></span>
<span class="line"><span class="line"><span style="color:#4EC9B0;">  Fn</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">prototype</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">constructor</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">Fn</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#569CD6;"> new</span><span style="color:#DCDCAA;"> Fn</span><span style="color:#D4D4D4;">()</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> createPerson</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">person</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  var</span><span style="color:#9CDCFE;"> newPerson</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">createObj</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">person</span><span style="color:#D4D4D4;">)       </span><span style="color:#6A9955;">// 通过调用函数创建一个新对象</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  newPerson</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getName</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;">() {        </span><span style="color:#6A9955;">// 可以给这个对象新增属性和方法（增强对象）</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">    return</span><span style="color:#569CD6;"> this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">name</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  }</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  newPerson</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getFamily</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;">() {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">    return</span><span style="color:#569CD6;"> this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">family</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  }</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#9CDCFE;"> newPerson</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">var</span><span style="color:#9CDCFE;"> person</span><span style="color:#D4D4D4;"> = {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  name:</span><span style="color:#CE9178;"> &#39;cc&#39;</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  family:</span><span style="color:#D4D4D4;"> [</span><span style="color:#CE9178;">&#39;mother&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;father&#39;</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">var</span><span style="color:#9CDCFE;"> teacher1</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">createPerson</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">person</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">var</span><span style="color:#9CDCFE;"> teacher2</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">createPerson</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">person</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">teacher2</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&#39;ss&#39;</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">teacher1</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">family</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">push</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;son&#39;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">teacher1</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getName</span><span style="color:#D4D4D4;">());    </span><span style="color:#6A9955;">// cc</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">teacher2</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getName</span><span style="color:#D4D4D4;">());    </span><span style="color:#6A9955;">// ss</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">teacher1</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getFamily</span><span style="color:#D4D4D4;">());  </span><span style="color:#6A9955;">// [&quot;mother&quot;, &quot;father&quot;, &quot;son&quot;]</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">teacher2</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getFamily</span><span style="color:#D4D4D4;">());  </span><span style="color:#6A9955;">// [&quot;mother&quot;, &quot;father&quot;, &quot;son&quot;]  和原型链继承有一样的问题，引用类型的原型属性被共享了</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="寄生组合式继承" tabindex="-1"><a class="header-anchor" href="#寄生组合式继承"><span>寄生组合式继承</span></a></h4><p>（解决组合继承中调用两次超类型构造函数的问题）（常用）</p><p>核心：通过借用构造函数来继承属性，通过原型链的混成形式来继承方法。</p><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> Person</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">name</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"><span style="color:#4EC9B0;">Person</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">prototype</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getName</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;">() {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#569CD6;"> this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">name</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> Teacher</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">job</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">name</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">job</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">job</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  Person</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">call</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;">)               </span><span style="color:#6A9955;">// 继承属性</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> createObj</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">obj</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  function</span><span style="color:#DCDCAA;"> Fn</span><span style="color:#D4D4D4;">() {}</span></span></span>
<span class="line"><span class="line"><span style="color:#4EC9B0;">  Fn</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">prototype</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">obj</span></span></span>
<span class="line"><span class="line"><span style="color:#4EC9B0;">  Fn</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">prototype</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">constructor</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">Fn</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#569CD6;"> new</span><span style="color:#DCDCAA;"> Fn</span><span style="color:#D4D4D4;">()</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">// 继承方法</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> inheritPrototype</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">parent</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">child</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#4EC9B0;">  child</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">prototype</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">createObj</span><span style="color:#D4D4D4;">(</span><span style="color:#4EC9B0;">parent</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">prototype</span><span style="color:#D4D4D4;">)   </span><span style="color:#6A9955;">// 复制父类原型</span></span></span>
<span class="line"><span class="line"><span style="color:#4EC9B0;">  child</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">prototype</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">constructor</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">child</span><span style="color:#6A9955;">             // 构造函数指回Teacher</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">// 复制父类原型，用该函数替换组合继承中为子类型原型赋值的语句</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">inheritPrototype</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">Person</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">Teacher</span><span style="color:#D4D4D4;">);</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">// Teacher.prototype = new Person();</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">// Teacher.prototype.constructor = Teacher;</span></span></span>
<span class="line"><span class="line"><span style="color:#4EC9B0;">Teacher</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">prototype</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getJob</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;">() {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#569CD6;"> this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">job</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">var</span><span style="color:#9CDCFE;"> teacher</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">new</span><span style="color:#DCDCAA;"> Teacher</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;cc&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;teacher&#39;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">teacher</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getName</span><span style="color:#D4D4D4;">());</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">teacher</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getJob</span><span style="color:#D4D4D4;">());</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="class继承" tabindex="-1"><a class="header-anchor" href="#class继承"><span>class继承</span></a></h4><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#569CD6;">class</span><span style="color:#4EC9B0;"> Person</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  constructor</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">    this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">name</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  }</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">  getName</span><span style="color:#D4D4D4;">() {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">    return</span><span style="color:#569CD6;"> this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">name</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">class</span><span style="color:#4EC9B0;"> Teacher</span><span style="color:#569CD6;"> extends</span><span style="color:#4EC9B0;"> Person</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  constructor</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">job</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">    super</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">    this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">job</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">job</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  }</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">  getJob</span><span style="color:#D4D4D4;">() {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">    return</span><span style="color:#569CD6;"> this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">job</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">var</span><span style="color:#9CDCFE;"> teacher</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">new</span><span style="color:#DCDCAA;"> Teacher</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;cc&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;teacher&#39;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">teacher</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getName</span><span style="color:#D4D4D4;">());</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">teacher</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getJob</span><span style="color:#D4D4D4;">());</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_20、事件总线-发布订阅模式" tabindex="-1"><a class="header-anchor" href="#_20、事件总线-发布订阅模式"><span>20、事件总线（发布订阅模式）</span></a></h3><p>实现思路</p><p>1、创建一个对象</p><p>2、在该对象上创建一个缓存列表（调度中心）</p><p>3、on 方法用来把函数 fn 都加到缓存列表中（订阅者注册事件到调度中心）</p><p>4、emit 方法取到 arguments 里第一个当做 event，根据 event 值去执行对应缓存列表中的函数（发布者发布事件到调度中心，调度中心处理代码）</p><p>5、off 方法可以根据 event 值取消订阅（取消订阅）</p><p>6、once 方法只监听一次，调用完毕后删除缓存函数（订阅一次）</p><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#569CD6;">class</span><span style="color:#4EC9B0;"> EventEmitter</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  constructor</span><span style="color:#D4D4D4;">() {</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">    this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">cache</span><span style="color:#D4D4D4;"> = {}</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  }</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">  // 订阅</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">  on</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">fn</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">    if</span><span style="color:#D4D4D4;"> (</span><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">cache</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;">]) {</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">      this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">cache</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;">].</span><span style="color:#DCDCAA;">push</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">fn</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    } </span><span style="color:#C586C0;">else</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">      this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">cache</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;">] = [</span><span style="color:#9CDCFE;">fn</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  }</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">  // 取消订阅</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">  off</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">fn</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">    let</span><span style="color:#9CDCFE;"> tasks</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">cache</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">    if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">tasks</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">      const</span><span style="color:#4FC1FF;"> index</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">tasks</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">findIndex</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">f</span><span style="color:#569CD6;"> =&gt;</span><span style="color:#9CDCFE;"> f</span><span style="color:#D4D4D4;"> === </span><span style="color:#9CDCFE;">fn</span><span style="color:#D4D4D4;"> || </span><span style="color:#9CDCFE;">f</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">callback</span><span style="color:#D4D4D4;"> === </span><span style="color:#9CDCFE;">fn</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">      if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">index</span><span style="color:#D4D4D4;"> &gt;= </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">        tasks</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">splice</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">index</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">      }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  }</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">  // 发布（once默认为false，为true时表示只订阅一次）</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">  emit</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">once</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">false</span><span style="color:#D4D4D4;">, ...</span><span style="color:#9CDCFE;">args</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">    if</span><span style="color:#D4D4D4;"> (</span><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">cache</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;">]) {</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">      // 创建副本，如果回调函数内继续注册相同事件，会造成死循环</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">      let</span><span style="color:#9CDCFE;"> tasks</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">cache</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;">].</span><span style="color:#DCDCAA;">slice</span><span style="color:#D4D4D4;">()</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">      for</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">let</span><span style="color:#9CDCFE;"> fn</span><span style="color:#569CD6;"> of</span><span style="color:#9CDCFE;"> tasks</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">        fn</span><span style="color:#D4D4D4;">(...</span><span style="color:#9CDCFE;">args</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">      }</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">      if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">once</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">        delete</span><span style="color:#569CD6;"> this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">cache</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;">]</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">      }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">// 测试</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">let</span><span style="color:#9CDCFE;"> eventBus</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">new</span><span style="color:#DCDCAA;"> EventEmitter</span><span style="color:#D4D4D4;">()</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">let</span><span style="color:#DCDCAA;"> fn1</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;name&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">let</span><span style="color:#DCDCAA;"> fn2</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">age</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;age&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">age</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">let</span><span style="color:#DCDCAA;"> fn3</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">age</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;my age is&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">age</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">eventBus</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">on</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;event1&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">fn1</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">eventBus</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">on</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;event2&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">fn2</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">eventBus</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">on</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;event2&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">fn3</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">eventBus</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">emit</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;event1&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#569CD6;">false</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;ccc&#39;</span><span style="color:#D4D4D4;">)	</span><span style="color:#6A9955;">// name ccc</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">eventBus</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">emit</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;event2&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#569CD6;">false</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">24</span><span style="color:#D4D4D4;">)		</span><span style="color:#6A9955;">// age 24  my age is 24</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_21、字符串模板" tabindex="-1"><a class="header-anchor" href="#_21、字符串模板"><span>21、字符串模板</span></a></h3><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> render</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">template</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">data</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  const</span><span style="color:#4FC1FF;"> reg</span><span style="color:#D4D4D4;"> =</span><span style="color:#D16969;"> /</span><span style="color:#D7BA7D;">\\{\\{</span><span style="color:#CE9178;">(</span><span style="color:#D16969;">\\w</span><span style="color:#D7BA7D;">+</span><span style="color:#CE9178;">)</span><span style="color:#D7BA7D;">\\}\\}</span><span style="color:#D16969;">/</span><span style="color:#D4D4D4;">; </span><span style="color:#6A9955;">// 模板字符串正则</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">reg</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">test</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">template</span><span style="color:#D4D4D4;">)) { </span><span style="color:#6A9955;">// 判断模板里是否有模板字符串</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">      const</span><span style="color:#4FC1FF;"> name</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">reg</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">exec</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">template</span><span style="color:#D4D4D4;">)[</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">]; </span><span style="color:#6A9955;">// 查找当前模板里第一个模板字符串的字段</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">      template</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">template</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">replace</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">reg</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">data</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;">]); </span><span style="color:#6A9955;">// 将第一个模板字符串渲染</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">      return</span><span style="color:#DCDCAA;"> render</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">template</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">data</span><span style="color:#D4D4D4;">); </span><span style="color:#6A9955;">// 递归的渲染并返回渲染后的结构</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  }</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#9CDCFE;"> template</span><span style="color:#D4D4D4;">; </span><span style="color:#6A9955;">// 如果模板没有模板字符串直接返回</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">let</span><span style="color:#9CDCFE;"> template</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&#39;我是{{name}}，年龄{{age}}，性别{{sex}}&#39;</span><span style="color:#D4D4D4;">;</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">let</span><span style="color:#9CDCFE;"> person</span><span style="color:#D4D4D4;"> = {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">    name:</span><span style="color:#CE9178;"> &#39;ccc&#39;</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">    age:</span><span style="color:#B5CEA8;"> 12</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">render</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">template</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">person</span><span style="color:#D4D4D4;">); </span><span style="color:#6A9955;">// 我是ccc，年龄12，性别undefined</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_22、promise" tabindex="-1"><a class="header-anchor" href="#_22、promise"><span>22、Promise</span></a></h3><h4 id="promise的使用" tabindex="-1"><a class="header-anchor" href="#promise的使用"><span>promise的使用</span></a></h4><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> loadImg</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">src</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  const</span><span style="color:#4FC1FF;"> promise</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">new</span><span style="color:#4EC9B0;"> Promise</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">resolve</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">reject</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">      var</span><span style="color:#9CDCFE;"> img</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">document</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">createElement</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;img&#39;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">      img</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">onload</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;">() {</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">          resolve</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">img</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">      }</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">      img</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">onerror</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;">() {</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">          reject</span><span style="color:#D4D4D4;">()</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">      }</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">      img</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">src</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">src</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  })</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#9CDCFE;"> promise</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">var</span><span style="color:#9CDCFE;"> src</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&#39;xxx.png&#39;</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">var</span><span style="color:#9CDCFE;"> result</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">loadImg</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">src</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">result</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">then</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">img</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">img</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">width</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}, </span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;">() {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;failed&#39;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">})</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="promise的实现" tabindex="-1"><a class="header-anchor" href="#promise的实现"><span>promise的实现</span></a></h4><p>Promise 实现梳理：</p><p>链式调用</p><p>错误捕获（冒泡）</p><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> PENDING</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&#39;PENDING&#39;</span><span style="color:#D4D4D4;">;      </span><span style="color:#6A9955;">// 进行中</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> FULFILLED</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&#39;FULFILLED&#39;</span><span style="color:#D4D4D4;">;  </span><span style="color:#6A9955;">// 已成功</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> REJECTED</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&#39;REJECTED&#39;</span><span style="color:#D4D4D4;">;    </span><span style="color:#6A9955;">// 已失败</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">class</span><span style="color:#4EC9B0;"> Promise</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  constructor</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">exector</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">    // 初始化状态</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">    this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">status</span><span style="color:#D4D4D4;"> = </span><span style="color:#4FC1FF;">PENDING</span><span style="color:#D4D4D4;">;</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">    // 将成功、失败结果放在this上，便于then、catch访问</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">    this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">value</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">undefined</span><span style="color:#D4D4D4;">;</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">    this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">reason</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">undefined</span><span style="color:#D4D4D4;">;</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">    // 成功态回调函数队列</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">    this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">onFulfilledCallbacks</span><span style="color:#D4D4D4;"> = [];</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">    // 失败态回调函数队列</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">    this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">onRejectedCallbacks</span><span style="color:#D4D4D4;"> = [];</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">    const</span><span style="color:#DCDCAA;"> resolve</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">value</span><span style="color:#569CD6;"> =&gt;</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">      // 只有进行中状态才能更改状态</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">      if</span><span style="color:#D4D4D4;"> (</span><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">status</span><span style="color:#D4D4D4;"> === </span><span style="color:#4FC1FF;">PENDING</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">        this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">status</span><span style="color:#D4D4D4;"> = </span><span style="color:#4FC1FF;">FULFILLED</span><span style="color:#D4D4D4;">;</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">        this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">value</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">value</span><span style="color:#D4D4D4;">;</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">        // 成功态函数依次执行</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">        this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">onFulfilledCallbacks</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">forEach</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">fn</span><span style="color:#569CD6;"> =&gt;</span><span style="color:#DCDCAA;"> fn</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">value</span><span style="color:#D4D4D4;">));</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">      }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    }</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">    const</span><span style="color:#DCDCAA;"> reject</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">reason</span><span style="color:#569CD6;"> =&gt;</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">      // 只有进行中状态才能更改状态</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">      if</span><span style="color:#D4D4D4;"> (</span><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">status</span><span style="color:#D4D4D4;"> === </span><span style="color:#4FC1FF;">PENDING</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">        this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">status</span><span style="color:#D4D4D4;"> = </span><span style="color:#4FC1FF;">REJECTED</span><span style="color:#D4D4D4;">;</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">        this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">reason</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">reason</span><span style="color:#D4D4D4;">;</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">        // 失败态函数依次执行</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">        this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">onRejectedCallbacks</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">forEach</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">fn</span><span style="color:#569CD6;"> =&gt;</span><span style="color:#DCDCAA;"> fn</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">reason</span><span style="color:#D4D4D4;">))</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">      }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    }</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">    try</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">      // 立即执行executor</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">      // 把内部的resolve和reject传入executor，用户可调用resolve和reject</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">      exector</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">resolve</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">reject</span><span style="color:#D4D4D4;">);</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    } </span><span style="color:#C586C0;">catch</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">e</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">      // executor执行出错，将错误内容reject抛出去</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">      reject</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">e</span><span style="color:#D4D4D4;">);</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  }</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">  then</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">onFulfilled</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">onRejected</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">    onFulfilled</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">typeof</span><span style="color:#9CDCFE;"> onFulfilled</span><span style="color:#D4D4D4;"> === </span><span style="color:#CE9178;">&#39;function&#39;</span><span style="color:#D4D4D4;"> ? </span><span style="color:#9CDCFE;">onFulfilled</span><span style="color:#D4D4D4;"> : </span><span style="color:#9CDCFE;">value</span><span style="color:#569CD6;"> =&gt;</span><span style="color:#9CDCFE;"> value</span><span style="color:#D4D4D4;">;</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">    onRejected</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">typeof</span><span style="color:#9CDCFE;"> onRejected</span><span style="color:#D4D4D4;"> === </span><span style="color:#CE9178;">&#39;function&#39;</span><span style="color:#D4D4D4;">? </span><span style="color:#9CDCFE;">onRejected</span><span style="color:#D4D4D4;">:</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">      reason</span><span style="color:#569CD6;"> =&gt;</span><span style="color:#D4D4D4;"> { </span><span style="color:#C586C0;">throw</span><span style="color:#569CD6;"> new</span><span style="color:#DCDCAA;"> Error</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">reason</span><span style="color:#569CD6;"> instanceof</span><span style="color:#4EC9B0;"> Error</span><span style="color:#D4D4D4;"> ? </span><span style="color:#9CDCFE;">reason</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">message</span><span style="color:#D4D4D4;">:</span><span style="color:#9CDCFE;">reason</span><span style="color:#D4D4D4;">) }</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">    // 保存this</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">    const</span><span style="color:#4FC1FF;"> self</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">;</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">    return</span><span style="color:#569CD6;"> new</span><span style="color:#4EC9B0;"> Promise</span><span style="color:#D4D4D4;">((</span><span style="color:#9CDCFE;">resolve</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">reject</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">      if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">self</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">status</span><span style="color:#D4D4D4;"> === </span><span style="color:#4FC1FF;">PENDING</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">        self</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">onFulfilledCallbacks</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">push</span><span style="color:#D4D4D4;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">          // try捕获错误</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">          try</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">            // 模拟微任务</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">            setTimeout</span><span style="color:#D4D4D4;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">              const</span><span style="color:#4FC1FF;"> result</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">onFulfilled</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">self</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">value</span><span style="color:#D4D4D4;">);</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">              // 分两种情况：</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">              // 1. 回调函数返回值是Promise，执行then操作</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">              // 2. 如果不是Promise，调用新Promise的resolve函数</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">              result</span><span style="color:#569CD6;"> instanceof</span><span style="color:#4EC9B0;"> Promise</span><span style="color:#D4D4D4;"> ? </span><span style="color:#9CDCFE;">result</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">then</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">resolve</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">reject</span><span style="color:#D4D4D4;">) :</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">              resolve</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">result</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">            })</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">          } </span><span style="color:#C586C0;">catch</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">e</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">            reject</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">e</span><span style="color:#D4D4D4;">);</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">          }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">        });</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">        self</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">onRejectedCallbacks</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">push</span><span style="color:#D4D4D4;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">          // 以下同理</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">          try</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">            setTimeout</span><span style="color:#D4D4D4;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">              const</span><span style="color:#4FC1FF;"> result</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">onRejected</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">self</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">reason</span><span style="color:#D4D4D4;">);</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">              // 不同点：此时是reject</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">              result</span><span style="color:#569CD6;"> instanceof</span><span style="color:#4EC9B0;"> Promise</span><span style="color:#D4D4D4;"> ? </span><span style="color:#9CDCFE;">result</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">then</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">resolve</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">reject</span><span style="color:#D4D4D4;">) : </span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">              reject</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">result</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">            })</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">          } </span><span style="color:#C586C0;">catch</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">e</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">            reject</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">e</span><span style="color:#D4D4D4;">);</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">          }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">        })</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">      } </span><span style="color:#C586C0;">else</span><span style="color:#C586C0;"> if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">self</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">status</span><span style="color:#D4D4D4;"> === </span><span style="color:#4FC1FF;">FULFILLED</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">        try</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">          setTimeout</span><span style="color:#D4D4D4;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">            const</span><span style="color:#4FC1FF;"> result</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">onFulfilled</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">self</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">value</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">            result</span><span style="color:#569CD6;"> instanceof</span><span style="color:#4EC9B0;"> Promise</span><span style="color:#D4D4D4;"> ? </span><span style="color:#9CDCFE;">result</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">then</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">resolve</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">reject</span><span style="color:#D4D4D4;">) : </span><span style="color:#DCDCAA;">resolve</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">result</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">          });</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">        } </span><span style="color:#C586C0;">catch</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">e</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">          reject</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">e</span><span style="color:#D4D4D4;">);</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">        }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">      } </span><span style="color:#C586C0;">else</span><span style="color:#C586C0;"> if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">self</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">status</span><span style="color:#D4D4D4;"> === </span><span style="color:#4FC1FF;">REJECTED</span><span style="color:#D4D4D4;">){</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">        try</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">          setTimeout</span><span style="color:#D4D4D4;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">            const</span><span style="color:#4FC1FF;"> result</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">onRejected</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">self</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">reason</span><span style="color:#D4D4D4;">);</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">            result</span><span style="color:#569CD6;"> instanceof</span><span style="color:#4EC9B0;"> Promise</span><span style="color:#D4D4D4;"> ? </span><span style="color:#9CDCFE;">result</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">then</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">resolve</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">reject</span><span style="color:#D4D4D4;">) : </span><span style="color:#DCDCAA;">reject</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">result</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">          })</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">        } </span><span style="color:#C586C0;">catch</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">e</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">          reject</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">e</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">        }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">      }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    });</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  }</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">  catch</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">onRejected</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">    return</span><span style="color:#569CD6;"> this</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">then</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">null</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">onRejected</span><span style="color:#D4D4D4;">);</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  }</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  static</span><span style="color:#DCDCAA;"> resolve</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">value</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">    if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">value</span><span style="color:#569CD6;"> instanceof</span><span style="color:#4EC9B0;"> Promise</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">      // 如果是Promise实例，直接返回</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">      return</span><span style="color:#9CDCFE;"> value</span><span style="color:#D4D4D4;">;</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    } </span><span style="color:#C586C0;">else</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">      // 如果不是Promise实例，返回一个新的Promise对象，状态为FULFILLED</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">      return</span><span style="color:#569CD6;"> new</span><span style="color:#4EC9B0;"> Promise</span><span style="color:#D4D4D4;">((</span><span style="color:#9CDCFE;">resolve</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">reject</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#DCDCAA;"> resolve</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">value</span><span style="color:#D4D4D4;">));</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  }</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  static</span><span style="color:#DCDCAA;"> reject</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">reason</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">    return</span><span style="color:#569CD6;"> new</span><span style="color:#4EC9B0;"> Promise</span><span style="color:#D4D4D4;">((</span><span style="color:#9CDCFE;">resolve</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">reject</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">      reject</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">reason</span><span style="color:#D4D4D4;">);</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    })</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#4EC9B0;">Promise</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">prototype</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">finally</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">callback</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  this</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">then</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">value</span><span style="color:#569CD6;"> =&gt;</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">    return</span><span style="color:#4EC9B0;"> Promise</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">resolve</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">callback</span><span style="color:#D4D4D4;">()).</span><span style="color:#DCDCAA;">then</span><span style="color:#D4D4D4;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">      return</span><span style="color:#9CDCFE;"> value</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    })</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  }, </span><span style="color:#9CDCFE;">error</span><span style="color:#569CD6;"> =&gt;</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">    return</span><span style="color:#4EC9B0;"> Promise</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">resolve</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">callback</span><span style="color:#D4D4D4;">()).</span><span style="color:#DCDCAA;">then</span><span style="color:#D4D4D4;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">      throw</span><span style="color:#9CDCFE;"> error</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    })</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  })</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="实现promise-resolve" tabindex="-1"><a class="header-anchor" href="#实现promise-resolve"><span>实现Promise.resolve</span></a></h4><p>静态方法梳理：</p><p>1、传参为一个 Promise，则直接返回它。</p><p>2、传参为一个 thenable 对象，返回的 Promise 会跟随这个对象，采用它的最终状态作为自己的状态。</p><p>3、其他情况，直接返回以该值为成功状态的 promise 对象。</p><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#4EC9B0;">Promise</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">resolve</span><span style="color:#D4D4D4;"> = (</span><span style="color:#9CDCFE;">param</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">param</span><span style="color:#569CD6;"> instanceof</span><span style="color:#4EC9B0;"> Promise</span><span style="color:#D4D4D4;">) </span><span style="color:#C586C0;">return</span><span style="color:#9CDCFE;"> param</span><span style="color:#6A9955;"> // 符合 1</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#569CD6;"> new</span><span style="color:#4EC9B0;"> Promise</span><span style="color:#D4D4D4;">((</span><span style="color:#9CDCFE;">resolve</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">reject</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">    if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">param</span><span style="color:#D4D4D4;"> &amp;&amp; </span><span style="color:#9CDCFE;">param</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">then</span><span style="color:#D4D4D4;"> &amp;&amp; </span><span style="color:#569CD6;">typeof</span><span style="color:#9CDCFE;"> param</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">then</span><span style="color:#D4D4D4;"> === </span><span style="color:#CE9178;">&#39;function&#39;</span><span style="color:#D4D4D4;">) { </span><span style="color:#6A9955;">// 符合 2</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">      // param 状态变为成功会调用resolve，将新 Promise 的状态变为成功，反之亦然</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">      param</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">then</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">resolve</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">reject</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    } </span><span style="color:#C586C0;">else</span><span style="color:#D4D4D4;"> { </span><span style="color:#6A9955;">// 符合 3</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">      resolve</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">param</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  })</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="实现promise-reject" tabindex="-1"><a class="header-anchor" href="#实现promise-reject"><span>实现Promise.reject</span></a></h4><p>冒泡捕获</p><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#4EC9B0;">Promise</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">reject</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">reason</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#569CD6;"> new</span><span style="color:#4EC9B0;"> Promise</span><span style="color:#D4D4D4;">((</span><span style="color:#9CDCFE;">resolve</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">reject</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">      reject</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">reason</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  })</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="实现promise-all" tabindex="-1"><a class="header-anchor" href="#实现promise-all"><span>实现promise.all</span></a></h4><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> promiseAll</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">promises</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#569CD6;"> new</span><span style="color:#4EC9B0;"> Promise</span><span style="color:#D4D4D4;">((</span><span style="color:#9CDCFE;">resolve</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">reject</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">    let</span><span style="color:#9CDCFE;"> resultCount</span><span style="color:#D4D4D4;"> = </span><span style="color:#B5CEA8;">0</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">    let</span><span style="color:#9CDCFE;"> results</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">new</span><span style="color:#DCDCAA;"> Array</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">promises</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">length</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">    for</span><span style="color:#D4D4D4;"> (</span><span style="color:#569CD6;">let</span><span style="color:#9CDCFE;"> i</span><span style="color:#D4D4D4;"> = </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">; </span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;"> &lt; </span><span style="color:#9CDCFE;">promises</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">length</span><span style="color:#D4D4D4;">; </span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">++) {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">      promises</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">].</span><span style="color:#DCDCAA;">then</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">value</span><span style="color:#569CD6;"> =&gt;</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">        resultCount</span><span style="color:#D4D4D4;">++</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">        results</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">] = </span><span style="color:#9CDCFE;">value</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">        if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">resultCount</span><span style="color:#D4D4D4;"> === </span><span style="color:#9CDCFE;">promises</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">length</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">          return</span><span style="color:#DCDCAA;"> resolve</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">results</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">        }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">      }, </span><span style="color:#9CDCFE;">error</span><span style="color:#569CD6;"> =&gt;</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">        reject</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">error</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">      })</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  })</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">let</span><span style="color:#9CDCFE;"> p1</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">new</span><span style="color:#4EC9B0;"> Promise</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">resolve</span><span style="color:#569CD6;"> =&gt;</span><span style="color:#DCDCAA;"> resolve</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;p1&#39;</span><span style="color:#D4D4D4;">))</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">let</span><span style="color:#9CDCFE;"> p2</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">new</span><span style="color:#4EC9B0;"> Promise</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">resolve</span><span style="color:#569CD6;"> =&gt;</span><span style="color:#DCDCAA;"> resolve</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;p2&#39;</span><span style="color:#D4D4D4;">))</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">let</span><span style="color:#9CDCFE;"> p3</span><span style="color:#D4D4D4;"> = </span><span style="color:#4EC9B0;">Promise</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">reject</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;p3 error&#39;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">promiseAll</span><span style="color:#D4D4D4;">([</span><span style="color:#9CDCFE;">p1</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">p2</span><span style="color:#D4D4D4;">]).</span><span style="color:#DCDCAA;">then</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">results</span><span style="color:#569CD6;"> =&gt;</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">results</span><span style="color:#D4D4D4;">)    </span><span style="color:#6A9955;">// [&#39;p1&#39;, &#39;p2&#39;]</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}).</span><span style="color:#DCDCAA;">catch</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">error</span><span style="color:#569CD6;"> =&gt;</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">error</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">})</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">promiseAll</span><span style="color:#D4D4D4;">([</span><span style="color:#9CDCFE;">p1</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">p2</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">p3</span><span style="color:#D4D4D4;">]).</span><span style="color:#DCDCAA;">then</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">results</span><span style="color:#569CD6;"> =&gt;</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">results</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}).</span><span style="color:#DCDCAA;">catch</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">error</span><span style="color:#569CD6;"> =&gt;</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">error</span><span style="color:#D4D4D4;">)      </span><span style="color:#6A9955;">// &#39;p3 error&#39;</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">})</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="实现promise-race" tabindex="-1"><a class="header-anchor" href="#实现promise-race"><span>实现promise.race</span></a></h4><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> PromiseRace</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">promises</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#569CD6;"> new</span><span style="color:#4EC9B0;"> Promise</span><span style="color:#D4D4D4;">((</span><span style="color:#9CDCFE;">resolve</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">reject</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">      for</span><span style="color:#D4D4D4;"> (</span><span style="color:#569CD6;">let</span><span style="color:#9CDCFE;"> i</span><span style="color:#D4D4D4;"> = </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">; </span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;"> &lt; </span><span style="color:#9CDCFE;">promises</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">length</span><span style="color:#D4D4D4;">; </span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">++) {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">          promises</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">].</span><span style="color:#DCDCAA;">then</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">value</span><span style="color:#569CD6;"> =&gt;</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">              return</span><span style="color:#DCDCAA;"> resolve</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">value</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">          }, </span><span style="color:#9CDCFE;">error</span><span style="color:#569CD6;"> =&gt;</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">              reject</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">error</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">          })</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">      }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  })</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">let</span><span style="color:#9CDCFE;"> p1</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">new</span><span style="color:#4EC9B0;"> Promise</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">resolve</span><span style="color:#569CD6;"> =&gt;</span><span style="color:#DCDCAA;"> resolve</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;p1&#39;</span><span style="color:#D4D4D4;">))</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">let</span><span style="color:#9CDCFE;"> p2</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">new</span><span style="color:#4EC9B0;"> Promise</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">resolve</span><span style="color:#569CD6;"> =&gt;</span><span style="color:#DCDCAA;"> resolve</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;p2&#39;</span><span style="color:#D4D4D4;">))</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">let</span><span style="color:#9CDCFE;"> p3</span><span style="color:#D4D4D4;"> = </span><span style="color:#4EC9B0;">Promise</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">reject</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;p3 error&#39;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">promiseAll</span><span style="color:#D4D4D4;">([</span><span style="color:#9CDCFE;">p1</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">p2</span><span style="color:#D4D4D4;">]).</span><span style="color:#DCDCAA;">then</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">results</span><span style="color:#569CD6;"> =&gt;</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">results</span><span style="color:#D4D4D4;">)    </span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}).</span><span style="color:#DCDCAA;">catch</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">error</span><span style="color:#569CD6;"> =&gt;</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">error</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">})</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">// p1</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">promiseAll</span><span style="color:#D4D4D4;">([</span><span style="color:#9CDCFE;">p1</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">p2</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">p3</span><span style="color:#D4D4D4;">]).</span><span style="color:#DCDCAA;">then</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">results</span><span style="color:#569CD6;"> =&gt;</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">results</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}).</span><span style="color:#DCDCAA;">catch</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">error</span><span style="color:#569CD6;"> =&gt;</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">error</span><span style="color:#D4D4D4;">)      </span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">})</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">// p1</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="√23、根据数组中对象的某一个属性值进行排序" tabindex="-1"><a class="header-anchor" href="#√23、根据数组中对象的某一个属性值进行排序"><span>√23、根据数组中对象的某一个属性值进行排序</span></a></h3><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#569CD6;">var</span><span style="color:#9CDCFE;"> arr</span><span style="color:#D4D4D4;"> = [</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  { </span><span style="color:#9CDCFE;">name:</span><span style="color:#CE9178;"> &#39;baby&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">age:</span><span style="color:#B5CEA8;"> 0</span><span style="color:#D4D4D4;"> },</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  { </span><span style="color:#9CDCFE;">name:</span><span style="color:#CE9178;"> &#39;aaa&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">age:</span><span style="color:#B5CEA8;"> 18</span><span style="color:#D4D4D4;"> },</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  { </span><span style="color:#9CDCFE;">name:</span><span style="color:#CE9178;"> &#39;bbb&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">age:</span><span style="color:#B5CEA8;"> 8</span><span style="color:#D4D4D4;"> }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">];</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">// 方法一</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> compare</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">property</span><span style="color:#D4D4D4;">){</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#569CD6;"> function</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">a</span><span style="color:#D4D4D4;">,</span><span style="color:#9CDCFE;">b</span><span style="color:#D4D4D4;">){</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">      var</span><span style="color:#9CDCFE;"> value1</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">a</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">property</span><span style="color:#D4D4D4;">];</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">      var</span><span style="color:#9CDCFE;"> value2</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">b</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">property</span><span style="color:#D4D4D4;">];</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">      return</span><span style="color:#9CDCFE;"> value1</span><span style="color:#D4D4D4;"> - </span><span style="color:#9CDCFE;">value2</span><span style="color:#D4D4D4;">;</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">sort</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">compare</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;age&#39;</span><span style="color:#D4D4D4;">))</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">// 方法二</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">sort</span><span style="color:#D4D4D4;">((</span><span style="color:#9CDCFE;">a</span><span style="color:#D4D4D4;">,</span><span style="color:#9CDCFE;">b</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#9CDCFE;"> a</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">age</span><span style="color:#D4D4D4;"> - </span><span style="color:#9CDCFE;">b</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">age</span><span style="color:#D4D4D4;">)</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_24、ajax" tabindex="-1"><a class="header-anchor" href="#_24、ajax"><span>24、ajax</span></a></h3><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#569CD6;">let</span><span style="color:#9CDCFE;"> xhr</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">new</span><span style="color:#DCDCAA;"> XMLHttpRequest</span><span style="color:#D4D4D4;">()      </span><span style="color:#6A9955;">// 创建Ajax对象</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">xhr</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">open</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;get&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;/xx&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#569CD6;">true</span><span style="color:#D4D4D4;">)        </span><span style="color:#6A9955;">// xhr发送请求    </span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">// true 异步 false 同步 true是在等待服务器响应时执行其他脚本，当响应就绪后对响应进行处理；false是等待服务器响应再执行</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">xhr</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">onreadystatechange</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;">() { </span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">xhr</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">readyState</span><span style="color:#D4D4D4;"> == </span><span style="color:#B5CEA8;">4</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">    if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">xhr</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">status</span><span style="color:#D4D4D4;"> == </span><span style="color:#B5CEA8;">200</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">      console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">xhr</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">responseText</span><span style="color:#D4D4D4;">);</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">xhr</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">send</span><span style="color:#D4D4D4;">()    </span><span style="color:#6A9955;">// 如果是post  send(data)</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_25、封装一个jsonp" tabindex="-1"><a class="header-anchor" href="#_25、封装一个jsonp"><span>25、封装一个jsonp</span></a></h3><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> jsonp</span><span style="color:#D4D4D4;">({</span><span style="color:#9CDCFE;">url</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">params</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">callbackName</span><span style="color:#D4D4D4;">}) {</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  function</span><span style="color:#DCDCAA;"> generateUrl</span><span style="color:#D4D4D4;">() {</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">    let</span><span style="color:#9CDCFE;"> dataUrl</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&#39;&#39;</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">    for</span><span style="color:#D4D4D4;"> (</span><span style="color:#569CD6;">let</span><span style="color:#9CDCFE;"> key</span><span style="color:#569CD6;"> in</span><span style="color:#9CDCFE;"> params</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">      dataUrl</span><span style="color:#D4D4D4;"> += </span><span style="color:#CE9178;">\`</span><span style="color:#569CD6;">\${</span><span style="color:#9CDCFE;">key</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">=</span><span style="color:#569CD6;">\${</span><span style="color:#9CDCFE;">params</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">key</span><span style="color:#D4D4D4;">]</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">&amp;\`</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    }</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">    return</span><span style="color:#CE9178;"> \`</span><span style="color:#569CD6;">\${</span><span style="color:#9CDCFE;">url</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">?</span><span style="color:#569CD6;">\${</span><span style="color:#9CDCFE;">dataUrl</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">callback=</span><span style="color:#569CD6;">\${</span><span style="color:#9CDCFE;">callbackName</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">\`</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  }</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#569CD6;"> new</span><span style="color:#4EC9B0;"> Promise</span><span style="color:#D4D4D4;">((</span><span style="color:#9CDCFE;">resolve</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">reject</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">    let</span><span style="color:#9CDCFE;"> scriptEle</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">document</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">createElement</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;script&#39;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">    scriptEle</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">src</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">generateUrl</span><span style="color:#D4D4D4;">()</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">    document</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">appendChild</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">scriptEle</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  </span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">    window</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">callbackName</span><span style="color:#D4D4D4;">] = </span><span style="color:#9CDCFE;">data</span><span style="color:#569CD6;"> =&gt;</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">      resolve</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">data</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">      document</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">removeChild</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">scriptEle</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  })</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">jsonp</span><span style="color:#D4D4D4;">({</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  url:</span><span style="color:#CE9178;"> &#39;http://xxx&#39;</span><span style="color:#D4D4D4;">, </span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  params:</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">    name:</span><span style="color:#CE9178;"> &#39;ccc&#39;</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">    age:</span><span style="color:#B5CEA8;"> 22</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  }, </span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  callbackName:</span><span style="color:#CE9178;"> &#39;callback1&#39;</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}).</span><span style="color:#DCDCAA;">then</span><span style="color:#D4D4D4;">((</span><span style="color:#9CDCFE;">data</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">data</span><span style="color:#D4D4D4;">);</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">})</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_26、利用-async-await-实现-sleep-效果" tabindex="-1"><a class="header-anchor" href="#_26、利用-async-await-实现-sleep-效果"><span>26、利用 async await 实现 sleep 效果</span></a></h3><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> sleep</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">fn</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">delay</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#569CD6;"> new</span><span style="color:#4EC9B0;"> Promise</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">resolve</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">reject</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">    setTimeout</span><span style="color:#D4D4D4;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">      resolve</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">fn</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    }, </span><span style="color:#9CDCFE;">delay</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  })</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> sayHello</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;hello, &#39;</span><span style="color:#D4D4D4;"> + </span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;">);</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">async</span><span style="color:#569CD6;"> function</span><span style="color:#DCDCAA;"> test</span><span style="color:#D4D4D4;">() {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  await</span><span style="color:#DCDCAA;"> sleep</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">sayHello</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;ccc&#39;</span><span style="color:#D4D4D4;">), </span><span style="color:#B5CEA8;">1000</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  await</span><span style="color:#DCDCAA;"> sleep</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">sayHello</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;sss&#39;</span><span style="color:#D4D4D4;">), </span><span style="color:#B5CEA8;">1000</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  await</span><span style="color:#DCDCAA;"> sleep</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">sayHello</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;mmm&#39;</span><span style="color:#D4D4D4;">), </span><span style="color:#B5CEA8;">1000</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">test</span><span style="color:#D4D4D4;">()</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_27、图片懒加载" tabindex="-1"><a class="header-anchor" href="#_27、图片懒加载"><span>27、图片懒加载</span></a></h3><p>首先，给所有的图片一个占位资源：</p><div class="language-html line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-html;"><code><span class="line"><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">img</span><span style="color:#9CDCFE;"> src</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;default.jpg&quot;</span><span style="color:#9CDCFE;"> data-src</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;https://www.xxx.com/target-1.jpg&quot;</span><span style="color:#808080;"> /&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">img</span><span style="color:#9CDCFE;"> src</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;default.jpg&quot;</span><span style="color:#9CDCFE;"> data-src</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;https://www.xxx.com/target-2.jpg&quot;</span><span style="color:#808080;"> /&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">......</span></span></span>
<span class="line"><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">img</span><span style="color:#9CDCFE;"> src</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;default.jpg&quot;</span><span style="color:#9CDCFE;"> data-src</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;https://www.xxx.com/target-39.jpg&quot;</span><span style="color:#808080;"> /&gt;</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_1、clientheight、scrolltop-和-offsettop" tabindex="-1"><a class="header-anchor" href="#_1、clientheight、scrolltop-和-offsettop"><span>1、clientHeight、scrollTop 和 offsetTop</span></a></h4><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#569CD6;">let</span><span style="color:#9CDCFE;"> imgs</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">document</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getElementsByTagName</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;img&#39;</span><span style="color:#D4D4D4;">),</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">    count</span><span style="color:#D4D4D4;"> = </span><span style="color:#B5CEA8;">0</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> lazyLoad</span><span style="color:#D4D4D4;">() {</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  let</span><span style="color:#9CDCFE;"> clientHeight</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">document</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">documentElement</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">clientHeight</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  let</span><span style="color:#9CDCFE;"> scrollTop</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">document</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">documentElement</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">scrollTop</span><span style="color:#D4D4D4;"> || </span><span style="color:#9CDCFE;">document</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">body</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">scrollTop</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  for</span><span style="color:#D4D4D4;"> (</span><span style="color:#569CD6;">let</span><span style="color:#9CDCFE;"> i</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">count</span><span style="color:#D4D4D4;">; </span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;"> &lt; </span><span style="color:#9CDCFE;">imgs</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">length</span><span style="color:#D4D4D4;">; </span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">++) {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">    if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">clientHeight</span><span style="color:#D4D4D4;"> + </span><span style="color:#9CDCFE;">scrollTop</span><span style="color:#D4D4D4;"> &gt; </span><span style="color:#9CDCFE;">imgs</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">].</span><span style="color:#9CDCFE;">offsetHeight</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">      if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">imgs</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">].</span><span style="color:#DCDCAA;">getAttribute</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;src&#39;</span><span style="color:#D4D4D4;">) !== </span><span style="color:#CE9178;">&#39;default.jpg&#39;</span><span style="color:#D4D4D4;">) </span><span style="color:#C586C0;">continue</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">      imgs</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">].</span><span style="color:#9CDCFE;">src</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">imgs</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">].</span><span style="color:#DCDCAA;">getAttribute</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;data-src&#39;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">      count</span><span style="color:#D4D4D4;">++</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">// 首次加载</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">lazyLoad</span><span style="color:#D4D4D4;">()</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">// 通过监听 scroll 事件来判断图片是否到达视口，别忘了防抖节流</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">window</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">addEventListener</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;scroll&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#DCDCAA;">throttle</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">lazyLoad</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">160</span><span style="color:#D4D4D4;">))</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2、getboundingclientrect" tabindex="-1"><a class="header-anchor" href="#_2、getboundingclientrect"><span>2、getBoundingClientRect</span></a></h4><p>dom 元素的 getBoundingClientRect().top 属性可以直接判断图片是否出现在了当前视口。</p><p>只修改一下 lazyLoad 函数</p><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> lazyLoad</span><span style="color:#D4D4D4;">() {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  for</span><span style="color:#D4D4D4;"> (</span><span style="color:#569CD6;">let</span><span style="color:#9CDCFE;"> i</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">count</span><span style="color:#D4D4D4;">; </span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;"> &lt; </span><span style="color:#9CDCFE;">imgs</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">length</span><span style="color:#D4D4D4;">; </span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">++) {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">    if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">imgs</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">].</span><span style="color:#DCDCAA;">getBoundingClientRect</span><span style="color:#D4D4D4;">().</span><span style="color:#9CDCFE;">top</span><span style="color:#D4D4D4;"> &lt; </span><span style="color:#9CDCFE;">document</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">documentElement</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">clientHeight</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">      if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">imgs</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">].</span><span style="color:#DCDCAA;">getAttribute</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;src&#39;</span><span style="color:#D4D4D4;">) !== </span><span style="color:#CE9178;">&#39;default.jpg&#39;</span><span style="color:#D4D4D4;">) </span><span style="color:#C586C0;">continue</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">      imgs</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">].</span><span style="color:#9CDCFE;">src</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">imgs</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">].</span><span style="color:#DCDCAA;">getAttribute</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;data-src&#39;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">      count</span><span style="color:#D4D4D4;">++</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3、intersectionobserver" tabindex="-1"><a class="header-anchor" href="#_3、intersectionobserver"><span>3、IntersectionObserver</span></a></h4><p>IntersectionObserver 浏览器内置的 API，实现了监听 window 的 scroll 事件、判断是否在视口中 以及 节流 三大功能。该 API 需要 polyfill。</p><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#569CD6;">let</span><span style="color:#9CDCFE;"> imgs</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">document</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getElementsByTagName</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;img&#39;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> observe</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">new</span><span style="color:#DCDCAA;"> IntersectionObserver</span><span style="color:#D4D4D4;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  for</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">let</span><span style="color:#9CDCFE;"> i</span><span style="color:#D4D4D4;"> = </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">; </span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;"> &lt; </span><span style="color:#9CDCFE;">imgs</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">length</span><span style="color:#D4D4D4;">; </span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">++) {</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">    // 通过这个属性判断是否在视口中，返回 boolean 值</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">    if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">imgs</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">].</span><span style="color:#9CDCFE;">isIntersecting</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">      const</span><span style="color:#4FC1FF;"> imgElement</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">img</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">target</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">      imgElement</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">src</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">imgElement</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getAttribute</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;data-src&#39;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">      observe</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">unobserve</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">imgElement</span><span style="color:#D4D4D4;">)   </span><span style="color:#6A9955;">// 解除观察</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">})</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">Array</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">from</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">imgs</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">forEach</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">item</span><span style="color:#569CD6;"> =&gt;</span><span style="color:#9CDCFE;"> observe</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">observe</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">item</span><span style="color:#D4D4D4;">))</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_28、事件委托应用" tabindex="-1"><a class="header-anchor" href="#_28、事件委托应用"><span>28、事件委托应用</span></a></h3><h4 id="给li绑定点击事件" tabindex="-1"><a class="header-anchor" href="#给li绑定点击事件"><span>给li绑定点击事件</span></a></h4><div class="language-html line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-html;"><code><span class="line"><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">ul</span><span style="color:#808080;">&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#808080;">    &lt;</span><span style="color:#569CD6;">li</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">知否知否，点我应有弹框在手！</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">li</span><span style="color:#808080;">&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#808080;">    &lt;</span><span style="color:#569CD6;">li</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">知否知否，点我应有弹框在手！</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">li</span><span style="color:#808080;">&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#808080;">    &lt;</span><span style="color:#569CD6;">li</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">知否知否，点我应有弹框在手！</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">li</span><span style="color:#808080;">&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#808080;">    &lt;</span><span style="color:#569CD6;">li</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">知否知否，点我应有弹框在手！</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">li</span><span style="color:#808080;">&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#808080;">    &lt;</span><span style="color:#569CD6;">li</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">知否知否，点我应有弹框在手！</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">li</span><span style="color:#808080;">&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">ul</span><span style="color:#808080;">&gt;</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#569CD6;">let</span><span style="color:#9CDCFE;"> ul</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">document</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">querySelector</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;ul&#39;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">ul</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">addEventListener</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;click&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;">() {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">e</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">target</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">tagName</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">toLowerCase</span><span style="color:#D4D4D4;">() == </span><span style="color:#CE9178;">&#39;li&#39;</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">    e</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">target</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">style</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">backgroundColor</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&#39;blue&#39;</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">})</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="通用的事件绑定函数" tabindex="-1"><a class="header-anchor" href="#通用的事件绑定函数"><span>通用的事件绑定函数</span></a></h4><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> bindEvent</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">elem</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">type</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">selector</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">fn</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">fn</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">null</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">    fn</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">selector</span><span style="color:#D4D4D4;">;</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">    selector</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">null</span><span style="color:#D4D4D4;">;</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  }</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  elem</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">addEventListener</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">type</span><span style="color:#D4D4D4;">, </span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">e</span><span style="color:#D4D4D4;">){</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">    var</span><span style="color:#9CDCFE;"> target</span><span style="color:#D4D4D4;">;</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">    if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">selector</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">      target</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">e</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">target</span><span style="color:#D4D4D4;">;</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">      // matches 用来判断当前DOM节点能否完全匹配对应的CSS选择器规则；</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">      // 如果匹配成功，返回true，反之则返回false。</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">      if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">target</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">matches</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">selector</span><span style="color:#D4D4D4;">)) {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">        fn</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">call</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">target</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">e</span><span style="color:#D4D4D4;">);</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">      }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    } </span><span style="color:#C586C0;">else</span><span style="color:#D4D4D4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">      fn</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">e</span><span style="color:#D4D4D4;">);</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">    }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  })</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">// 使用代理</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">var</span><span style="color:#9CDCFE;"> div1</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">document</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getElementById</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;div1&#39;</span><span style="color:#D4D4D4;">);</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">bindEvent</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">div1</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;click&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;a&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">e</span><span style="color:#D4D4D4;">){</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">innerHtml</span><span style="color:#D4D4D4;">);</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">})</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">// 不使用代理</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">var</span><span style="color:#9CDCFE;"> a</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">document</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getElementById</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;a1&#39;</span><span style="color:#D4D4D4;">);</span></span></span>
<span class="line"><span class="line"><span style="color:#DCDCAA;">bindEvent</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">a</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;click&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">e</span><span style="color:#D4D4D4;">){</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">a</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">innerHtml</span><span style="color:#D4D4D4;">);</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">})</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_29、用正则实现-trim-去掉首位多余的空格" tabindex="-1"><a class="header-anchor" href="#_29、用正则实现-trim-去掉首位多余的空格"><span>29、用正则实现 trim() 去掉首位多余的空格</span></a></h3><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#6A9955;">// 去掉首位多余的空格</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> trim</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">str</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#9CDCFE;"> str</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">replace</span><span style="color:#D4D4D4;">(</span><span style="color:#D16969;">/</span><span style="color:#DCDCAA;">^</span><span style="color:#D16969;">\\s</span><span style="color:#D7BA7D;">+</span><span style="color:#DCDCAA;">|</span><span style="color:#D16969;">\\s</span><span style="color:#D7BA7D;">+</span><span style="color:#DCDCAA;">$</span><span style="color:#D16969;">/</span><span style="color:#569CD6;">g</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;&#39;</span><span style="color:#D4D4D4;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_30、数字转字符串千分位-暂时没有掌握" tabindex="-1"><a class="header-anchor" href="#_30、数字转字符串千分位-暂时没有掌握"><span>30、数字转字符串千分位（暂时没有掌握）</span></a></h3><h4 id="方法一-利用字符串提供的tolocalestring-方法处理-此方法最简单" tabindex="-1"><a class="header-anchor" href="#方法一-利用字符串提供的tolocalestring-方法处理-此方法最简单"><span>方法一:利用字符串提供的toLocaleString()方法处理,此方法最简单</span></a></h4><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#569CD6;">var</span><span style="color:#9CDCFE;"> num</span><span style="color:#D4D4D4;"> = </span><span style="color:#B5CEA8;">1450068</span><span style="color:#D4D4D4;">;</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">num</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">toLocaleString</span><span style="color:#D4D4D4;">()) </span><span style="color:#6A9955;">// 1,450,068</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="方法二-截取末尾三个字符的功能可以通过字符串类型的slice、substr或substring方法做到" tabindex="-1"><a class="header-anchor" href="#方法二-截取末尾三个字符的功能可以通过字符串类型的slice、substr或substring方法做到"><span>方法二:截取末尾三个字符的功能可以通过字符串类型的slice、substr或substring方法做到</span></a></h4><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> toThousandsNum</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">num</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  var</span><span style="color:#9CDCFE;"> num</span><span style="color:#D4D4D4;"> = (</span><span style="color:#9CDCFE;">num</span><span style="color:#D4D4D4;"> || </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">toString</span><span style="color:#D4D4D4;">(),</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">        result</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&#39;&#39;</span><span style="color:#D4D4D4;">;</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">   while</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">num</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">length</span><span style="color:#D4D4D4;"> &gt; </span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">       //此处用数组的slice方法，如果是负数，那么它规定从数组尾部开始算起的位置</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">       result</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&#39;,&#39;</span><span style="color:#D4D4D4;"> + </span><span style="color:#9CDCFE;">num</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">slice</span><span style="color:#D4D4D4;">(-</span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">) + </span><span style="color:#9CDCFE;">result</span><span style="color:#D4D4D4;">;</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">       num</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">num</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">slice</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">num</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">length</span><span style="color:#D4D4D4;"> - </span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">);</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">   }</span></span></span>
<span class="line"><span class="line"><span style="color:#6A9955;">   // 如果数字的开头为0,不需要逗号</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">   if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">num</span><span style="color:#D4D4D4;">){</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">     result</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">num</span><span style="color:#D4D4D4;"> + </span><span style="color:#9CDCFE;">result</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">   }</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">   return</span><span style="color:#9CDCFE;"> result</span><span style="color:#D4D4D4;">;</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">toThousandsNum</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">000123456789123</span><span style="color:#D4D4D4;">)) </span><span style="color:#6A9955;">// 123,456,789,123</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="方法三" tabindex="-1"><a class="header-anchor" href="#方法三"><span>方法三:</span></a></h4><p>把数字通过toString，转换成字符串后，打散为数组，再从末尾开始，逐个把数组中的元素插入到新数组（result）的开头，每插入一个元素，counter就计一次数（加1），当counter为3的倍数时,利用取余的方式,就插入一个逗号，但是要注意开头（i为0时）不需要逗号。最后通过调用新数组的join方法得出结果</p><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> toThousands</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">num</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  var</span><span style="color:#9CDCFE;"> result</span><span style="color:#D4D4D4;"> = [],</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  counter</span><span style="color:#D4D4D4;"> = </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">;</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  num</span><span style="color:#D4D4D4;"> = (</span><span style="color:#9CDCFE;">num</span><span style="color:#D4D4D4;"> || </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">toString</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">split</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;&#39;</span><span style="color:#D4D4D4;">);</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  for</span><span style="color:#D4D4D4;"> (</span><span style="color:#569CD6;">var</span><span style="color:#9CDCFE;"> i</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">num</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">length</span><span style="color:#D4D4D4;"> - </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">; </span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;"> &gt;= </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">; </span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">--) {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">      counter</span><span style="color:#D4D4D4;">++;</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">      result</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">unshift</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">num</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">]);</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">      if</span><span style="color:#D4D4D4;"> (!(</span><span style="color:#9CDCFE;">counter</span><span style="color:#D4D4D4;"> % </span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">) &amp;&amp; </span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;"> != </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">         result</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">unshift</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;,&#39;</span><span style="color:#D4D4D4;">);</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">      }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  }</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#9CDCFE;"> result</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">join</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;&#39;</span><span style="color:#D4D4D4;">);</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">toThousands</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">236471283572983412</span><span style="color:#D4D4D4;">)); </span><span style="color:#6A9955;">// 236,471,283,572,983,420</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="方法四-不把字符串打散为数组-始终对字符串操作-下面的这种操作字符串的方式是对上面的改良" tabindex="-1"><a class="header-anchor" href="#方法四-不把字符串打散为数组-始终对字符串操作-下面的这种操作字符串的方式是对上面的改良"><span>方法四:不把字符串打散为数组，始终对字符串操作,下面的这种操作字符串的方式是对上面的改良</span></a></h4><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> toThousands</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">num</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  var</span><span style="color:#9CDCFE;"> result</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&#39;&#39;</span><span style="color:#D4D4D4;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  counter</span><span style="color:#D4D4D4;"> = </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">;</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">  num</span><span style="color:#D4D4D4;"> = (</span><span style="color:#9CDCFE;">num</span><span style="color:#D4D4D4;"> || </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">toString</span><span style="color:#D4D4D4;">();</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  for</span><span style="color:#D4D4D4;"> (</span><span style="color:#569CD6;">var</span><span style="color:#9CDCFE;"> i</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">num</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">length</span><span style="color:#D4D4D4;"> - </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">; </span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;"> &gt;= </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">; </span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">--) {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">      counter</span><span style="color:#D4D4D4;">++;</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">      result</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">num</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">charAt</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">) + </span><span style="color:#9CDCFE;">result</span><span style="color:#D4D4D4;">;</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">      if</span><span style="color:#D4D4D4;"> (!(</span><span style="color:#9CDCFE;">counter</span><span style="color:#D4D4D4;"> % </span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">) &amp;&amp; </span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;"> != </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">        result</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&#39;,&#39;</span><span style="color:#D4D4D4;"> + </span><span style="color:#9CDCFE;">result</span><span style="color:#D4D4D4;">;</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">          </span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">      }</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  }</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#9CDCFE;"> result</span><span style="color:#D4D4D4;">;</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">toThousands</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">42371582378423</span><span style="color:#D4D4D4;">))  </span><span style="color:#6A9955;">// 42,371,582,378,423</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="方法五-正则表达式-此方法个人觉得比较难以理解-网上大牛写的" tabindex="-1"><a class="header-anchor" href="#方法五-正则表达式-此方法个人觉得比较难以理解-网上大牛写的"><span>方法五:正则表达式,此方法个人觉得比较难以理解,网上大牛写的</span></a></h4><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> toThousands</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">num</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  var</span><span style="color:#9CDCFE;"> numStr</span><span style="color:#D4D4D4;"> = (</span><span style="color:#9CDCFE;">num</span><span style="color:#D4D4D4;"> || </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">toString</span><span style="color:#D4D4D4;">();</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">   return</span><span style="color:#9CDCFE;"> numStr</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">replace</span><span style="color:#D4D4D4;">(</span><span style="color:#D16969;">/</span><span style="color:#CE9178;">(</span><span style="color:#D16969;">\\d</span><span style="color:#CE9178;">)(?=(?:</span><span style="color:#D16969;">\\d</span><span style="color:#D7BA7D;">{3}</span><span style="color:#CE9178;">)</span><span style="color:#D7BA7D;">+</span><span style="color:#DCDCAA;">$</span><span style="color:#CE9178;">)</span><span style="color:#D16969;">/</span><span style="color:#569CD6;">g</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;$1,&#39;</span><span style="color:#D4D4D4;">);</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> thousandth</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">str</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#9CDCFE;"> str</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">replace</span><span style="color:#D4D4D4;">(</span><span style="color:#D16969;">/\\d</span><span style="color:#CE9178;">(?=(?:</span><span style="color:#D16969;">\\d</span><span style="color:#D7BA7D;">{3}</span><span style="color:#CE9178;">)</span><span style="color:#D7BA7D;">+</span><span style="color:#CE9178;">(?:</span><span style="color:#D7BA7D;">\\.</span><span style="color:#D16969;">\\d</span><span style="color:#D7BA7D;">+</span><span style="color:#DCDCAA;">|$</span><span style="color:#CE9178;">))</span><span style="color:#D16969;">/</span><span style="color:#569CD6;">g</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;$&amp;,&#39;</span><span style="color:#D4D4D4;">);</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>31、文件大小单位转换</p><div class="language-javascript line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki dark-plus vp-code" style="background-color:#1E1E1E;color:#D4D4D4 language-javascript;"><code><span class="line"><span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> formatSizeUnits</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">kb</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  let</span><span style="color:#9CDCFE;"> units</span><span style="color:#D4D4D4;"> = [</span><span style="color:#CE9178;">&#39;KB&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;MB&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;GB&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;TB&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;PB&#39;</span><span style="color:#D4D4D4;">];</span></span></span>
<span class="line"><span class="line"><span style="color:#569CD6;">  let</span><span style="color:#9CDCFE;"> unitIndex</span><span style="color:#D4D4D4;"> = </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">;</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  while</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">kb</span><span style="color:#D4D4D4;"> &gt;= </span><span style="color:#B5CEA8;">1024</span><span style="color:#D4D4D4;"> &amp;&amp; </span><span style="color:#9CDCFE;">unitIndex</span><span style="color:#D4D4D4;"> &lt; </span><span style="color:#9CDCFE;">units</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">length</span><span style="color:#D4D4D4;"> - </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">) {</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">    kb</span><span style="color:#D4D4D4;"> /= </span><span style="color:#B5CEA8;">1024</span><span style="color:#D4D4D4;">;</span></span></span>
<span class="line"><span class="line"><span style="color:#9CDCFE;">    unitIndex</span><span style="color:#D4D4D4;">++;</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">  }</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#C586C0;">  return</span><span style="color:#CE9178;"> \`</span><span style="color:#569CD6;">\${</span><span style="color:#9CDCFE;">kb</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">toFixed</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">)</span><span style="color:#569CD6;">}</span><span style="color:#569CD6;"> \${</span><span style="color:#9CDCFE;">units</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">unitIndex</span><span style="color:#D4D4D4;">]</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">\`</span><span style="color:#D4D4D4;">;</span></span></span>
<span class="line"><span class="line"><span style="color:#D4D4D4;">}</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,169),o=[p];function c(i,r){return a(),n("div",null,o)}const t=s(e,[["render",c],["__file","手写js.html.vue"]]),d=JSON.parse('{"path":"/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E6%B1%87%E6%80%BB/%E6%89%8B%E5%86%99js.html","title":"","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"手写js代码","slug":"手写js代码","link":"#手写js代码","children":[{"level":3,"title":"√1、数据类型判断","slug":"√1、数据类型判断","link":"#√1、数据类型判断","children":[]},{"level":3,"title":"2、简单实现instanceof","slug":"_2、简单实现instanceof","link":"#_2、简单实现instanceof","children":[]},{"level":3,"title":"3、实现Object.create","slug":"_3、实现object-create","link":"#_3、实现object-create","children":[]},{"level":3,"title":"⭐4、实现 new 关键字","slug":"_4、实现-new-关键字","link":"#_4、实现-new-关键字","children":[]},{"level":3,"title":"5、手写call","slug":"_5、手写call","link":"#_5、手写call","children":[]},{"level":3,"title":"6、手写bind","slug":"_6、手写bind","link":"#_6、手写bind","children":[]},{"level":3,"title":"√7、函数科里化","slug":"√7、函数科里化","link":"#√7、函数科里化","children":[]},{"level":3,"title":"√8、偏函数","slug":"√8、偏函数","link":"#√8、偏函数","children":[]},{"level":3,"title":"√9、数组去重","slug":"√9、数组去重","link":"#√9、数组去重","children":[]},{"level":3,"title":"√10、数组扁平化","slug":"√10、数组扁平化","link":"#√10、数组扁平化","children":[]},{"level":3,"title":"√⭐11、数组排序","slug":"√11、数组排序","link":"#√11、数组排序","children":[]},{"level":3,"title":"√⭐12、深浅拷贝","slug":"√12、深浅拷贝","link":"#√12、深浅拷贝","children":[]},{"level":3,"title":"√13、数组随机排序","slug":"√13、数组随机排序","link":"#√13、数组随机排序","children":[]},{"level":3,"title":"√14、防抖","slug":"√14、防抖","link":"#√14、防抖","children":[]},{"level":3,"title":"√15、节流","slug":"√15、节流","link":"#√15、节流","children":[]},{"level":3,"title":"√16、随机数","slug":"√16、随机数","link":"#√16、随机数","children":[]},{"level":3,"title":"√17、随机字符串","slug":"√17、随机字符串","link":"#√17、随机字符串","children":[]},{"level":3,"title":"√18、斐波那契数列","slug":"√18、斐波那契数列","link":"#√18、斐波那契数列","children":[]},{"level":3,"title":"19、继承","slug":"_19、继承","link":"#_19、继承","children":[]},{"level":3,"title":"20、事件总线（发布订阅模式）","slug":"_20、事件总线-发布订阅模式","link":"#_20、事件总线-发布订阅模式","children":[]},{"level":3,"title":"21、字符串模板","slug":"_21、字符串模板","link":"#_21、字符串模板","children":[]},{"level":3,"title":"22、Promise","slug":"_22、promise","link":"#_22、promise","children":[]},{"level":3,"title":"√23、根据数组中对象的某一个属性值进行排序","slug":"√23、根据数组中对象的某一个属性值进行排序","link":"#√23、根据数组中对象的某一个属性值进行排序","children":[]},{"level":3,"title":"24、ajax","slug":"_24、ajax","link":"#_24、ajax","children":[]},{"level":3,"title":"25、封装一个jsonp","slug":"_25、封装一个jsonp","link":"#_25、封装一个jsonp","children":[]},{"level":3,"title":"26、利用 async await 实现 sleep 效果","slug":"_26、利用-async-await-实现-sleep-效果","link":"#_26、利用-async-await-实现-sleep-效果","children":[]},{"level":3,"title":"27、图片懒加载","slug":"_27、图片懒加载","link":"#_27、图片懒加载","children":[]},{"level":3,"title":"28、事件委托应用","slug":"_28、事件委托应用","link":"#_28、事件委托应用","children":[]},{"level":3,"title":"29、用正则实现 trim()    去掉首位多余的空格","slug":"_29、用正则实现-trim-去掉首位多余的空格","link":"#_29、用正则实现-trim-去掉首位多余的空格","children":[]},{"level":3,"title":"30、数字转字符串千分位（暂时没有掌握）","slug":"_30、数字转字符串千分位-暂时没有掌握","link":"#_30、数字转字符串千分位-暂时没有掌握","children":[]}]}],"git":{"updatedTime":1724740884000,"contributors":[{"name":"csmSimona","email":"980715844@qq.com","commits":1}]},"filePathRelative":"前端基础汇总/手写js.md","readingTime":{"minutes":19.15,"words":5744}}');export{t as comp,d as data};
